{
	"info": {
		"_postman_id": "7657ab7e-482a-418b-a668-4f7b24d40649",
		"name": "AWS_OSDUR3M18_CoreServices_Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12305779"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Discovery URL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"console.log(response);\r",
									"\r",
									"postman.setNextRequest(\"Create Group\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://cognito-idp.{{aws_region}}.amazonaws.com/{{cognito_userpool_id}}/.well-known/openid-configuration",
							"protocol": "https",
							"host": [
								"cognito-idp",
								"{{aws_region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"{{cognito_userpool_id}}",
								".well-known",
								"openid-configuration"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tokens",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenName",
									"value": "R3 Access Tokens",
									"type": "string"
								},
								{
									"key": "challengeAlgorithm",
									"value": "S256",
									"type": "string"
								},
								{
									"key": "redirect_uri",
									"value": "{{auth_callback_url}}",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								},
								{
									"key": "clientSecret",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "clientId",
									"value": "{{client_id}}",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "{{auth_authorize_url}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "client_authentication",
									"value": "header",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "{{auth_token_url}}",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "Update Tokens",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody)",
									"pm.environment.set(\"access_token\", data.access_token);",
									"pm.environment.set(\"id_token\", data.id_token);",
									"",
									"pm.test(\"Status should be OK\", () => {",
									"    pm.expect(1).to.eql(1);",
									"});",
									"const response = pm.response.json();",
									"console.log(response);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "refresh_token",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{client_secret}}",
									"type": "text"
								},
								{
									"key": "refresh_token",
									"value": "{{refresh_token}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "openid email",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth_token_url}}",
							"host": [
								"{{auth_token_url}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Core Services",
			"item": [
				{
					"name": "Entitlements",
					"item": [
						{
							"name": "Create Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201 or 409\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 409]);\r",
											"});\r",
											"pm.test(\"Status description - OK or Conflict.\", function () {\r",
											"    pm.expect(pm.response.status).to.be.oneOf([\"OK\", \"Conflict\", \"Created\"]);\r",
											"});\r",
											"\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "data-partition-id",
										"value": "{{data_partition_id}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"data.testing.user112\",\n    \"description\": \"Meant for testing\"\n}\n"
								},
								"url": {
									"raw": "{{osduonaws_base_url}}/api/entitlements/v2/groups",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"entitlements",
										"v2",
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Groups",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "data-partition-id",
										"value": "{{data_partition_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/entitlements/v2/groups",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"entitlements",
										"v2",
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add member to a Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200 or 409\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 409]);\r",
											"});\r",
											"pm.test(\"Status description - OK or Conflict.\", function () {\r",
											"    pm.expect(pm.response.status).to.be.oneOf([\"OK\", \"Conflict\"]);\r",
											"});\r",
											"\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "data-partition-id",
										"value": "{{data_partition_id}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n            \"email\": \"user112@testing.com\",\r\n            \"role\": \"OWNER\"\r\n}"
								},
								"url": {
									"raw": "{{osduonaws_base_url}}/api/entitlements/v2/groups/:groupName/members",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"entitlements",
										"v2",
										"groups",
										":groupName",
										"members"
									],
									"variable": [
										{
											"key": "groupName",
											"value": "data.testing.user112@osdu.example.com"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Members for a Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "data-partition-id",
										"value": "{{data_partition_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/entitlements/v2/groups/:groupName/members?limit=100",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"entitlements",
										"v2",
										"groups",
										":groupName",
										"members"
									],
									"query": [
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "role",
											"value": "OWNER",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "groupName",
											"value": "data.testing.user112@osdu.example.com"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Groups for Member",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "data-partition-id",
										"value": "{{data_partition_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/entitlements/v2/members/:memberEmail/groups?type=NONE",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"entitlements",
										"v2",
										"members",
										":memberEmail",
										"groups"
									],
									"query": [
										{
											"key": "type",
											"value": "NONE"
										}
									],
									"variable": [
										{
											"key": "memberEmail",
											"value": "user112@testing.com"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete member from a Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"//const response = pm.response.json();\r",
											"//console.log(JSON.stringify(response));\r",
											"postman.setNextRequest(\"Create LegalTag\")"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "data-partition-id",
										"value": "{{data_partition_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/entitlements/v2/groups/:groupName/members/:deleteGroupName",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"entitlements",
										"v2",
										"groups",
										":groupName",
										"members",
										":deleteGroupName"
									],
									"variable": [
										{
											"key": "groupName",
											"value": "data.testing.user112@osdu.example.com"
										},
										{
											"key": "deleteGroupName",
											"value": "user112@testing.com"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Legal",
					"item": [
						{
							"name": "Create LegalTag",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201 or 409\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 409]);\r",
											"});\r",
											"pm.test(\"Status description - OK or Conflict.\", function () {\r",
											"    pm.expect(pm.response.status).to.be.oneOf([\"OK\", \"Conflict\", \"Created\"]);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "data-partition-id",
										"value": "{{data_partition_id}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "correlation-id",
										"value": "workflow-correlation-8b8ca323-f4d6-4653-b5c1-a1f4b0c32ca1",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\t\r\n\t\"name\": \"public-usa-dataset-osduonaws-testing1\",\t\r\n\t\"properties\": {\t\t\r\n\t\t\"countryOfOrigin\":[\"US\"],        \r\n\t\t\"contractId\":\"A1234\",\r\n\t\t\"expirationDate\":2222222222222,        \r\n\t\t\"originator\":\"Default\",        \r\n\t\t\"dataType\":\"Public Domain Data\",        \r\n\t\t\"securityClassification\":\"Public\",        \r\n\t\t\"personalData\":\"No Personal Data\",        \r\n\t\t\"exportClassification\":\"EAR99\"\t\r\n\t\t},\t\r\n\t\"description\": \"A default legal tag\"\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{osduonaws_base_url}}/api/legal/v1/legaltags",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"legal",
										"v1",
										"legaltags"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get LegalTag",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "data-partition-id",
										"value": "{{data_partition_id}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/legal/v1/legaltags/osdu-public-usa-dataset-osduonaws-testing1",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"legal",
										"v1",
										"legaltags",
										"osdu-public-usa-dataset-osduonaws-testing1"
									]
								}
							},
							"response": []
						},
						{
							"name": "List LegalTags",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "data-partition-id",
										"value": "{{data_partition_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/legal/v1/legaltags",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"legal",
										"v1",
										"legaltags"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update LegalTag",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "data-partition-id",
										"value": "{{data_partition_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"osdu-public-usa-dataset-osduonaws-testing1\",\n\t\"contractId\":\"A1235\",\n\t\"expirationDate\":2222222222222,\n\t\"description\": \"A default legal tag\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{osduonaws_base_url}}/api/legal/v1/legaltags",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"legal",
										"v1",
										"legaltags"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get LegalTags",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "data-partition-id",
										"value": "{{data_partition_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"names\": [\n\t\t\"osdu-public-usa-dataset-osduonaws-testing1\"\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{osduonaws_base_url}}/api/legal/v1/legaltags:batchRetrieve",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"legal",
										"v1",
										"legaltags:batchRetrieve"
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate LegalTags",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "data-partition-id",
										"value": "{{data_partition_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"names\": [\n\t\t\"public-usa-dataset-osduonaws-testing1\"\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{osduonaws_base_url}}/api/legal/v1/legaltags:validate",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"legal",
										"v1",
										"legaltags:validate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get LegalTag Properties",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "data-partition-id",
										"value": "{{data_partition_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/legal/v1/legaltags:properties",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"legal",
										"v1",
										"legaltags:properties"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete LegalTag",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "data-partition-id",
										"value": "{{data_partition_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/legal/v1/legaltags/osdu-public-usa-dataset-osduonaws-testing1",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"legal",
										"v1",
										"legaltags",
										"osdu-public-usa-dataset-osduonaws-testing1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Storage",
					"item": [
						{
							"name": "Store Records",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"var data = JSON.parse(responseBody)\r",
											"var recordIds = data.recordIds;\r",
											"pm.environment.set(\"recordIds\", recordIds);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "data-partition-id",
										"value": "{{data_partition_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"data\": {\r\n            \"DefaultVerticalMeasurementID\": \"Rotary Table\",\r\n            \"FacilityEvents\": [\r\n                {\r\n                    \"EffectiveDateTime\": \"2002-05-12T00:00:00\",\r\n                    \"FacilityEventTypeID\": \"osdu:reference-data--FacilityEventType:SPUD:\"\r\n                },\r\n                {\r\n                    \"EffectiveDateTime\": \"2002-06-07T00:00:00\",\r\n                    \"FacilityEventTypeID\": \"osdu:reference-data--FacilityEventType:DRILLING%20FINISH:\"\r\n                }\r\n            ],\r\n            \"FacilityID\": \"A14-02-test\",\r\n            \"FacilityOperators\": [\r\n                {\r\n                    \"FacilityOperatorOrganisationID\": \"osdu:master-data--Organisation:NAM:\"\r\n                }\r\n            ],\r\n            \"FacilityStates\": [\r\n                {\r\n                    \"FacilityStateTypeID\": \"osdu:reference-data--FacilityStateType:Abandoned:\"\r\n                }\r\n            ],\r\n            \"FacilityTypeID\": \"osdu:reference-data--FacilityType:A14-02:\",\r\n            \"GeoContexts\": [\r\n                {\r\n                    \"GeoPoliticalEntityID\": \"osdu:master-data--GeoPoliticalEntity:Netherlands:\",\r\n                    \"GeoTypeID\": \"osdu:reference-data--GeoPoliticalEntityType:Country:\"\r\n                },\r\n                {\r\n                    \"GeoPoliticalEntityID\": \"osdu:master-data--GeoPoliticalEntity:A14:\",\r\n                    \"GeoTypeID\": \"osdu:reference-data--GeoPoliticalEntityType:BlockID:\"\r\n                }\r\n            ],\r\n            \"NameAliases\": [\r\n                {\r\n                    \"AliasName\": \"A14-02-test\",\r\n                    \"AliasNameTypeID\": \"osdu:reference-data--AliasNameType:WELL_NAME:\"\r\n                },\r\n                {\r\n                    \"AliasName\": \"8577-test\",\r\n                    \"AliasNameTypeID\": \"osdu:reference-data--AliasNameType:UWI:\"\r\n                }\r\n            ],\r\n            \"OperatingEnvironmentID\": \"osdu:reference-data--OperatingEnvironment:OFF:\",\r\n            \"Source\": \"TNO\",\r\n            \"SpatialLocation\": {\r\n                \"Wgs84Coordinates\": {\r\n                    \"features\": [\r\n                        {\r\n                            \"geometry\": {\r\n                                \"coordinates\": [\r\n                                    3.39488769,\r\n                                    55.32443529\r\n                                ],\r\n                                \"type\": \"Point\"\r\n                            },\r\n                            \"properties\": {},\r\n                            \"type\": \"Feature\"\r\n                        }\r\n                    ],\r\n                    \"type\": \"FeatureCollection\"\r\n                }\r\n            },\r\n            \"VerticalMeasurements\": [\r\n                {\r\n                    \"VerticalCRSID\": \"osdu:reference-data--CoordinateReferenceSystem:MSL:\",\r\n                    \"VerticalMeasurement\": 39.2,\r\n                    \"VerticalMeasurementID\": \"Rotary Table\",\r\n                    \"VerticalMeasurementPathID\": \"osdu:reference-data--VerticalMeasurementPath:Elevation:\",\r\n                    \"VerticalMeasurementUnitOfMeasureID\": \"osdu:reference-data--UnitOfMeasure:M:\"\r\n                }\r\n            ]\r\n        },\r\n        \"meta\": [],\r\n        \"kind\": \"osdu:wks:master-data--Well:1.0.0\",\r\n        \"acl\": {\r\n            \"viewers\": [\r\n                \"data.default.viewers@osdu.example.com\"\r\n            ],\r\n            \"owners\": [\r\n                \"data.default.owners@osdu.example.com\"\r\n            ]\r\n        },\r\n        \"legal\": {\r\n            \"legaltags\": [\r\n                \"osdu-public-usa-dataset\"\r\n            ],\r\n            \"otherRelevantDataCountries\": [\r\n                \"US\"\r\n            ],\r\n            \"status\": \"compliant\"\r\n        }\r\n    }\r\n]"
								},
								"url": {
									"raw": "{{osduonaws_base_url}}/api/storage/v2/records",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"records"
									]
								}
							},
							"response": []
						},
						{
							"name": "Query Records",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));;"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "data-partition-id",
										"value": "{{data_partition_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"records\": [\n\t\"{{recordIds}}\"\n]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{osduonaws_base_url}}/api/storage/v2/query/records",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"query",
										"records"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "data-partition-id",
										"value": "{{data_partition_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/storage/v2/records/{{recordIds}}",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"records",
										"{{recordIds}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Record Versions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "data-partition-id",
										"value": "{{data_partition_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/storage/v2/records/versions/{{recordIds}}",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"records",
										"versions",
										"{{recordIds}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Specific Record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "data-partition-id",
										"value": "{{data_partition_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/storage/v2/records/{{recordIds}}",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"records",
										"{{recordIds}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Query Records in Batch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": false
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "data-partition-id",
										"value": "{{data_partition_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"records\": [\n\t\"{{recordIds}}\"\n]}"
								},
								"url": {
									"raw": "{{osduonaws_base_url}}/api/storage/v2/query/records:batch",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"query",
										"records:batch"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "data-partition-id",
										"value": "{{data_partition_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/storage/v2/records/{{recordIds}}",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"storage",
										"v2",
										"records",
										"{{recordIds}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Search",
					"item": [
						{
							"name": "Query",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody)\r",
											"//pm.environment.set(\"access_token\",data.access_token);\r",
											"//pm.environment.set(\"id_token\",data.id_token);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "data-partition-id",
										"type": "text",
										"value": "{{data_partition_id}}"
									},
									{
										"key": "account-id",
										"type": "text",
										"value": "common",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"kind\": \"osdu:wks:master-data--Well:1.0.0\"\r\n}\r\n"
								},
								"url": {
									"raw": "{{osduonaws_base_url}}/api/search/v2/query",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"search",
										"v2",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Query With Cursor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "data-partition-id",
										"value": "{{data_partition_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"kind\": \"*:*:*:*\",\n    \"cursor\": \"\",\n    \"aggregateBy\": \"kind\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{osduonaws_base_url}}/api/search/v2/query_with_cursor",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"search",
										"v2",
										"query_with_cursor"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Schema",
					"item": [
						{
							"name": "Searches schemaInfo repository",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) Specifies the data partition to use. This should be either the partition name or crm account ID associated with the partition.",
										"key": "data-partition-id",
										"value": "{{data_partition_id}}"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/schema-service/v1/schema",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"schema-service",
										"v1",
										"schema"
									]
								},
								"description": "Searches for information of available schema (SchemInfo) in schema repository. Supports options to filter out the search contents. Required roles 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins' groups to get the schema."
							},
							"response": [
								{
									"name": "Bad user input. Mandatory fields missing or unacceptable value passed to API",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the data partition to use. This should be either the partition name or crm account ID associated with the partition.",
												"key": "data-partition-id",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schema?authority=osdu&source=wks&entityType=wellbore&schemaVersionMajor=*&schemaVersionMinor=*&status=PUBLISHED&scope=INTERNAL&latestVersion=true&limit=10&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schema"
											],
											"query": [
												{
													"key": "authority",
													"value": "osdu"
												},
												{
													"key": "source",
													"value": "wks"
												},
												{
													"key": "entityType",
													"value": "wellbore"
												},
												{
													"key": "schemaVersionMajor",
													"value": "*"
												},
												{
													"key": "schemaVersionMinor",
													"value": "*"
												},
												{
													"key": "status",
													"value": "PUBLISHED"
												},
												{
													"key": "scope",
													"value": "INTERNAL"
												},
												{
													"key": "latestVersion",
													"value": "true"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"errors\": [\n   {\n    \"message\": \"ea adipisicing culpa\",\n    \"reason\": \"consectetur Ut irure\",\n    \"domain\": \"labore\"\n   },\n   {\n    \"message\": \"officia\",\n    \"reason\": \"in ut irure voluptate cupidatat\",\n    \"domain\": \"ullamco\"\n   }\n  ],\n  \"code\": 86872712,\n  \"message\": \"id ex ipsum do\"\n }\n}"
								},
								{
									"name": "User not authorised to access the API",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the data partition to use. This should be either the partition name or crm account ID associated with the partition.",
												"key": "data-partition-id",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schema?authority=osdu&source=wks&entityType=wellbore&schemaVersionMajor=*&schemaVersionMinor=*&status=PUBLISHED&scope=INTERNAL&latestVersion=true&limit=10&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schema"
											],
											"query": [
												{
													"key": "authority",
													"value": "osdu"
												},
												{
													"key": "source",
													"value": "wks"
												},
												{
													"key": "entityType",
													"value": "wellbore"
												},
												{
													"key": "schemaVersionMajor",
													"value": "*"
												},
												{
													"key": "schemaVersionMinor",
													"value": "*"
												},
												{
													"key": "status",
													"value": "PUBLISHED"
												},
												{
													"key": "scope",
													"value": "INTERNAL"
												},
												{
													"key": "latestVersion",
													"value": "true"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"errors\": [\n   {\n    \"message\": \"ea adipisicing culpa\",\n    \"reason\": \"consectetur Ut irure\",\n    \"domain\": \"labore\"\n   },\n   {\n    \"message\": \"officia\",\n    \"reason\": \"in ut irure voluptate cupidatat\",\n    \"domain\": \"ullamco\"\n   }\n  ],\n  \"code\": 86872712,\n  \"message\": \"id ex ipsum do\"\n }\n}"
								},
								{
									"name": "Unknown or invalid user.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the data partition to use. This should be either the partition name or crm account ID associated with the partition.",
												"key": "data-partition-id",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schema?authority=osdu&source=wks&entityType=wellbore&schemaVersionMajor=*&schemaVersionMinor=*&status=PUBLISHED&scope=INTERNAL&latestVersion=true&limit=10&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schema"
											],
											"query": [
												{
													"key": "authority",
													"value": "osdu"
												},
												{
													"key": "source",
													"value": "wks"
												},
												{
													"key": "entityType",
													"value": "wellbore"
												},
												{
													"key": "schemaVersionMajor",
													"value": "*"
												},
												{
													"key": "schemaVersionMinor",
													"value": "*"
												},
												{
													"key": "status",
													"value": "PUBLISHED"
												},
												{
													"key": "scope",
													"value": "INTERNAL"
												},
												{
													"key": "latestVersion",
													"value": "true"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"errors\": [\n   {\n    \"message\": \"ea adipisicing culpa\",\n    \"reason\": \"consectetur Ut irure\",\n    \"domain\": \"labore\"\n   },\n   {\n    \"message\": \"officia\",\n    \"reason\": \"in ut irure voluptate cupidatat\",\n    \"domain\": \"ullamco\"\n   }\n  ],\n  \"code\": 86872712,\n  \"message\": \"id ex ipsum do\"\n }\n}"
								},
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the data partition to use. This should be either the partition name or crm account ID associated with the partition.",
												"key": "data-partition-id",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schema?authority=osdu&source=wks&entityType=wellbore&schemaVersionMajor=*&schemaVersionMinor=*&status=PUBLISHED&scope=INTERNAL&latestVersion=true&limit=10&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schema"
											],
											"query": [
												{
													"key": "authority",
													"value": "osdu"
												},
												{
													"key": "source",
													"value": "wks"
												},
												{
													"key": "entityType",
													"value": "wellbore"
												},
												{
													"key": "schemaVersionMajor",
													"value": "*"
												},
												{
													"key": "schemaVersionMinor",
													"value": "*"
												},
												{
													"key": "status",
													"value": "PUBLISHED"
												},
												{
													"key": "scope",
													"value": "INTERNAL"
												},
												{
													"key": "latestVersion",
													"value": "true"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"schemaInfos\": [\n  {\n   \"schemaIdentity\": {\n    \"authority\": \"osdu\",\n    \"entityType\": \"wellbore\",\n    \"source\": \"wks\",\n    \"schemaVersionMajor\": 1,\n    \"schemaVersionMinor\": 1,\n    \"schemaVersionPatch\": 0,\n    \"id\": \"osdu:wks:wellbore:1.0.0\"\n   },\n   \"status\": \"<string>\",\n   \"createdBy\": \"user@osdu.com\",\n   \"dateCreated\": \"<dateTime>\",\n   \"scope\": \"INTERNAL\",\n   \"supersededBy\": {\n    \"authority\": \"osdu\",\n    \"entityType\": \"wellbore\",\n    \"source\": \"wks\",\n    \"schemaVersionMajor\": 1,\n    \"schemaVersionMinor\": 1,\n    \"schemaVersionPatch\": 0,\n    \"id\": \"osdu:wks:wellbore:1.0.0\"\n   }\n  },\n  {\n   \"schemaIdentity\": {\n    \"authority\": \"osdu\",\n    \"entityType\": \"wellbore\",\n    \"source\": \"wks\",\n    \"schemaVersionMajor\": 1,\n    \"schemaVersionMinor\": 1,\n    \"schemaVersionPatch\": 0,\n    \"id\": \"osdu:wks:wellbore:1.0.0\"\n   },\n   \"status\": \"<string>\",\n   \"createdBy\": \"user@osdu.com\",\n   \"dateCreated\": \"<dateTime>\",\n   \"scope\": \"INTERNAL\",\n   \"supersededBy\": {\n    \"authority\": \"osdu\",\n    \"entityType\": \"wellbore\",\n    \"source\": \"wks\",\n    \"schemaVersionMajor\": 1,\n    \"schemaVersionMinor\": 1,\n    \"schemaVersionPatch\": 0,\n    \"id\": \"osdu:wks:wellbore:1.0.0\"\n   }\n  }\n ],\n \"offset\": 58242958,\n \"count\": 56268960,\n \"totalCount\": 73894130\n}"
								}
							]
						},
						{
							"name": "Gets schema from the schema repository.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) Specifies the data partition to use. This should be either the partition name or crm account ID associated with the partition.",
										"key": "data-partition-id",
										"value": "{{data_partition_id}}"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/schema-service/v1/schema/:id",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"schema-service",
										"v1",
										"schema",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "osdu:wks:work-product-component--WellLog:1.0.0",
											"description": "(Required) the system id of the schema"
										}
									]
								},
								"description": "Retrieve a schema using its system defined id. Required roles 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins' groups to get the schema."
							},
							"response": [
								{
									"name": "Requested Schema not found in repository",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the data partition to use. This should be either the partition name or crm account ID associated with the partition.",
												"key": "data-partition-id",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schema/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schema",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"errors\": [\n   {\n    \"message\": \"ea adipisicing culpa\",\n    \"reason\": \"consectetur Ut irure\",\n    \"domain\": \"labore\"\n   },\n   {\n    \"message\": \"officia\",\n    \"reason\": \"in ut irure voluptate cupidatat\",\n    \"domain\": \"ullamco\"\n   }\n  ],\n  \"code\": 86872712,\n  \"message\": \"id ex ipsum do\"\n }\n}"
								},
								{
									"name": "Bad user input. Mandatory fields missing or unacceptable value passed to API",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the data partition to use. This should be either the partition name or crm account ID associated with the partition.",
												"key": "data-partition-id",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schema/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schema",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"errors\": [\n   {\n    \"message\": \"ea adipisicing culpa\",\n    \"reason\": \"consectetur Ut irure\",\n    \"domain\": \"labore\"\n   },\n   {\n    \"message\": \"officia\",\n    \"reason\": \"in ut irure voluptate cupidatat\",\n    \"domain\": \"ullamco\"\n   }\n  ],\n  \"code\": 86872712,\n  \"message\": \"id ex ipsum do\"\n }\n}"
								},
								{
									"name": "search results matching criteria",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the data partition to use. This should be either the partition name or crm account ID associated with the partition.",
												"key": "data-partition-id",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schema/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schema",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n \"description\": \"The entity shapefile.\",\n \"title\": \"ShapeFile\",\n \"type\": \"object\",\n \"definitions\": {},\n \"properties\": {}\n}"
								},
								{
									"name": "User not authorised to access the API",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the data partition to use. This should be either the partition name or crm account ID associated with the partition.",
												"key": "data-partition-id",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schema/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schema",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"errors\": [\n   {\n    \"message\": \"ea adipisicing culpa\",\n    \"reason\": \"consectetur Ut irure\",\n    \"domain\": \"labore\"\n   },\n   {\n    \"message\": \"officia\",\n    \"reason\": \"in ut irure voluptate cupidatat\",\n    \"domain\": \"ullamco\"\n   }\n  ],\n  \"code\": 86872712,\n  \"message\": \"id ex ipsum do\"\n }\n}"
								},
								{
									"name": "Unknown or invalid user.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the data partition to use. This should be either the partition name or crm account ID associated with the partition.",
												"key": "data-partition-id",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schema/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schema",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"errors\": [\n   {\n    \"message\": \"ea adipisicing culpa\",\n    \"reason\": \"consectetur Ut irure\",\n    \"domain\": \"labore\"\n   },\n   {\n    \"message\": \"officia\",\n    \"reason\": \"in ut irure voluptate cupidatat\",\n    \"domain\": \"ullamco\"\n   }\n  ],\n  \"code\": 86872712,\n  \"message\": \"id ex ipsum do\"\n }\n}"
								}
							]
						},
						{
							"name": "Adds a schema to the schema repository.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) Specifies the data partition to use. This should be either the partition name or crm account ID associated with the partition.",
										"key": "data-partition-id",
										"value": "{{data_partition_id}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"schemaInfo\": {\r\n        \"schemaIdentity\": {\r\n            \"authority\": \"{{data_partition_id}}\",\r\n            \"source\": \"wks\",\r\n            \"entityType\": \"sample_{{$guid}}\",\r\n            \"schemaVersionMajor\": 1,\r\n            \"schemaVersionMinor\": 1,\r\n            \"schemaVersionPatch\": 0,\r\n            \"id\": \"SourceTest:wks:testEntity1:1.1.4.1\"\r\n        },\r\n        \"status\": \"DEVELOPMENT\"\r\n    },\r\n    \"schema\": {\r\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r\n        \"x-slb-lifecycle-state\": \"published\",\r\n        \"description\": \"Theentitywell.\",\r\n        \"title\": \"Well\",\r\n        \"type\": \"object\",\r\n        \"definitions\": {},\r\n        \"properties\": {\r\n            \"id\": {\r\n                \"description\": \"Previously called ResourceID or SRN which identifies this OSDU resource object without version.\",\r\n                \"title\": \"Entity ID\",\r\n                \"type\": \"string\",\r\n                \"pattern\": \"^[\\\\w\\\\-\\\\.]+:master-data\\\\-\\\\-Well:[\\\\w\\\\-\\\\.\\\\:\\\\%]+$\",\r\n                \"example\": \"namespace:master-data--Well:6c60ceb0-3521-57b7-9bd8-e1d7c9f66230\"\r\n            }\r\n        }\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{osduonaws_base_url}}/api/schema-service/v1/schema",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"schema-service",
										"v1",
										"schema"
									]
								},
								"description": "Adds a schema to the schema repository. The schemaIdentity must be unique. The `authority`, `source` and `entityType` will be registered if not present. If lower minor versions are registered the service validates the new schema against breaking changes; if breaking changes are discovered the request fails. **Note:** The schema must not reference other schemas with status `DEVELOPMENT`. Scope to a schema will be set by system based on partition id (`SHARED` for common tenant and `INTERNAL` for private tenant). Required roles 'users.datalake.editors' or 'users.datalake.admins' groups to create schema."
							},
							"response": [
								{
									"name": "Unknown or invalid user.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the data partition to use. This should be either the partition name or crm account ID associated with the partition.",
												"key": "data-partition-id",
												"value": "<string>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemaInfo\": {\n        \"schemaIdentity\": {\n            \"authority\": \"osdu\",\n            \"source\": \"wks\",\n            \"entityType\": \"wellbore\",\n            \"schemaVersionMajor\": 1,\n            \"schemaVersionMinor\": 0,\n            \"schemaVersionPatch\": 0\n        },\n        \"status\": \"PUBLISHED\"\n    },\n    \"schema\": {}\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schema"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"errors\": [\n   {\n    \"message\": \"ea adipisicing culpa\",\n    \"reason\": \"consectetur Ut irure\",\n    \"domain\": \"labore\"\n   },\n   {\n    \"message\": \"officia\",\n    \"reason\": \"in ut irure voluptate cupidatat\",\n    \"domain\": \"ullamco\"\n   }\n  ],\n  \"code\": 86872712,\n  \"message\": \"id ex ipsum do\"\n }\n}"
								},
								{
									"name": "Bad user input. Mandatory fields missing or unacceptable value passed to API",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the data partition to use. This should be either the partition name or crm account ID associated with the partition.",
												"key": "data-partition-id",
												"value": "<string>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemaInfo\": {\n        \"schemaIdentity\": {\n            \"authority\": \"osdu\",\n            \"source\": \"wks\",\n            \"entityType\": \"wellbore\",\n            \"schemaVersionMajor\": 1,\n            \"schemaVersionMinor\": 0,\n            \"schemaVersionPatch\": 0\n        },\n        \"status\": \"PUBLISHED\"\n    },\n    \"schema\": {}\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schema"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"errors\": [\n   {\n    \"message\": \"ea adipisicing culpa\",\n    \"reason\": \"consectetur Ut irure\",\n    \"domain\": \"labore\"\n   },\n   {\n    \"message\": \"officia\",\n    \"reason\": \"in ut irure voluptate cupidatat\",\n    \"domain\": \"ullamco\"\n   }\n  ],\n  \"code\": 86872712,\n  \"message\": \"id ex ipsum do\"\n }\n}"
								},
								{
									"name": "User not authorised to access the API",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the data partition to use. This should be either the partition name or crm account ID associated with the partition.",
												"key": "data-partition-id",
												"value": "<string>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemaInfo\": {\n        \"schemaIdentity\": {\n            \"authority\": \"osdu\",\n            \"source\": \"wks\",\n            \"entityType\": \"wellbore\",\n            \"schemaVersionMajor\": 1,\n            \"schemaVersionMinor\": 0,\n            \"schemaVersionPatch\": 0\n        },\n        \"status\": \"PUBLISHED\"\n    },\n    \"schema\": {}\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schema"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"errors\": [\n   {\n    \"message\": \"ea adipisicing culpa\",\n    \"reason\": \"consectetur Ut irure\",\n    \"domain\": \"labore\"\n   },\n   {\n    \"message\": \"officia\",\n    \"reason\": \"in ut irure voluptate cupidatat\",\n    \"domain\": \"ullamco\"\n   }\n  ],\n  \"code\": 86872712,\n  \"message\": \"id ex ipsum do\"\n }\n}"
								},
								{
									"name": "Schema created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the data partition to use. This should be either the partition name or crm account ID associated with the partition.",
												"key": "data-partition-id",
												"value": "<string>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemaInfo\": {\n        \"schemaIdentity\": {\n            \"authority\": \"osdu\",\n            \"source\": \"wks\",\n            \"entityType\": \"wellbore\",\n            \"schemaVersionMajor\": 1,\n            \"schemaVersionMinor\": 0,\n            \"schemaVersionPatch\": 0\n        },\n        \"status\": \"PUBLISHED\"\n    },\n    \"schema\": {}\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schema"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"schemaIdentity\": {\n  \"authority\": \"osdu\",\n  \"entityType\": \"wellbore\",\n  \"source\": \"wks\",\n  \"schemaVersionMajor\": 1,\n  \"schemaVersionMinor\": 1,\n  \"schemaVersionPatch\": 0,\n  \"id\": \"osdu:wks:wellbore:1.0.0\"\n },\n \"status\": \"<string>\",\n \"createdBy\": \"user@osdu.com\",\n \"dateCreated\": \"<dateTime>\",\n \"scope\": \"INTERNAL\",\n \"supersededBy\": {\n  \"authority\": \"osdu\",\n  \"entityType\": \"wellbore\",\n  \"source\": \"wks\",\n  \"schemaVersionMajor\": 1,\n  \"schemaVersionMinor\": 1,\n  \"schemaVersionPatch\": 0,\n  \"id\": \"osdu:wks:wellbore:1.0.0\"\n }\n}"
								}
							]
						},
						{
							"name": "Creates/Updates a schema in development status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
											"});\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"description": "(Required) Specifies the data partition to use. This should be either the partition name or crm account ID associated with the partition.",
										"key": "data-partition-id",
										"value": "{{data_partition_id}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schemaInfo\": {\n        \"schemaIdentity\": {\n            \"authority\": \"{{data_partition_id}}\",\n            \"source\": \"wks\",\n            \"entityType\": \"sample_{{$guid}}\",\n            \"schemaVersionMajor\": 1,\n            \"schemaVersionMinor\": 1,\n            \"schemaVersionPatch\": 0,\n            \"id\": \"SourceTest:wks:testEntity1:1.1.3\"\n        },\n        \"status\": \"DEVELOPMENT\"\n    },\n    \"schema\": {\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n        \"x-slb-lifecycle-state\": \"published\",\n        \"description\": \"Theentitywell.\",\n        \"title\": \"Well\",\n        \"type\": \"object\",\n        \"definitions\": {},\n        \"properties\": {\n            \"id\": {\n                \"description\": \"Previously called ResourceID or SRN which identifies this OSDU resource object without version.\",\n                \"title\": \"Entity ID\",\n                \"type\": \"string\",\n                \"pattern\": \"^[\\\\w\\\\-\\\\.]+:master-data\\\\-\\\\-Well:[\\\\w\\\\-\\\\.\\\\:\\\\%]+$\",\n                \"example\": \"namespace:master-data--Well:6c60ceb0-3521-57b7-9bd8-e1d7c9f66230\"\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{osduonaws_base_url}}/api/schema-service/v1/schema",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"schema-service",
										"v1",
										"schema"
									]
								},
								"description": "Creates a new schema or updates an already existing schema with status `DEVELOPMENT` in the schema repository. If a user tries to create/update a schema with status other then `DEVELOPMENT`, API will throw an exception. Any schema instance with the same schemaIdentity is replaced (in contrast to the immutability of `PUBLISHED` or `OBSOLETE` schemas). A schema state can also be changed from `DEVELOPMENT` to `PUBLISHED` or `OBSOLETE` while updating schema content or by providing the same schema content. **Note:** The schema may refer to other schema definitions in `DEVELOPMENT` state. If those schemas are updated themselves, it is the developer's responsibility to PUT the dependent schemas again to update the schemas. Scope for a schema can't be updated, its a system defined value. Required roles  'users.datalake.editors' or 'users.datalake.admins' groups to update schema."
							},
							"response": [
								{
									"name": "Unknown or invalid user.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the data partition to use. This should be either the partition name or crm account ID associated with the partition.",
												"key": "data-partition-id",
												"value": "<string>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemaInfo\": {\n        \"schemaIdentity\": {\n            \"authority\": \"osdu\",\n            \"source\": \"wks\",\n            \"entityType\": \"wellbore\",\n            \"schemaVersionMajor\": 1,\n            \"schemaVersionMinor\": 0,\n            \"schemaVersionPatch\": 0\n        },\n        \"status\": \"PUBLISHED\"\n    },\n    \"schema\": {}\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schema"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"errors\": [\n   {\n    \"message\": \"ea adipisicing culpa\",\n    \"reason\": \"consectetur Ut irure\",\n    \"domain\": \"labore\"\n   },\n   {\n    \"message\": \"officia\",\n    \"reason\": \"in ut irure voluptate cupidatat\",\n    \"domain\": \"ullamco\"\n   }\n  ],\n  \"code\": 86872712,\n  \"message\": \"id ex ipsum do\"\n }\n}"
								},
								{
									"name": "User not authorised to access the API",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the data partition to use. This should be either the partition name or crm account ID associated with the partition.",
												"key": "data-partition-id",
												"value": "<string>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemaInfo\": {\n        \"schemaIdentity\": {\n            \"authority\": \"osdu\",\n            \"source\": \"wks\",\n            \"entityType\": \"wellbore\",\n            \"schemaVersionMajor\": 1,\n            \"schemaVersionMinor\": 0,\n            \"schemaVersionPatch\": 0\n        },\n        \"status\": \"PUBLISHED\"\n    },\n    \"schema\": {}\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schema"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"errors\": [\n   {\n    \"message\": \"ea adipisicing culpa\",\n    \"reason\": \"consectetur Ut irure\",\n    \"domain\": \"labore\"\n   },\n   {\n    \"message\": \"officia\",\n    \"reason\": \"in ut irure voluptate cupidatat\",\n    \"domain\": \"ullamco\"\n   }\n  ],\n  \"code\": 86872712,\n  \"message\": \"id ex ipsum do\"\n }\n}"
								},
								{
									"name": "Schema created",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the data partition to use. This should be either the partition name or crm account ID associated with the partition.",
												"key": "data-partition-id",
												"value": "<string>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemaInfo\": {\n        \"schemaIdentity\": {\n            \"authority\": \"osdu\",\n            \"source\": \"wks\",\n            \"entityType\": \"wellbore\",\n            \"schemaVersionMajor\": 1,\n            \"schemaVersionMinor\": 0,\n            \"schemaVersionPatch\": 0\n        },\n        \"status\": \"PUBLISHED\"\n    },\n    \"schema\": {}\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schema"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"schemaIdentity\": {\n  \"authority\": \"osdu\",\n  \"entityType\": \"wellbore\",\n  \"source\": \"wks\",\n  \"schemaVersionMajor\": 1,\n  \"schemaVersionMinor\": 1,\n  \"schemaVersionPatch\": 0,\n  \"id\": \"osdu:wks:wellbore:1.0.0\"\n },\n \"status\": \"<string>\",\n \"createdBy\": \"user@osdu.com\",\n \"dateCreated\": \"<dateTime>\",\n \"scope\": \"INTERNAL\",\n \"supersededBy\": {\n  \"authority\": \"osdu\",\n  \"entityType\": \"wellbore\",\n  \"source\": \"wks\",\n  \"schemaVersionMajor\": 1,\n  \"schemaVersionMinor\": 1,\n  \"schemaVersionPatch\": 0,\n  \"id\": \"osdu:wks:wellbore:1.0.0\"\n }\n}"
								},
								{
									"name": "Schema updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the data partition to use. This should be either the partition name or crm account ID associated with the partition.",
												"key": "data-partition-id",
												"value": "<string>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemaInfo\": {\n        \"schemaIdentity\": {\n            \"authority\": \"osdu\",\n            \"source\": \"wks\",\n            \"entityType\": \"wellbore\",\n            \"schemaVersionMajor\": 1,\n            \"schemaVersionMinor\": 0,\n            \"schemaVersionPatch\": 0\n        },\n        \"status\": \"PUBLISHED\"\n    },\n    \"schema\": {}\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schema"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"schemaIdentity\": {\n  \"authority\": \"osdu\",\n  \"entityType\": \"wellbore\",\n  \"source\": \"wks\",\n  \"schemaVersionMajor\": 1,\n  \"schemaVersionMinor\": 1,\n  \"schemaVersionPatch\": 0,\n  \"id\": \"osdu:wks:wellbore:1.0.0\"\n },\n \"status\": \"<string>\",\n \"createdBy\": \"user@osdu.com\",\n \"dateCreated\": \"<dateTime>\",\n \"scope\": \"INTERNAL\",\n \"supersededBy\": {\n  \"authority\": \"osdu\",\n  \"entityType\": \"wellbore\",\n  \"source\": \"wks\",\n  \"schemaVersionMajor\": 1,\n  \"schemaVersionMinor\": 1,\n  \"schemaVersionPatch\": 0,\n  \"id\": \"osdu:wks:wellbore:1.0.0\"\n }\n}"
								},
								{
									"name": "Bad user input. Mandatory fields missing or unacceptable value passed to API",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the data partition to use. This should be either the partition name or crm account ID associated with the partition.",
												"key": "data-partition-id",
												"value": "<string>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemaInfo\": {\n        \"schemaIdentity\": {\n            \"authority\": \"osdu\",\n            \"source\": \"wks\",\n            \"entityType\": \"wellbore\",\n            \"schemaVersionMajor\": 1,\n            \"schemaVersionMinor\": 0,\n            \"schemaVersionPatch\": 0\n        },\n        \"status\": \"PUBLISHED\"\n    },\n    \"schema\": {}\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schema"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"errors\": [\n   {\n    \"message\": \"ea adipisicing culpa\",\n    \"reason\": \"consectetur Ut irure\",\n    \"domain\": \"labore\"\n   },\n   {\n    \"message\": \"officia\",\n    \"reason\": \"in ut irure voluptate cupidatat\",\n    \"domain\": \"ullamco\"\n   }\n  ],\n  \"code\": 86872712,\n  \"message\": \"id ex ipsum do\"\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Unit",
					"item": [
						{
							"name": "v3",
							"item": [
								{
									"name": "catalog",
									"item": [
										{
											"name": "getCatalog",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Status should be OK\", () => {\r",
															"    pm.expect(1).to.eql(1);\r",
															"});\r",
															"const response = pm.response.json();\r",
															"console.log(response);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													}
												],
												"url": {
													"raw": "{{osduonaws_base_url}}/api/unit/v3/catalog",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"catalog"
													]
												}
											},
											"response": [
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu:"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/catalog/lastmodified",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"catalog",
																"lastmodified"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu:"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/catalog/lastmodified",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"catalog",
																"lastmodified"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu:"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/catalog/lastmodified",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"catalog",
																"lastmodified"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu:"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/catalog/lastmodified",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"catalog",
																"lastmodified"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getLastModified",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Status should be OK\", () => {\r",
															"    pm.expect(1).to.eql(1);\r",
															"});\r",
															"const response = pm.response.json();\r",
															"console.log(response);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													}
												],
												"url": {
													"raw": "{{osduonaws_base_url}}/api/unit/v3/catalog/lastmodified",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"catalog",
														"lastmodified"
													]
												}
											},
											"response": [
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu:"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/catalog/lastmodified",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"catalog",
																"lastmodified"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu:"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/catalog/lastmodified",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"catalog",
																"lastmodified"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu:"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/catalog/lastmodified",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"catalog",
																"lastmodified"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu:"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/catalog/lastmodified",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"catalog",
																"lastmodified"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getMapStates",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Status should be OK\", () => {\r",
															"    pm.expect(1).to.eql(1);\r",
															"});\r",
															"const response = pm.response.json();\r",
															"console.log(response);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													}
												],
												"url": {
													"raw": "{{osduonaws_base_url}}/api/unit/v3/catalog/mapstates?offset=0&limit=100",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"catalog",
														"mapstates"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "offset"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "limit"
														}
													]
												}
											},
											"response": [
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu:"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/catalog/mapstates?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"catalog",
																"mapstates"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu:"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/catalog/mapstates?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"catalog",
																"mapstates"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/catalog/mapstates?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"catalog",
																"mapstates"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/catalog/mapstates?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"catalog",
																"mapstates"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "postSearch",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Status should be OK\", () => {\r",
															"    pm.expect(1).to.eql(1);\r",
															"});\r",
															"const response = pm.response.json();\r",
															"console.log(response);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{osduonaws_base_url}}/api/unit/v3/catalog/search?offset=0&limit=100",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"catalog",
														"search"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "offset"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "limit"
														}
													]
												}
											},
											"response": [
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/catalog/search?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"catalog",
																"search"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/catalog/search?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"catalog",
																"search"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/catalog/search?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"catalog",
																"search"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/catalog/search?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"catalog",
																"search"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/catalog/search?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"catalog",
																"search"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "conversion",
									"item": [
										{
											"name": "abcd",
											"item": [
												{
													"name": "getConversionABCDBySymbols",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Status should be OK\", () => {\r",
																	"    pm.expect(1).to.eql(1);\r",
																	"});\r",
																	"const response = pm.response.json();\r",
																	"console.log(response);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{access_token}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "{{data_partition_id}}"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/conversion/abcd?namespaces=Energistics_UoM&fromSymbol=ppk&toSymbol=ppm",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"conversion",
																"abcd"
															],
															"query": [
																{
																	"key": "namespaces",
																	"value": "Energistics_UoM",
																	"description": "(Required) namespaces"
																},
																{
																	"key": "fromSymbol",
																	"value": "ppk",
																	"description": "(Required) fromSymbol"
																},
																{
																	"key": "toSymbol",
																	"value": "ppm",
																	"description": "(Required) toSymbol"
																}
															]
														}
													},
													"response": [
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/conversion/abcd?namespaces=<string>&fromSymbol=<string>&toSymbol=<string>",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"conversion",
																		"abcd"
																	],
																	"query": [
																		{
																			"key": "namespaces",
																			"value": "<string>"
																		},
																		{
																			"key": "fromSymbol",
																			"value": "<string>"
																		},
																		{
																			"key": "toSymbol",
																			"value": "<string>"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/conversion/abcd?namespaces=<string>&fromSymbol=<string>&toSymbol=<string>",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"conversion",
																		"abcd"
																	],
																	"query": [
																		{
																			"key": "namespaces",
																			"value": "<string>"
																		},
																		{
																			"key": "fromSymbol",
																			"value": "<string>"
																		},
																		{
																			"key": "toSymbol",
																			"value": "<string>"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/conversion/abcd?namespaces=<string>&fromSymbol=<string>&toSymbol=<string>",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"conversion",
																		"abcd"
																	],
																	"query": [
																		{
																			"key": "namespaces",
																			"value": "<string>"
																		},
																		{
																			"key": "fromSymbol",
																			"value": "<string>"
																		},
																		{
																			"key": "toSymbol",
																			"value": "<string>"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/conversion/abcd?namespaces=<string>&fromSymbol=<string>&toSymbol=<string>",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"conversion",
																		"abcd"
																	],
																	"query": [
																		{
																			"key": "namespaces",
																			"value": "<string>"
																		},
																		{
																			"key": "fromSymbol",
																			"value": "<string>"
																		},
																		{
																			"key": "toSymbol",
																			"value": "<string>"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "postConversionABCD",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Status should be OK\", () => {\r",
																	"    pm.expect(1).to.eql(1);\r",
																	"});\r",
																	"// const response = pm.response.json();\r",
																	"// console.log(response);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{access_token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "{{data_partition_id}}"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"fromUnit\": {\n        \"abcd\": {\n            \"a\": 0.0,\n            \"b\": 1000.0000000000001,\n            \"c\": 1.0,\n            \"d\": 0.0\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"1\",\n            \"type\": \"UM\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"0.0\",\n            \"scale\": \"0.0\"\n        },\n        \"symbol\": \"ppm\",\n        \"type\": \"UM\"\n    },\n    \"fromUnitPersistableReference\": \"{\\\"abcd\\\":{\\\"a\\\":0.0,\\\"b\\\":0.001,\\\"c\\\":1.0,\\\"d\\\":0.0},\\\"symbol\\\":\\\"ppk\\\",\\\"baseMeasurement\\\":{\\\"ancestry\\\":\\\"1\\\",\\\"type\\\":\\\"UM\\\"},\\\"type\\\":\\\"UAD\\\"}\",\n    \"toUnit\": {\n        \"abcd\": {\n            \"a\": 0.0,\n            \"b\": 1000.0000000000001,\n            \"c\": 1.0,\n            \"d\": 0.0\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"1\",\n            \"type\": \"UM\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"0.0\",\n            \"scale\": \"0.0\"\n        },\n        \"symbol\": \"ppm\",\n        \"type\": \"UM\"\n    },\n    \"toUnitPersistableReference\": \"{\\\"abcd\\\":{\\\"a\\\":0.0,\\\"b\\\":1.0E-6,\\\"c\\\":1.0,\\\"d\\\":0.0},\\\"symbol\\\":\\\"ppm\\\",\\\"baseMeasurement\\\":{\\\"ancestry\\\":\\\"1\\\",\\\"type\\\":\\\"UM\\\"},\\\"type\\\":\\\"UAD\\\"}\"\n}"
														},
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/conversion/abcd",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"conversion",
																"abcd"
															]
														}
													},
													"response": [
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"fromUnit\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"fromUnitPersistableReference\": \"<string>\",\n    \"toUnit\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"toUnitPersistableReference\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/conversion/abcd",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"conversion",
																		"abcd"
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"fromUnit\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"fromUnitPersistableReference\": \"<string>\",\n    \"toUnit\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"toUnitPersistableReference\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/conversion/abcd",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"conversion",
																		"abcd"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"fromUnit\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"fromUnitPersistableReference\": \"<string>\",\n    \"toUnit\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"toUnitPersistableReference\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/conversion/abcd",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"conversion",
																		"abcd"
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"fromUnit\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"fromUnitPersistableReference\": \"<string>\",\n    \"toUnit\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"toUnitPersistableReference\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/conversion/abcd",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"conversion",
																		"abcd"
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"fromUnit\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"fromUnitPersistableReference\": \"<string>\",\n    \"toUnit\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"toUnitPersistableReference\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/conversion/abcd",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"conversion",
																		"abcd"
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "scale",
											"item": [
												{
													"name": "getConversionScaleOffsetBySymbols",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Status should be OK\", () => {\r",
																	"    pm.expect(1).to.eql(1);\r",
																	"});\r",
																	"const response = pm.response.json();\r",
																	"console.log(response);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{access_token}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "{{data_partition_id}}"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/conversion/scale?namespaces=Energistics_UoM&fromSymbol=ppk&toSymbol=ppm",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"conversion",
																"scale"
															],
															"query": [
																{
																	"key": "namespaces",
																	"value": "Energistics_UoM"
																},
																{
																	"key": "fromSymbol",
																	"value": "ppk"
																},
																{
																	"key": "toSymbol",
																	"value": "ppm"
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/conversion/scale?namespaces=<string>&fromSymbol=<string>&toSymbol=<string>",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"conversion",
																		"scale"
																	],
																	"query": [
																		{
																			"key": "namespaces",
																			"value": "<string>"
																		},
																		{
																			"key": "fromSymbol",
																			"value": "<string>"
																		},
																		{
																			"key": "toSymbol",
																			"value": "<string>"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/conversion/scale?namespaces=<string>&fromSymbol=<string>&toSymbol=<string>",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"conversion",
																		"scale"
																	],
																	"query": [
																		{
																			"key": "namespaces",
																			"value": "<string>"
																		},
																		{
																			"key": "fromSymbol",
																			"value": "<string>"
																		},
																		{
																			"key": "toSymbol",
																			"value": "<string>"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/conversion/scale?namespaces=<string>&fromSymbol=<string>&toSymbol=<string>",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"conversion",
																		"scale"
																	],
																	"query": [
																		{
																			"key": "namespaces",
																			"value": "<string>"
																		},
																		{
																			"key": "fromSymbol",
																			"value": "<string>"
																		},
																		{
																			"key": "toSymbol",
																			"value": "<string>"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/conversion/scale?namespaces=<string>&fromSymbol=<string>&toSymbol=<string>",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"conversion",
																		"scale"
																	],
																	"query": [
																		{
																			"key": "namespaces",
																			"value": "<string>"
																		},
																		{
																			"key": "fromSymbol",
																			"value": "<string>"
																		},
																		{
																			"key": "toSymbol",
																			"value": "<string>"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "postConversionScaleOffset",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Status should be OK\", () => {\r",
																	"    pm.expect(1).to.eql(1);\r",
																	"});\r",
																	"\r",
																	"// const response = pm.response.json();\r",
																	"// console.log(response);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{access_token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "{{data_partition_id}}"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"fromUnit\": {\n        \"abcd\": {\n            \"a\": 0.0,\n            \"b\": 1000.0000000000001,\n            \"c\": 1.0,\n            \"d\": 0.0\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"1\",\n            \"type\": \"UM\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"0.0\",\n            \"scale\": \"0.0\"\n        },\n        \"symbol\": \"ppm\",\n        \"type\": \"UM\"\n    },\n    \"fromUnitPersistableReference\": \"{\\\"abcd\\\":{\\\"a\\\":0.0,\\\"b\\\":0.001,\\\"c\\\":1.0,\\\"d\\\":0.0},\\\"symbol\\\":\\\"ppk\\\",\\\"baseMeasurement\\\":{\\\"ancestry\\\":\\\"1\\\",\\\"type\\\":\\\"UM\\\"},\\\"type\\\":\\\"UAD\\\"}\",\n    \"toUnit\": {\n        \"abcd\": {\n            \"a\": 0.0,\n            \"b\": 1000.0000000000001,\n            \"c\": 1.0,\n            \"d\": 0.0\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"1\",\n            \"type\": \"UM\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"0.0\",\n            \"scale\": \"0.0\"\n        },\n        \"symbol\": \"ppm\",\n        \"type\": \"UM\"\n    },\n    \"toUnitPersistableReference\": \"{\\\"abcd\\\":{\\\"a\\\":0.0,\\\"b\\\":1.0E-6,\\\"c\\\":1.0,\\\"d\\\":0.0},\\\"symbol\\\":\\\"ppm\\\",\\\"baseMeasurement\\\":{\\\"ancestry\\\":\\\"1\\\",\\\"type\\\":\\\"UM\\\"},\\\"type\\\":\\\"UAD\\\"}\"\n}"
														},
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/conversion/scale",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"conversion",
																"scale"
															]
														}
													},
													"response": [
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"fromUnit\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"fromUnitPersistableReference\": \"<string>\",\n    \"toUnit\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"toUnitPersistableReference\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/conversion/scale",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"conversion",
																		"scale"
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"fromUnit\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"fromUnitPersistableReference\": \"<string>\",\n    \"toUnit\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"toUnitPersistableReference\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/conversion/scale",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"conversion",
																		"scale"
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"fromUnit\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"fromUnitPersistableReference\": \"<string>\",\n    \"toUnit\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"toUnitPersistableReference\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/conversion/scale",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"conversion",
																		"scale"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"fromUnit\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"fromUnitPersistableReference\": \"<string>\",\n    \"toUnit\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"toUnitPersistableReference\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/conversion/scale",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"conversion",
																		"scale"
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"fromUnit\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"fromUnitPersistableReference\": \"<string>\",\n    \"toUnit\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"toUnitPersistableReference\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/conversion/scale",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"conversion",
																		"scale"
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "measurement",
									"item": [
										{
											"name": "postMeasurement",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Status should be OK\", () => {\r",
															"    pm.expect(1).to.eql(1);\r",
															"});\r",
															"const response = pm.response.json();\r",
															"console.log(response);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"essence\": {\n        \"ancestry\": \"1\",\n        \"type\": \"UM\"\n    },\n    \"persistableReference\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"measurement"
													]
												}
											},
											"response": [
												{
													"name": "Created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"measurement"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"measurement"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"measurement"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"measurement"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"measurement"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "postSearchMeasurements",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Status should be OK\", () => {\r",
															"    pm.expect(1).to.eql(1);\r",
															"});\r",
															"const response = pm.response.json();\r",
															"console.log(response);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement/search?offset=0&limit=100",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"measurement",
														"search"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "offset"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "limit"
														}
													]
												}
											},
											"response": [
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement/search?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"measurement",
																"search"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement/search?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"measurement",
																"search"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement/search?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"measurement",
																"search"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement/search?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"measurement",
																"search"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement/search?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"measurement",
																"search"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getMeasurement",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Status should be OK\", () => {\r",
															"    pm.expect(1).to.eql(1);\r",
															"});\r",
															"const response = pm.response.json();\r",
															"console.log(response);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													}
												],
												"url": {
													"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement?ancestry=1",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"measurement"
													],
													"query": [
														{
															"key": "ancestry",
															"value": "1",
															"description": "(Required) ancestry"
														}
													]
												}
											},
											"response": [
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement?ancestry=<string>",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"measurement"
															],
															"query": [
																{
																	"key": "ancestry",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement?ancestry=<string>",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"measurement"
															],
															"query": [
																{
																	"key": "ancestry",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement?ancestry=<string>",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"measurement"
															],
															"query": [
																{
																	"key": "ancestry",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement?ancestry=<string>",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"measurement"
															],
															"query": [
																{
																	"key": "ancestry",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getMeasurements",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Status should be OK\", () => {\r",
															"    pm.expect(1).to.eql(1);\r",
															"});\r",
															"const response = pm.response.json();\r",
															"console.log(response);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													}
												],
												"url": {
													"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement/list?offset=0&limit=100",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"measurement",
														"list"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "offset"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "limit"
														}
													]
												}
											},
											"response": [
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement/list?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"measurement",
																"list"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement/list?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"measurement",
																"list"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement/list?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"measurement",
																"list"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement/list?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"measurement",
																"list"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getMeasurementMaps",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Status should be OK\", () => {\r",
															"    pm.expect(1).to.eql(1);\r",
															"});\r",
															"const response = pm.response.json();\r",
															"console.log(response);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													}
												],
												"url": {
													"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement/maps?offset=0&limit=100",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"measurement",
														"maps"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "offset"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "limit"
														}
													]
												}
											},
											"response": [
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement/maps?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"measurement",
																"maps"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement/maps?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"measurement",
																"maps"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement/maps?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"measurement",
																"maps"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/measurement/maps?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"measurement",
																"maps"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "unit",
									"item": [
										{
											"name": "measurement",
											"item": [
												{
													"name": "preferred",
													"item": [
														{
															"name": "getPreferredUnitsByMeasurement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"pm.test(\"Status should be OK\", () => {\r",
																			"    pm.expect(1).to.eql(1);\r",
																			"});\r",
																			"const response = pm.response.json();\r",
																			"console.log(response);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{access_token}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "{{data_partition_id}}"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/measurement/preferred?ancestry=1",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"unit",
																		"measurement",
																		"preferred"
																	],
																	"query": [
																		{
																			"key": "ancestry",
																			"value": "1",
																			"description": "(Required) ancestry"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			},
																			{
																				"description": "(Required) tenant",
																				"key": "data-partition-id",
																				"value": "osdu"
																			}
																		],
																		"url": {
																			"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/measurement/preferred?ancestry=<string>",
																			"host": [
																				"{{osduonaws_base_url}}"
																			],
																			"path": [
																				"api",
																				"unit",
																				"v3",
																				"unit",
																				"measurement",
																				"preferred"
																			],
																			"query": [
																				{
																					"key": "ancestry",
																					"value": "<string>"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Not Found",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			},
																			{
																				"description": "(Required) tenant",
																				"key": "data-partition-id",
																				"value": "osdu"
																			}
																		],
																		"url": {
																			"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/measurement/preferred?ancestry=<string>",
																			"host": [
																				"{{osduonaws_base_url}}"
																			],
																			"path": [
																				"api",
																				"unit",
																				"v3",
																				"unit",
																				"measurement",
																				"preferred"
																			],
																			"query": [
																				{
																					"key": "ancestry",
																					"value": "<string>"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			},
																			{
																				"description": "(Required) tenant",
																				"key": "data-partition-id",
																				"value": "osdu"
																			}
																		],
																		"url": {
																			"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/measurement/preferred?ancestry=<string>",
																			"host": [
																				"{{osduonaws_base_url}}"
																			],
																			"path": [
																				"api",
																				"unit",
																				"v3",
																				"unit",
																				"measurement",
																				"preferred"
																			],
																			"query": [
																				{
																					"key": "ancestry",
																					"value": "<string>"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "OK",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			},
																			{
																				"description": "(Required) tenant",
																				"key": "data-partition-id",
																				"value": "osdu"
																			}
																		],
																		"url": {
																			"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/measurement/preferred?ancestry=<string>",
																			"host": [
																				"{{osduonaws_base_url}}"
																			],
																			"path": [
																				"api",
																				"unit",
																				"v3",
																				"unit",
																				"measurement",
																				"preferred"
																			],
																			"query": [
																				{
																					"key": "ancestry",
																					"value": "<string>"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "postPreferredUnitsByMeasurement",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"pm.test(\"Status should be OK\", () => {\r",
																			"    pm.expect(1).to.eql(1);\r",
																			"});\r",
																			"const response = pm.response.json();\r",
																			"console.log(response);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{access_token}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "{{data_partition_id}}"
																	},
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"essence\": {\n        \"ancestry\": \"1\",\n        \"type\": \"UM\"\n    },\n    \"persistableReference\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/measurement/preferred",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"unit",
																		"measurement",
																		"preferred"
																	]
																}
															},
															"response": [
																{
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			},
																			{
																				"description": "(Required) tenant",
																				"key": "data-partition-id",
																				"value": "osdu"
																			}
																		],
																		"url": {
																			"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/measurement/preferred",
																			"host": [
																				"{{osduonaws_base_url}}"
																			],
																			"path": [
																				"api",
																				"unit",
																				"v3",
																				"unit",
																				"measurement",
																				"preferred"
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "OK",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			},
																			{
																				"description": "(Required) tenant",
																				"key": "data-partition-id",
																				"value": "osdu"
																			}
																		],
																		"url": {
																			"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/measurement/preferred",
																			"host": [
																				"{{osduonaws_base_url}}"
																			],
																			"path": [
																				"api",
																				"unit",
																				"v3",
																				"unit",
																				"measurement",
																				"preferred"
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			},
																			{
																				"description": "(Required) tenant",
																				"key": "data-partition-id",
																				"value": "osdu"
																			}
																		],
																		"url": {
																			"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/measurement/preferred",
																			"host": [
																				"{{osduonaws_base_url}}"
																			],
																			"path": [
																				"api",
																				"unit",
																				"v3",
																				"unit",
																				"measurement",
																				"preferred"
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Not Found",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			},
																			{
																				"description": "(Required) tenant",
																				"key": "data-partition-id",
																				"value": "osdu"
																			}
																		],
																		"url": {
																			"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/measurement/preferred",
																			"host": [
																				"{{osduonaws_base_url}}"
																			],
																			"path": [
																				"api",
																				"unit",
																				"v3",
																				"unit",
																				"measurement",
																				"preferred"
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Created",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			},
																			{
																				"description": "(Required) tenant",
																				"key": "data-partition-id",
																				"value": "osdu"
																			}
																		],
																		"url": {
																			"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/measurement/preferred",
																			"host": [
																				"{{osduonaws_base_url}}"
																			],
																			"path": [
																				"api",
																				"unit",
																				"v3",
																				"unit",
																				"measurement",
																				"preferred"
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "getUnitsByMeasurement",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Status should be OK\", () => {\r",
																	"    pm.expect(1).to.eql(1);\r",
																	"});\r",
																	"const response = pm.response.json();\r",
																	"console.log(response);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{access_token}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "{{data_partition_id}}"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/measurement?ancestry=1",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"measurement"
															],
															"query": [
																{
																	"key": "ancestry",
																	"value": "1",
																	"description": "(Required) ancestry"
																}
															]
														}
													},
													"response": [
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/measurement?ancestry=<string>",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"unit",
																		"measurement"
																	],
																	"query": [
																		{
																			"key": "ancestry",
																			"value": "<string>"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/measurement?ancestry=<string>",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"unit",
																		"measurement"
																	],
																	"query": [
																		{
																			"key": "ancestry",
																			"value": "<string>"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/measurement?ancestry=<string>",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"unit",
																		"measurement"
																	],
																	"query": [
																		{
																			"key": "ancestry",
																			"value": "<string>"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/measurement?ancestry=<string>",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"unit",
																		"measurement"
																	],
																	"query": [
																		{
																			"key": "ancestry",
																			"value": "<string>"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "postUnitsByMeasurement",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Status should be OK\", () => {\r",
																	"    pm.expect(1).to.eql(1);\r",
																	"});\r",
																	"const response = pm.response.json();\r",
																	"console.log(response);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{access_token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "{{data_partition_id}}"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"essence\": {\n        \"ancestry\": \"1\",\n        \"type\": \"UM\"\n    },\n    \"persistableReference\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/measurement",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"measurement"
															]
														}
													},
													"response": [
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/measurement",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"unit",
																		"measurement"
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/measurement",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"unit",
																		"measurement"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/measurement",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"unit",
																		"measurement"
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/measurement",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"unit",
																		"measurement"
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/measurement",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"unit",
																		"measurement"
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "unitsystem",
											"item": [
												{
													"name": "getUnitBySystemAndMeasurement",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Status should be OK\", () => {\r",
																	"    pm.expect(1).to.eql(1);\r",
																	"});\r",
																	"const response = pm.response.json();\r",
																	"console.log(response);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{access_token}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "{{data_partition_id}}"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/unitsystem?unitSystemName=English&ancestry=Length",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"unitsystem"
															],
															"query": [
																{
																	"key": "unitSystemName",
																	"value": "English",
																	"description": "(Required) unitSystemName"
																},
																{
																	"key": "ancestry",
																	"value": "Length",
																	"description": "(Required) ancestry"
																}
															]
														}
													},
													"response": [
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/unitsystem?unitSystemName=<string>&ancestry=<string>",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"unit",
																		"unitsystem"
																	],
																	"query": [
																		{
																			"key": "unitSystemName",
																			"value": "<string>"
																		},
																		{
																			"key": "ancestry",
																			"value": "<string>"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/unitsystem?unitSystemName=<string>&ancestry=<string>",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"unit",
																		"unitsystem"
																	],
																	"query": [
																		{
																			"key": "unitSystemName",
																			"value": "<string>"
																		},
																		{
																			"key": "ancestry",
																			"value": "<string>"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/unitsystem?unitSystemName=<string>&ancestry=<string>",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"unit",
																		"unitsystem"
																	],
																	"query": [
																		{
																			"key": "unitSystemName",
																			"value": "<string>"
																		},
																		{
																			"key": "ancestry",
																			"value": "<string>"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/unitsystem?unitSystemName=<string>&ancestry=<string>",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"unit",
																		"unitsystem"
																	],
																	"query": [
																		{
																			"key": "unitSystemName",
																			"value": "<string>"
																		},
																		{
																			"key": "ancestry",
																			"value": "<string>"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "postUnitBySystemAndMeasurement",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Status should be OK\", () => {\r",
																	"    pm.expect(1).to.eql(1);\r",
																	"});\r",
																	"const response = pm.response.json();\r",
																	"console.log(response);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{access_token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "{{data_partition_id}}"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"essence\": {\n        \"ancestry\": \"1\",\n        \"type\": \"UM\"\n    },\n    \"persistableReference\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/unitsystem?unitSystemName=English",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"unitsystem"
															],
															"query": [
																{
																	"key": "unitSystemName",
																	"value": "English",
																	"description": "(Required) unitSystemName"
																}
															]
														}
													},
													"response": [
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/unitsystem?unitSystemName=<string>",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"unit",
																		"unitsystem"
																	],
																	"query": [
																		{
																			"key": "unitSystemName",
																			"value": "<string>"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/unitsystem?unitSystemName=<string>",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"unit",
																		"unitsystem"
																	],
																	"query": [
																		{
																			"key": "unitSystemName",
																			"value": "<string>"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/unitsystem?unitSystemName=<string>",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"unit",
																		"unitsystem"
																	],
																	"query": [
																		{
																			"key": "unitSystemName",
																			"value": "<string>"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/unitsystem?unitSystemName=<string>",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"unit",
																		"unitsystem"
																	],
																	"query": [
																		{
																			"key": "unitSystemName",
																			"value": "<string>"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	},
																	{
																		"description": "(Required) tenant",
																		"key": "data-partition-id",
																		"value": "osdu"
																	}
																],
																"url": {
																	"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/unitsystem?unitSystemName=<string>",
																	"host": [
																		"{{osduonaws_base_url}}"
																	],
																	"path": [
																		"api",
																		"unit",
																		"v3",
																		"unit",
																		"unitsystem"
																	],
																	"query": [
																		{
																			"key": "unitSystemName",
																			"value": "<string>"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "getUnits",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Status should be OK\", () => {\r",
															"    pm.expect(1).to.eql(1);\r",
															"});\r",
															"const response = pm.response.json();\r",
															"console.log(response);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													}
												],
												"url": {
													"raw": "{{osduonaws_base_url}}/api/unit/v3/unit?offset=0&limit=100",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"unit"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "offset"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "limit"
														}
													]
												}
											},
											"response": [
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getUnitMaps",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Status should be OK\", () => {\r",
															"    pm.expect(1).to.eql(1);\r",
															"});\r",
															"const response = pm.response.json();\r",
															"console.log(response);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													}
												],
												"url": {
													"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/maps?offset=0&limit=100",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"unit",
														"maps"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "offset"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "limit"
														}
													]
												}
											},
											"response": [
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/maps?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"maps"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/maps?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"maps"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/maps?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"maps"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/maps?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"maps"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getUnitBySymbol",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"     pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Status should be OK\", () => {\r",
															"    pm.expect(1).to.eql(1);\r",
															"});\r",
															"const response = pm.response.json();\r",
															"console.log(response);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													}
												],
												"url": {
													"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/symbol?namespaces=Energistics_UoM&symbol=ppm",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"unit",
														"symbol"
													],
													"query": [
														{
															"key": "namespaces",
															"value": "Energistics_UoM",
															"description": "(Required) namespaces"
														},
														{
															"key": "symbol",
															"value": "ppm",
															"description": "(Required) symbol"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/symbol?namespaces=<string>&symbol=<string>",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"symbol"
															],
															"query": [
																{
																	"key": "namespaces",
																	"value": "<string>"
																},
																{
																	"key": "symbol",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/symbol?namespaces=<string>&symbol=<string>",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"symbol"
															],
															"query": [
																{
																	"key": "namespaces",
																	"value": "<string>"
																},
																{
																	"key": "symbol",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/symbol?namespaces=<string>&symbol=<string>",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"symbol"
															],
															"query": [
																{
																	"key": "namespaces",
																	"value": "<string>"
																},
																{
																	"key": "symbol",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/symbol?namespaces=<string>&symbol=<string>",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"symbol"
															],
															"query": [
																{
																	"key": "namespaces",
																	"value": "<string>"
																},
																{
																	"key": "symbol",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getUnitsBySymbol",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"     pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Status should be OK\", () => {\r",
															"    pm.expect(1).to.eql(1);\r",
															"});\r",
															"const response = pm.response.json();\r",
															"console.log(response);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													}
												],
												"url": {
													"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/symbols?symbol=ppm",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"unit",
														"symbols"
													],
													"query": [
														{
															"key": "symbol",
															"value": "ppm",
															"description": "(Required) symbol"
														}
													]
												}
											},
											"response": [
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/symbols?symbol=<string>",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"symbols"
															],
															"query": [
																{
																	"key": "symbol",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/symbols?symbol=<string>",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"symbols"
															],
															"query": [
																{
																	"key": "symbol",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/symbols?symbol=<string>",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"symbols"
															],
															"query": [
																{
																	"key": "symbol",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/symbols?symbol=<string>",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"symbols"
															],
															"query": [
																{
																	"key": "symbol",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "postUnit",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"     pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Status should be OK\", () => {\r",
															"    pm.expect(1).to.eql(1);\r",
															"});\r",
															"// const response = pm.response.json();\r",
															"// console.log(response);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n            \"essence\": {\n                \"scaleOffset\": {\n                    \"scale\": 1.0,\n                    \"offset\": 0.0\n                },\n                \"symbol\": \" \",\n                \"baseMeasurement\": {\n                    \"ancestry\": \"Dimensionless\",\n                    \"type\": \"UM\"\n                },\n                \"type\": \"USO\"\n            },\n            \"displaySymbol\": \" \",\n            \"name\": \"dimensionless\",\n            \"lastModified\": \"19920228\",\n            \"source\": \"APIRP661\",\n            \"namespace\": \"RP66\",\n            \"persistableReference\": \"{\\\"scaleOffset\\\":{\\\"scale\\\":1.0,\\\"offset\\\":0.0},\\\"symbol\\\":\\\" \\\",\\\"baseMeasurement\\\":{\\\"ancestry\\\":\\\"Dimensionless\\\",\\\"type\\\":\\\"UM\\\"},\\\"type\\\":\\\"USO\\\"}\"\n        }"
												},
												"url": {
													"raw": "{{osduonaws_base_url}}/api/unit/v3/unit",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"unit"
													]
												}
											},
											"response": [
												{
													"name": "Created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"essence\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"persistableReference\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"essence\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"persistableReference\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"essence\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"persistableReference\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"essence\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"persistableReference\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"essence\": {\n        \"abcd\": {\n            \"a\": \"<double>\",\n            \"b\": \"<double>\",\n            \"c\": \"<double>\",\n            \"d\": \"<double>\"\n        },\n        \"baseMeasurement\": {\n            \"ancestry\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"scaleOffset\": {\n            \"offset\": \"<double>\",\n            \"scale\": \"<double>\"\n        },\n        \"symbol\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"persistableReference\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "postSearchUnits",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"     pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Status should be OK\", () => {\r",
															"    pm.expect(1).to.eql(1);\r",
															"});\r",
															"const response = pm.response.json();\r",
															"console.log(response);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/search?offset=0&limit=100",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"unit",
														"search"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "offset"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "limit"
														}
													]
												}
											},
											"response": [
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/search?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"search"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/search?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"search"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/search?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"search"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/search?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"search"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unit/search?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unit",
																"search"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "unitsystem",
									"item": [
										{
											"name": "getUnitSystem",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"     pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Status should be OK\", () => {\r",
															"    pm.expect(1).to.eql(1);\r",
															"});\r",
															"const response = pm.response.json();\r",
															"console.log(response);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													}
												],
												"url": {
													"raw": "{{osduonaws_base_url}}/api/unit/v3/unitsystem?name=AWS_Decimetric&offset=0&limit=100",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"unitsystem"
													],
													"query": [
														{
															"key": "name",
															"value": "AWS_Decimetric",
															"description": "(Required) name"
														},
														{
															"key": "offset",
															"value": "0",
															"description": "offset"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "limit"
														}
													]
												}
											},
											"response": [
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unitsystem?name=<string>&offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unitsystem"
															],
															"query": [
																{
																	"key": "name",
																	"value": "<string>"
																},
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unitsystem?name=<string>&offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unitsystem"
															],
															"query": [
																{
																	"key": "name",
																	"value": "<string>"
																},
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unitsystem?name=<string>&offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unitsystem"
															],
															"query": [
																{
																	"key": "name",
																	"value": "<string>"
																},
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unitsystem?name=<string>&offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unitsystem"
															],
															"query": [
																{
																	"key": "name",
																	"value": "<string>"
																},
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getUnitSystemInfoList",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"     pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Status should be OK\", () => {\r",
															"    pm.expect(1).to.eql(1);\r",
															"});\r",
															"const response = pm.response.json();\r",
															"console.log(response);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													}
												],
												"url": {
													"raw": "{{osduonaws_base_url}}/api/unit/v3/unitsystem/list?offset=0&limit=100",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"unitsystem",
														"list"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "offset"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "limit"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unitsystem/list?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unitsystem",
																"list"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unitsystem/list?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unitsystem",
																"list"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unitsystem/list?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unitsystem",
																"list"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unitsystem/list?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unitsystem",
																"list"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "postUnitSystem",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"     pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Status should be OK\", () => {\r",
															"    pm.expect(1).to.eql(1);\r",
															"});\r",
															"const response = pm.response.json();\r",
															"console.log(response);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"description": "(Required) tenant",
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"essence\": {\n        \"ancestry\": \"Metric.AWS_Decimetric\"\n    },\n    \"persistableReference\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{osduonaws_base_url}}/api/unit/v3/unitsystem?offset=0&limit=100",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"unit",
														"v3",
														"unitsystem"
													],
													"query": [
														{
															"key": "offset",
															"value": "0",
															"description": "offset"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "limit"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"essence\": {\n        \"ancestry\": \"<string>\"\n    },\n    \"persistableReference\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unitsystem?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unitsystem"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"essence\": {\n        \"ancestry\": \"<string>\"\n    },\n    \"persistableReference\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unitsystem?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unitsystem"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"essence\": {\n        \"ancestry\": \"<string>\"\n    },\n    \"persistableReference\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unitsystem?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unitsystem"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"essence\": {\n        \"ancestry\": \"<string>\"\n    },\n    \"persistableReference\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unitsystem?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unitsystem"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															},
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "osdu"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"essence\": {\n        \"ancestry\": \"<string>\"\n    },\n    \"persistableReference\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{osduonaws_base_url}}/api/unit/v3/unitsystem?offset=0&limit=100",
															"host": [
																"{{osduonaws_base_url}}"
															],
															"path": [
																"api",
																"unit",
																"v3",
																"unitsystem"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "100"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Health Check",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"// const response = pm.response.json();\r",
											"// console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "data-partition-id",
										"type": "text",
										"value": "{{data_partition_id}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/unit/actuator/health",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"unit",
										"actuator",
										"health"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Register",
					"item": [
						{
							"name": "Ddms",
							"item": [
								{
									"name": "Create a DDMS registration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201 or 409\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 409]);\r",
													"});\r",
													"pm.test(\"Status description - OK or Conflict.\", function () {\r",
													"    pm.expect(pm.response.status).to.be.oneOf([\"OK\", \"Conflict\", \"Created\"]);\r",
													"});\r",
													"const response = pm.response.json();\r",
													"console.log(JSON.stringify(response));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
												"key": "data-partition-id",
												"value": "{{data_partition_id}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"example-id-390069-1\",\n  \"name\": \"example-nameaa\",\n  \"description\": \"exampledescription\",\n  \"contactEmail\": \"aaabc@test.com\",\n  \"interfaces\": [\n    {\n      \"entityType\": \"wellbore\",\n      \"schema\": {\n          \"openapi\": \"3.0.0\",\n            \"info\": {\n            \"description\": \"This is a sample Wellbore domain DM service.\",\n            \"version\": \"1.0.0\",\n            \"title\": \"OSDU Wellbore Domain DM Service\",\n            \"contact\": {\n                \"email\": \"osdu-sre@opengroup.org\"\n            }\n            },\n            \"servers\": [\n            {\n                \"url\": \"https://subsurface.data.osdu.com/v1\"\n            }\n            ],\n            \"tags\": [\n            {\n                \"name\": \"wellbore\",\n                \"description\": \"Wellbore data type services\"\n            }\n            ],\n            \"paths\": {\n            \"/wellbore/{wellboreId}\": {\n                \"get\": {\n                \"tags\": [\n                    \"wellbore\"\n                ],\n                \"summary\": \"Find wellbore by ID\",\n                \"description\": \"Returns a single wellbore\",\n                \"operationId\": \"getWellboreById\",\n                \"x-ddms-retrieve-entity\": true,\n                \"parameters\": [\n                    {\n                    \"name\": \"wellboreId\",\n                    \"in\": \"path\",\n                    \"description\": \"ID of wellbore to return\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"string\"\n                    }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                    \"description\": \"successful operation\",\n                    \"content\": {\n                        \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/wellbore\"\n                        }\n                        }\n                    }\n                    },\n                    \"400\": {\n                    \"description\": \"Invalid ID supplied\"\n                    },\n                    \"401\": {\n                    \"description\": \"Not authorized\"\n                    },\n                    \"404\": {\n                    \"description\": \"Wellbore not found\"\n                    }\n                }\n            }\n        }\n    }        \n      }\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{osduonaws_base_url}}/api/register/v1/ddms",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"ddms"
											]
										},
										"description": "Create a DDMS registration using an OpenApi spec V3 document. Required roles: 'users.datalake.editors' or 'users.datalake.admins'"
									},
									"response": [
										{
											"name": "Service Unavailable",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"contactEmail\": \"<string>\",\n    \"interfaces\": [\n        {\n            \"schema\": \"<object>\",\n            \"entityType\": \"<string>\"\n        },\n        {\n            \"schema\": \"<object>\",\n            \"entityType\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/ddms",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Bad Gateway",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"contactEmail\": \"<string>\",\n    \"interfaces\": [\n        {\n            \"schema\": \"<object>\",\n            \"entityType\": \"<string>\"\n        },\n        {\n            \"schema\": \"<object>\",\n            \"entityType\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/ddms",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms"
													]
												}
											},
											"status": "Bad Gateway",
											"code": 502,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"contactEmail\": \"<string>\",\n    \"interfaces\": [\n        {\n            \"schema\": \"<object>\",\n            \"entityType\": \"<string>\"\n        },\n        {\n            \"schema\": \"<object>\",\n            \"entityType\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/ddms",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"contactEmail\": \"<string>\",\n    \"interfaces\": [\n        {\n            \"schema\": \"<object>\",\n            \"entityType\": \"<string>\"\n        },\n        {\n            \"schema\": \"<object>\",\n            \"entityType\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/ddms",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"contactEmail\": \"<string>\",\n    \"interfaces\": [\n        {\n            \"schema\": \"<object>\",\n            \"entityType\": \"<string>\"\n        },\n        {\n            \"schema\": \"<object>\",\n            \"entityType\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/ddms",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Server Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"contactEmail\": \"<string>\",\n    \"interfaces\": [\n        {\n            \"schema\": \"<object>\",\n            \"entityType\": \"<string>\"\n        },\n        {\n            \"schema\": \"<object>\",\n            \"entityType\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/ddms",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"contactEmail\": \"<string>\",\n    \"interfaces\": [\n        {\n            \"schema\": \"<object>\",\n            \"entityType\": \"<string>\"\n        },\n        {\n            \"schema\": \"<object>\",\n            \"entityType\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/ddms",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<string>\",\n \"name\": \"<string>\",\n \"description\": \"<string>\",\n \"contactEmail\": \"<string>\",\n \"interfaces\": [\n  {\n   \"schema\": \"<object>\",\n   \"entityType\": \"<string>\"\n  },\n  {\n   \"schema\": \"<object>\",\n   \"entityType\": \"<string>\"\n  }\n ]\n}"
										},
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"contactEmail\": \"<string>\",\n    \"interfaces\": [\n        {\n            \"schema\": \"<object>\",\n            \"entityType\": \"<string>\"\n        },\n        {\n            \"schema\": \"<object>\",\n            \"entityType\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/ddms",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										}
									]
								},
								{
									"name": "Query for DDMS registrations",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status should be OK\", () => {\r",
													"    pm.expect(1).to.eql(1);\r",
													"});\r",
													"const response = pm.response.json();\r",
													"console.log(JSON.stringify(response));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
												"key": "data-partition-id",
												"value": "{{data_partition_id}}"
											}
										],
										"url": {
											"raw": "{{osduonaws_base_url}}/api/register/v1/ddms?type=wellbore",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"ddms"
											],
											"query": [
												{
													"key": "type",
													"value": "wellbore",
													"description": "(Required) "
												}
											]
										},
										"description": "Query for DDMS registrations allowing retrievals by type. Required roles: 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'"
									},
									"response": [
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms?type=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms"
													],
													"query": [
														{
															"key": "type",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms?type=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms"
													],
													"query": [
														{
															"key": "type",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms?type=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms"
													],
													"query": [
														{
															"key": "type",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms?type=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms"
													],
													"query": [
														{
															"key": "type",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Service Unavailable",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms?type=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms"
													],
													"query": [
														{
															"key": "type",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Bad Gateway",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms?type=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms"
													],
													"query": [
														{
															"key": "type",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Bad Gateway",
											"code": 502,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms?type=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms"
													],
													"query": [
														{
															"key": "type",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms?type=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms"
													],
													"query": [
														{
															"key": "type",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"contactEmail\": \"<string>\",\n  \"interfaces\": [\n   {\n    \"schema\": \"<object>\",\n    \"entityType\": \"<string>\"\n   },\n   {\n    \"schema\": \"<object>\",\n    \"entityType\": \"<string>\"\n   }\n  ]\n },\n {\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"contactEmail\": \"<string>\",\n  \"interfaces\": [\n   {\n    \"schema\": \"<object>\",\n    \"entityType\": \"<string>\"\n   },\n   {\n    \"schema\": \"<object>\",\n    \"entityType\": \"<string>\"\n   }\n  ]\n }\n]"
										}
									]
								},
								{
									"name": "Get a DDMS registration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status should be OK\", () => {\r",
													"    pm.expect(1).to.eql(1);\r",
													"});\r",
													"const response = pm.response.json();\r",
													"console.log(JSON.stringify(response));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
												"key": "data-partition-id",
												"value": "{{data_partition_id}}"
											}
										],
										"url": {
											"raw": "{{osduonaws_base_url}}/api/register/v1/ddms/:id",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"ddms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "example-id-390069-1",
													"description": "(Required) "
												}
											]
										},
										"description": "Get a DDMS registration with the given id. Required roles: 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'"
									},
									"response": [
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Bad Gateway",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Gateway",
											"code": 502,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<string>\",\n \"name\": \"<string>\",\n \"description\": \"<string>\",\n \"contactEmail\": \"<string>\",\n \"interfaces\": [\n  {\n   \"schema\": \"<object>\",\n   \"entityType\": \"<string>\"\n  },\n  {\n   \"schema\": \"<object>\",\n   \"entityType\": \"<string>\"\n  }\n ]\n}"
										},
										{
											"name": "Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Service Unavailable",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										}
									]
								},
								{
									"name": "Delete a DDMS registration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
												"key": "data-partition-id",
												"value": "{{data_partition_id}}"
											}
										],
										"url": {
											"raw": "{{osduonaws_base_url}}/api/register/v1/ddms/:id",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"ddms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "example-id-390069-1",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete a DDMS registration with the given id. Required roles: 'users.datalake.admins'"
									},
									"response": [
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Bad Gateway",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Gateway",
											"code": 502,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Server Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Service Unavailable",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ddms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ddms",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Subscription",
							"item": [
								{
									"name": "Create a subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201 or 409\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 409]);\r",
													"});\r",
													"pm.test(\"Status description - OK or Conflict.\", function () {\r",
													"    pm.expect(pm.response.status).to.be.oneOf([\"OK\", \"Conflict\", \"Created\"]);\r",
													"});\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.environment.set(\"nid\", data.notificationId);\r",
													"pm.environment.set(\"sid\",data.id);\r",
													"const response = pm.response.json();\r",
													"console.log(JSON.stringify(response));\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
												"key": "data-partition-id",
												"value": "{{data_partition_id}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": \"abc123456789\",\n\t\"name\": \"My listener\",\n\t\"description\": \"My test listener.\",\n\t\"pushEndpoint\":\"{{osduonaws_base_url}}/api/register/v1/awstest/aws/challenge/1\",\n\t\"topic\":\"records-changed\",\n\t\"secret\": {\n\t\t\"secretType\" : \"HMAC\",\n\t\"value\":\"02030405060708090A0B0C0D0E0F\"\n\t}\n}"
										},
										"url": {
											"raw": "{{osduonaws_base_url}}/api/register/v1/subscription",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"subscription"
											]
										},
										"description": "Create a subscription. Required roles: 'users.datalake.editors' or 'users.datalake.admins'"
									},
									"response": [
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"test-subscription\",\n    \"description\": \"test description\",\n    \"topic\": \"data-changed-v1\",\n    \"pushEndpoint\": \"https://myListener.com\",\n    \"secret\": {\n        \"secretType\": \"<string>\",\n        \"value\": \"<object>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/subscription",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"test-subscription\",\n    \"description\": \"test description\",\n    \"topic\": \"data-changed-v1\",\n    \"pushEndpoint\": \"https://myListener.com\",\n    \"secret\": {\n        \"secretType\": \"<string>\",\n        \"value\": \"<object>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/subscription",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"dGVzdC1uYW1l\",\n \"name\": \"test-subscription\",\n \"description\": \"test description\",\n \"topic\": \"data-changed-v1\",\n \"pushEndpoint\": \"https://myListener.com\",\n \"createdBy\": \"test@myapp.com\",\n \"notificationId\": \"de-6ee609b9-620e-477b-86f9-3b8907643a12\",\n \"createdOnEpoch\": {\n  \"seconds\": 1572275081,\n  \"nanos\": 51000000\n },\n \"secret\": {\n  \"secretType\": \"<string>\",\n  \"value\": \"<object>\"\n }\n}"
										},
										{
											"name": "Server Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"test-subscription\",\n    \"description\": \"test description\",\n    \"topic\": \"data-changed-v1\",\n    \"pushEndpoint\": \"https://myListener.com\",\n    \"secret\": {\n        \"secretType\": \"<string>\",\n        \"value\": \"<object>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/subscription",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"test-subscription\",\n    \"description\": \"test description\",\n    \"topic\": \"data-changed-v1\",\n    \"pushEndpoint\": \"https://myListener.com\",\n    \"secret\": {\n        \"secretType\": \"<string>\",\n        \"value\": \"<object>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/subscription",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"test-subscription\",\n    \"description\": \"test description\",\n    \"topic\": \"data-changed-v1\",\n    \"pushEndpoint\": \"https://myListener.com\",\n    \"secret\": {\n        \"secretType\": \"<string>\",\n        \"value\": \"<object>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/subscription",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Bad Gateway",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"test-subscription\",\n    \"description\": \"test description\",\n    \"topic\": \"data-changed-v1\",\n    \"pushEndpoint\": \"https://myListener.com\",\n    \"secret\": {\n        \"secretType\": \"<string>\",\n        \"value\": \"<object>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/subscription",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription"
													]
												}
											},
											"status": "Bad Gateway",
											"code": 502,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"test-subscription\",\n    \"description\": \"test description\",\n    \"topic\": \"data-changed-v1\",\n    \"pushEndpoint\": \"https://myListener.com\",\n    \"secret\": {\n        \"secretType\": \"<string>\",\n        \"value\": \"<object>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/subscription",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Service Unavailable",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"test-subscription\",\n    \"description\": \"test description\",\n    \"topic\": \"data-changed-v1\",\n    \"pushEndpoint\": \"https://myListener.com\",\n    \"secret\": {\n        \"secretType\": \"<string>\",\n        \"value\": \"<object>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/subscription",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										}
									]
								},
								{
									"name": "Get a subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status should be OK\", () => {\r",
													"    pm.expect(1).to.eql(1);\r",
													"});\r",
													"const response = pm.response.json();\r",
													"console.log(JSON.stringify(response));\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
												"key": "data-partition-id",
												"value": "{{data_partition_id}}"
											}
										],
										"url": {
											"raw": "{{osduonaws_base_url}}/api/register/v1/subscription/:id",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"subscription",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{sid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get a subscription with its Id. Required role: 'users.datalake.editors' or 'users.datalake.admins'"
									},
									"response": [
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subscription/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subscription/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subscription/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"dGVzdC1uYW1l\",\n \"name\": \"test-subscription\",\n \"description\": \"test description\",\n \"topic\": \"data-changed-v1\",\n \"pushEndpoint\": \"https://myListener.com\",\n \"createdBy\": \"test@myapp.com\",\n \"notificationId\": \"de-6ee609b9-620e-477b-86f9-3b8907643a12\"\n}"
										},
										{
											"name": "Service Unavailable",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subscription/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subscription/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subscription/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subscription/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Bad Gateway",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subscription/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Gateway",
											"code": 502,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										}
									]
								},
								{
									"name": "Update secret for subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
												"key": "data-partition-id",
												"value": "{{data_partition_id}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"secretType\": \"HMAC\",\n    \"value\": \"02030405060708090A0B0C0D0E0F\"\n}"
										},
										"url": {
											"raw": "{{osduonaws_base_url}}/api/register/v1/subscription/:id/secret",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"subscription",
												":id",
												"secret"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{sid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Update secret for a subscription. Required role: 'users.datalake.editors' or 'users.datalake.admins'"
									},
									"response": [
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"secretType\": \"<string>\",\n    \"value\": \"<object>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/subscription/:id/secret",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription",
														":id",
														"secret"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"secretType\": \"<string>\",\n    \"value\": \"<object>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/subscription/:id/secret",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription",
														":id",
														"secret"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Bad Gateway",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"secretType\": \"<string>\",\n    \"value\": \"<object>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/subscription/:id/secret",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription",
														":id",
														"secret"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Gateway",
											"code": 502,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Service Unavailable",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"secretType\": \"<string>\",\n    \"value\": \"<object>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/subscription/:id/secret",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription",
														":id",
														"secret"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"secretType\": \"<string>\",\n    \"value\": \"<object>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/subscription/:id/secret",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription",
														":id",
														"secret"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"secretType\": \"<string>\",\n    \"value\": \"<object>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/subscription/:id/secret",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription",
														":id",
														"secret"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "No Content",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"secretType\": \"<string>\",\n    \"value\": \"<object>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/subscription/:id/secret",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription",
														":id",
														"secret"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Server Error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"secretType\": \"<string>\",\n    \"value\": \"<object>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/subscription/:id/secret",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription",
														":id",
														"secret"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Action",
							"item": [
								{
									"name": "Create an action registration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201 or 409\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 409]);\r",
													"});\r",
													"pm.test(\"Status description - OK or Conflict.\", function () {\r",
													"    pm.expect(pm.response.status).to.be.oneOf([\"OK\", \"Conflict\", \"Created\"]);\r",
													"});\r",
													"const response = pm.response.json();\r",
													"console.log(JSON.stringify(response));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
												"key": "data-partition-id",
												"value": "{{data_partition_id}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": \"createtest1hh26ww\",\n\t\"name\": \"My listener\",\n\t\"description\": \"My test listener.\",\n\t\"url\":\"https://myapp.osdu.opengroup.org/action/data123\",\n\t\"img\":\"https://mycdn.com/img.png\",\n\t\"contactEmail\": \"integrationtest@test.com\",\n\t\"filter\": {\n\t\"entityType\": [\"*\"],\n\t\"source\": [\"*\"],\n\t\"version\": [\"*\"]}\n}"
										},
										"url": {
											"raw": "{{osduonaws_base_url}}/api/register/v1/action",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"action"
											]
										},
										"description": "Create an action registration. Required role: 'users.datalake.admins'"
									},
									"response": [
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"contactEmail\": \"<string>\",\n    \"img\": \"<string>\",\n    \"url\": \"<string>\",\n    \"filter\": {\n        \"entityType\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ],\n        \"source\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ],\n        \"version\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Bad Gateway",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"contactEmail\": \"<string>\",\n    \"img\": \"<string>\",\n    \"url\": \"<string>\",\n    \"filter\": {\n        \"entityType\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ],\n        \"source\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ],\n        \"version\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action"
													]
												}
											},
											"status": "Bad Gateway",
											"code": 502,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"contactEmail\": \"<string>\",\n    \"img\": \"<string>\",\n    \"url\": \"<string>\",\n    \"filter\": {\n        \"entityType\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ],\n        \"source\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ],\n        \"version\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"in minim ullamco\",\n \"name\": \"consequat\",\n \"description\": \"reprehenderit veniam fugiat incididunt in\",\n \"contactEmail\": \"anim eu deserunt\",\n \"img\": \"aute sunt deserunt\",\n \"url\": \"https://myapp.osdu.com/action/{type}/{id}\",\n \"filter\": {\n  \"entityType\": [\n   [\n    \"*\"\n   ],\n   [\n    \"*\"\n   ]\n  ],\n  \"source\": [\n   [\n    \"*\"\n   ],\n   [\n    \"*\"\n   ]\n  ],\n  \"version\": [\n   [\n    \"*\"\n   ],\n   [\n    \"*\"\n   ]\n  ]\n },\n \"createdOnEpoch\": {\n  \"seconds\": -62121609,\n  \"nanos\": 45452447\n }\n}"
										},
										{
											"name": "Server Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"contactEmail\": \"<string>\",\n    \"img\": \"<string>\",\n    \"url\": \"<string>\",\n    \"filter\": {\n        \"entityType\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ],\n        \"source\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ],\n        \"version\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"contactEmail\": \"<string>\",\n    \"img\": \"<string>\",\n    \"url\": \"<string>\",\n    \"filter\": {\n        \"entityType\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ],\n        \"source\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ],\n        \"version\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"contactEmail\": \"<string>\",\n    \"img\": \"<string>\",\n    \"url\": \"<string>\",\n    \"filter\": {\n        \"entityType\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ],\n        \"source\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ],\n        \"version\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Service Unavailable",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"contactEmail\": \"<string>\",\n    \"img\": \"<string>\",\n    \"url\": \"<string>\",\n    \"filter\": {\n        \"entityType\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ],\n        \"source\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ],\n        \"version\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"contactEmail\": \"<string>\",\n    \"img\": \"<string>\",\n    \"url\": \"<string>\",\n    \"filter\": {\n        \"entityType\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ],\n        \"source\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ],\n        \"version\": [\n            [\n                \"*\"\n            ],\n            [\n                \"*\"\n            ]\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										}
									]
								},
								{
									"name": "Get an action registration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status should be OK\", () => {\r",
													"    pm.expect(1).to.eql(1);\r",
													"});\r",
													"const response = pm.response.json();\r",
													"console.log(JSON.stringify(response));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
												"key": "data-partition-id",
												"value": "{{data_partition_id}}"
											}
										],
										"url": {
											"raw": "{{osduonaws_base_url}}/api/register/v1/action/:id",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"action",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "createtest1hh26ww",
													"description": "(Required) "
												}
											]
										},
										"description": "Get an action registration with the given id. Required roles: 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'"
									},
									"response": [
										{
											"name": "Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/action/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Service Unavailable",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/action/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/action/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/action/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"in minim ullamco\",\n \"name\": \"consequat\",\n \"description\": \"reprehenderit veniam fugiat incididunt in\",\n \"contactEmail\": \"anim eu deserunt\",\n \"img\": \"aute sunt deserunt\",\n \"url\": \"https://myapp.osdu.com/action/{type}/{id}\",\n \"filter\": {\n  \"entityType\": [\n   [\n    \"*\"\n   ],\n   [\n    \"*\"\n   ]\n  ],\n  \"source\": [\n   [\n    \"*\"\n   ],\n   [\n    \"*\"\n   ]\n  ],\n  \"version\": [\n   [\n    \"*\"\n   ],\n   [\n    \"*\"\n   ]\n  ]\n },\n \"createdOnEpoch\": {\n  \"seconds\": -62121609,\n  \"nanos\": 45452447\n }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/action/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Bad Gateway",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/action/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Gateway",
											"code": 502,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/action/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/action/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										}
									]
								},
								{
									"name": "Query for action registrations and substitutes any action with the given parameters",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status should be OK\", () => {\r",
													"    pm.expect(1).to.eql(1);\r",
													"});\r",
													"const response = pm.response.json();\r",
													"console.log(JSON.stringify(response));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
												"key": "data-partition-id",
												"value": "{{data_partition_id}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"retrieveactiontest12345\",\n    \"kind\": \"opendes:source:type:1.0.0\",\n    \"data\": {\n        \"msg\": \"hello\"\n    }\n}"
										},
										"url": {
											"raw": "{{osduonaws_base_url}}/api/register/v1/action:retrieve",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"action:retrieve"
											]
										},
										"description": "Retrieve an action registration. Required roles: 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'"
									},
									"response": [
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"acl\": {\n        \"viewers\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"owners\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"legal\": {\n        \"legaltags\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"otherRelevantDataCountries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"data\": {\n        \"msg\": \"Hello\",\n        \"uri\": \"https://myproj.com/abc123\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action:retrieve",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action:retrieve"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Service Unavailable",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"acl\": {\n        \"viewers\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"owners\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"legal\": {\n        \"legaltags\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"otherRelevantDataCountries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"data\": {\n        \"msg\": \"Hello\",\n        \"uri\": \"https://myproj.com/abc123\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action:retrieve",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action:retrieve"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"acl\": {\n        \"viewers\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"owners\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"legal\": {\n        \"legaltags\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"otherRelevantDataCountries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"data\": {\n        \"msg\": \"Hello\",\n        \"uri\": \"https://myproj.com/abc123\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action:retrieve",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action:retrieve"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"id\": \"irure ut\",\n  \"name\": \"si\",\n  \"description\": \"commodo proident\",\n  \"contactEmail\": \"Duis adipisicing Lorem\",\n  \"img\": \"adipisicing eu aliquip dolore\",\n  \"url\": \"https://myapp.osdu.com/action/{type}/{id}\",\n  \"filter\": {\n   \"entityType\": [\n    [\n     \"*\"\n    ],\n    [\n     \"*\"\n    ]\n   ],\n   \"source\": [\n    [\n     \"*\"\n    ],\n    [\n     \"*\"\n    ]\n   ],\n   \"version\": [\n    [\n     \"*\"\n    ],\n    [\n     \"*\"\n    ]\n   ]\n  },\n  \"createdOnEpoch\": {\n   \"seconds\": 68143450,\n   \"nanos\": -64586265\n  }\n },\n {\n  \"id\": \"sit dolore aliquip proident dolor\",\n  \"name\": \"occaecat eiusmod est\",\n  \"description\": \"dolor ad\",\n  \"contactEmail\": \"dolore dolor enim exercitation\",\n  \"img\": \"commodo proident incididunt velit\",\n  \"url\": \"https://myapp.osdu.com/action/{type}/{id}\",\n  \"filter\": {\n   \"entityType\": [\n    [\n     \"*\"\n    ],\n    [\n     \"*\"\n    ]\n   ],\n   \"source\": [\n    [\n     \"*\"\n    ],\n    [\n     \"*\"\n    ]\n   ],\n   \"version\": [\n    [\n     \"*\"\n    ],\n    [\n     \"*\"\n    ]\n   ]\n  },\n  \"createdOnEpoch\": {\n   \"seconds\": 65223635,\n   \"nanos\": -61344308\n  }\n }\n]"
										},
										{
											"name": "Server Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"acl\": {\n        \"viewers\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"owners\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"legal\": {\n        \"legaltags\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"otherRelevantDataCountries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"data\": {\n        \"msg\": \"Hello\",\n        \"uri\": \"https://myproj.com/abc123\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action:retrieve",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action:retrieve"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"acl\": {\n        \"viewers\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"owners\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"legal\": {\n        \"legaltags\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"otherRelevantDataCountries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"data\": {\n        \"msg\": \"Hello\",\n        \"uri\": \"https://myproj.com/abc123\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action:retrieve",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action:retrieve"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"acl\": {\n        \"viewers\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"owners\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"legal\": {\n        \"legaltags\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"otherRelevantDataCountries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"data\": {\n        \"msg\": \"Hello\",\n        \"uri\": \"https://myproj.com/abc123\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action:retrieve",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action:retrieve"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"acl\": {\n        \"viewers\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"owners\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"legal\": {\n        \"legaltags\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"otherRelevantDataCountries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"data\": {\n        \"msg\": \"Hello\",\n        \"uri\": \"https://myproj.com/abc123\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action:retrieve",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action:retrieve"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Bad Gateway",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"acl\": {\n        \"viewers\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"owners\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"legal\": {\n        \"legaltags\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"otherRelevantDataCountries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"data\": {\n        \"msg\": \"Hello\",\n        \"uri\": \"https://myproj.com/abc123\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action:retrieve",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action:retrieve"
													]
												}
											},
											"status": "Bad Gateway",
											"code": 502,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										}
									]
								},
								{
									"name": "Test an action registration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status should be OK\", () => {\r",
													"    pm.expect(1).to.eql(1);\r",
													"});\r",
													"const response = pm.response.json();\r",
													"console.log(JSON.stringify(response));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
												"key": "data-partition-id",
												"value": "{{data_partition_id}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": {\n    \"id\": \"petrel-launch-project\",\n    \"name\": \"Petrel Project\",\n    \"description\": \"This action launches the Petrel projects landing page that holds the selected data.\",\n    \"url\": \"https://myapp.osdu.opengroup.org/action/{data.uri:^(?:[^\\\\/]*(?:\\\\/(?:\\\\/[^\\\\/]*\\\\/?)?)?([^?]+)(?:\\\\??.+)?)$}\",\n    \"img\": \"https://mycdn.com/img.png\",\n    \"filter\": {\n      \"entityType\": [\"regularheightfield\", \"project\"],\n      \"source\": [\"petrel\"],\n      \"version\": [\"*\"]\n    }\n  },\n  \"testPayload\": {\n    \"id\": \"common:regularheightfield:123456\",\n    \"kind\": \"common:petrel:regularheightfield:1.0.0\",\n    \"data\": {\n      \"uri\": \"https://myproj.com/abc123\"\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{osduonaws_base_url}}/api/register/v1/action:test",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"action:test"
											]
										},
										"description": "Test an action registration. Required roles: 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'"
									},
									"response": [
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"contactEmail\": \"<string>\",\n        \"img\": \"<string>\",\n        \"url\": \"<string>\",\n        \"filter\": {\n            \"entityType\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ],\n            \"source\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ],\n            \"version\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ]\n        }\n    },\n    \"testPayload\": \"<object>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action:test",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action:test"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"contactEmail\": \"<string>\",\n        \"img\": \"<string>\",\n        \"url\": \"<string>\",\n        \"filter\": {\n            \"entityType\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ],\n            \"source\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ],\n            \"version\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ]\n        }\n    },\n    \"testPayload\": \"<object>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action:test",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action:test"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"contactEmail\": \"<string>\",\n        \"img\": \"<string>\",\n        \"url\": \"<string>\",\n        \"filter\": {\n            \"entityType\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ],\n            \"source\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ],\n            \"version\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ]\n        }\n    },\n    \"testPayload\": \"<object>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action:test",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action:test"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Server Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"contactEmail\": \"<string>\",\n        \"img\": \"<string>\",\n        \"url\": \"<string>\",\n        \"filter\": {\n            \"entityType\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ],\n            \"source\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ],\n            \"version\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ]\n        }\n    },\n    \"testPayload\": \"<object>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action:test",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action:test"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Service Unavailable",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"contactEmail\": \"<string>\",\n        \"img\": \"<string>\",\n        \"url\": \"<string>\",\n        \"filter\": {\n            \"entityType\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ],\n            \"source\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ],\n            \"version\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ]\n        }\n    },\n    \"testPayload\": \"<object>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action:test",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action:test"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"contactEmail\": \"<string>\",\n        \"img\": \"<string>\",\n        \"url\": \"<string>\",\n        \"filter\": {\n            \"entityType\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ],\n            \"source\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ],\n            \"version\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ]\n        }\n    },\n    \"testPayload\": \"<object>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action:test",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action:test"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"url\": \"et cupidatat id nostrud elit\",\n \"errors\": \"amet veniam\"\n}"
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"contactEmail\": \"<string>\",\n        \"img\": \"<string>\",\n        \"url\": \"<string>\",\n        \"filter\": {\n            \"entityType\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ],\n            \"source\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ],\n            \"version\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ]\n        }\n    },\n    \"testPayload\": \"<object>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action:test",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action:test"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Bad Gateway",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"action\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"contactEmail\": \"<string>\",\n        \"img\": \"<string>\",\n        \"url\": \"<string>\",\n        \"filter\": {\n            \"entityType\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ],\n            \"source\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ],\n            \"version\": [\n                [\n                    \"*\"\n                ],\n                [\n                    \"*\"\n                ]\n            ]\n        }\n    },\n    \"testPayload\": \"<object>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/action:test",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action:test"
													]
												}
											},
											"status": "Bad Gateway",
											"code": 502,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										}
									]
								},
								{
									"name": "List all topics",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status should be OK\", () => {\r",
													"    pm.expect(1).to.eql(1);\r",
													"});\r",
													"const response = pm.response.json();\r",
													"console.log(JSON.stringify(response));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
												"key": "data-partition-id",
												"value": "{{data_partition_id}}"
											}
										],
										"url": {
											"raw": "{{osduonaws_base_url}}/api/register/v1/topics",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"topics"
											]
										},
										"description": "List all topics that you can create a subscription for, along with the corresponding sample messages. Required role: 'users.datalake.editors' or 'users.datalake.admins'"
									},
									"response": [
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/topics",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"topics"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/topics",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"topics"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/topics",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"topics"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/topics",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"topics"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Service Unavailable",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/topics",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"topics"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/topics",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"topics"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Bad Gateway",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/topics",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"topics"
													]
												}
											},
											"status": "Bad Gateway",
											"code": 502,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/topics",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"topics"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"name\": \"records-changed\",\n  \"description\": \"This notification is sent whenever a record is created, updated or deleted.\",\n  \"state\": \"ACTIVE\",\n  \"example\": [\n   {\n    \"id\": \"common:test:123\",\n    \"kind\": \"common:source:type:1.0.0\",\n    \"op\": \"deleted\"\n   },\n   {\n    \"id\": \"common:test:123\",\n    \"kind\": \"common:source:type:1.0.0\",\n    \"op\": \"deleted\"\n   }\n  ]\n },\n {\n  \"name\": \"records-changed\",\n  \"description\": \"This notification is sent whenever a record is created, updated or deleted.\",\n  \"state\": \"ACTIVE\",\n  \"example\": [\n   {\n    \"id\": \"common:test:123\",\n    \"kind\": \"common:source:type:1.0.0\",\n    \"op\": \"deleted\"\n   },\n   {\n    \"id\": \"common:test:123\",\n    \"kind\": \"common:source:type:1.0.0\",\n    \"op\": \"deleted\"\n   }\n  ]\n }\n]"
										}
									]
								},
								{
									"name": "Delete an action  registration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
												"key": "data-partition-id",
												"value": "{{data_partition_id}}"
											}
										],
										"url": {
											"raw": "{{osduonaws_base_url}}/api/register/v1/action/:id",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"register",
												"v1",
												"action",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "createtest1hh26ww",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete an action registration with the given id. Required role: 'users.datalake.admins'"
									},
									"response": [
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/action/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/action/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Bad Gateway",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/action/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Gateway",
											"code": 502,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/action/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Service Unavailable",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/action/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/action/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/action/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										},
										{
											"name": "Server Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "appkey",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
														"key": "data-partition-id",
														"value": "common"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/action/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"action",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Partition",
					"item": [
						{
							"name": "Create Partition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201 or 409\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 409]);\r",
											"});\r",
											"pm.test(\"Status description - OK or Conflict.\", function () {\r",
											"    pm.expect(pm.response.status).to.be.oneOf([\"OK\", \"Conflict\", \"Created\"]);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"properties\": {\n          \"compliance-ruleset\": {\n              \"value\": \"shared\"\n          },\n          \"elastic-endpoint\": {\n              \"sensitive\": true,\n              \"value\": \"elastic-endpoint\"\n          },\n          \"elastic-username\": {\n              \"sensitive\": true,\n              \"value\": \"elastic-username\"\n          },\n          \"elastic-password\": {\n              \"sensitive\": true,\n              \"value\": \"elastic-password\"\n          }\n      }\n\n}\n"
								},
								"url": {
									"raw": "{{osduonaws_base_url}}/api/partition/v1/partitions/mypartition3",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"partition",
										"v1",
										"partitions",
										"mypartition3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Partition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/partition/v1/partitions/mypartition3",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"partition",
										"v1",
										"partitions",
										"mypartition3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Partition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/partition/v1/partitions/mypartition3",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"partition",
										"v1",
										"partitions",
										"mypartition3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Health Check",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/partition/v1/actuator/health",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"partition",
										"v1",
										"actuator",
										"health"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CRS Conversion",
					"item": [
						{
							"name": "v3",
							"item": [
								{
									"name": "info",
									"item": [
										{
											"name": "info",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{osduonaws_base_url}}/api/crs/converter/v3/info",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"crs",
														"converter",
														"v3",
														"info"
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "opendes"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/info",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"info"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"artifactId\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"buildTime\": \"<string>\",\n  \"commitId\": \"<string>\",\n  \"commitMessage\": \"<string>\",\n  \"connectedOuterServices\": [\n    {\n      \"value\": \"reference #/components/schemas/ConnectedOuterService not found in the OpenAPI spec\"\n    },\n    {\n      \"value\": \"reference #/components/schemas/ConnectedOuterService not found in the OpenAPI spec\"\n    }\n  ],\n  \"groupId\": \"<string>\",\n  \"version\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "opendes"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/info",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"info"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "opendes"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/info",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"info"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "(Required) tenant",
																"key": "data-partition-id",
																"value": "opendes"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/info",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"info"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "convertTrajectory",
									"item": [
										{
											"name": "Convert trajectory stations",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"trajectoryCRS\": \"{{data_partition_id}}:reference-data--CoordinateReferenceSystem:BoundProjected:EPSG::23032_EPSG::1612:\",\n  \"azimuthReference\": \"TN\",\n  \"unitZ\": \"{{data_partition_id}}:reference-data--UnitOfMeasure:m:\",\n  \"referencePoint\": {\n    \"x\": 400000,\n    \"y\": 6500000,\n    \"z\": 0\n  },\n  \"inputKind\": \"MD_Incl_Azim\",\n  \"interpolate\": true,\n  \"inputStations\": [\n    {\n      \"md\": 1000,\n      \"azimuth\": 100,\n      \"inclination\": 10\n    },\n    {\n      \"md\": 2000,\n      \"azimuth\": 200,\n      \"inclination\": 200\n    }\n  ],\n  \"method\": \"AzimuthalEquidistant\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{osduonaws_base_url}}/api/crs/converter/v3/convertTrajectory",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"crs",
														"converter",
														"v3",
														"convertTrajectory"
													]
												},
												"description": "Convert a list of trajectory stations, given the unit and spatial context and a reference point in 3D where MD==0."
											},
											"response": [
												{
													"name": "Trajectory conversion performed successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "data-partition-id",
																"value": "<string>"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"azimuthReference\": \"<string>\",\n  \"inputStations\": [\n    {\n      \"azimuth\": \"<double>\",\n      \"inclination\": \"<double>\",\n      \"md\": \"<double>\",\n      \"dx\": \"<double>\",\n      \"dy\": \"<double>\",\n      \"dz\": \"<double>\"\n    },\n    {\n      \"azimuth\": \"<double>\",\n      \"inclination\": \"<double>\",\n      \"md\": \"<double>\",\n      \"dx\": \"<double>\",\n      \"dy\": \"<double>\",\n      \"dz\": \"<double>\"\n    }\n  ],\n  \"method\": \"<string>\",\n  \"referencePoint\": {\n    \"x\": \"<double>\",\n    \"y\": \"<double>\",\n    \"z\": \"<double>\"\n  },\n  \"trajectoryCRS\": \"<string>\",\n  \"unitZ\": \"<string>\",\n  \"unitXY\": \"<string>\",\n  \"inputKind\": \"<string>\",\n  \"interpolate\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/convertTrajectory",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"convertTrajectory"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"localCRS\": \"<string>\",\n  \"method\": \"<string>\",\n  \"stations\": [\n    {\n      \"azimuthGN\": \"<double>\",\n      \"azimuthTN\": \"<double>\",\n      \"dxTN\": \"<double>\",\n      \"dyTN\": \"<double>\",\n      \"inclination\": \"<double>\",\n      \"md\": \"<double>\",\n      \"point\": {\n        \"x\": \"<double>\",\n        \"y\": \"<double>\",\n        \"z\": \"<double>\"\n      },\n      \"wgs84Longitude\": \"<double>\",\n      \"wgs84Latitude\": \"<double>\",\n      \"dls\": \"<double>\",\n      \"original\": \"<boolean>\",\n      \"dz\": \"<double>\"\n    },\n    {\n      \"azimuthGN\": \"<double>\",\n      \"azimuthTN\": \"<double>\",\n      \"dxTN\": \"<double>\",\n      \"dyTN\": \"<double>\",\n      \"inclination\": \"<double>\",\n      \"md\": \"<double>\",\n      \"point\": {\n        \"x\": \"<double>\",\n        \"y\": \"<double>\",\n        \"z\": \"<double>\"\n      },\n      \"wgs84Longitude\": \"<double>\",\n      \"wgs84Latitude\": \"<double>\",\n      \"dls\": \"<double>\",\n      \"original\": \"<boolean>\",\n      \"dz\": \"<double>\"\n    }\n  ],\n  \"trajectoryCRS\": \"<string>\",\n  \"unitDls\": \"<string>\",\n  \"unitZ\": \"<string>\",\n  \"unitXY\": \"<string>\",\n  \"operationsApplied\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
												},
												{
													"name": "Bad input format",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "data-partition-id",
																"value": "<string>"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"azimuthReference\": \"<string>\",\n  \"inputStations\": [\n    {\n      \"azimuth\": \"<double>\",\n      \"inclination\": \"<double>\",\n      \"md\": \"<double>\",\n      \"dx\": \"<double>\",\n      \"dy\": \"<double>\",\n      \"dz\": \"<double>\"\n    },\n    {\n      \"azimuth\": \"<double>\",\n      \"inclination\": \"<double>\",\n      \"md\": \"<double>\",\n      \"dx\": \"<double>\",\n      \"dy\": \"<double>\",\n      \"dz\": \"<double>\"\n    }\n  ],\n  \"method\": \"<string>\",\n  \"referencePoint\": {\n    \"x\": \"<double>\",\n    \"y\": \"<double>\",\n    \"z\": \"<double>\"\n  },\n  \"trajectoryCRS\": \"<string>\",\n  \"unitZ\": \"<string>\",\n  \"unitXY\": \"<string>\",\n  \"inputKind\": \"<string>\",\n  \"interpolate\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/convertTrajectory",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"convertTrajectory"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\"\n}"
												},
												{
													"name": "CRS-converter overloaded; try again later. See HttpHeader 'Retry-After'.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "data-partition-id",
																"value": "<string>"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"azimuthReference\": \"<string>\",\n  \"inputStations\": [\n    {\n      \"azimuth\": \"<double>\",\n      \"inclination\": \"<double>\",\n      \"md\": \"<double>\",\n      \"dx\": \"<double>\",\n      \"dy\": \"<double>\",\n      \"dz\": \"<double>\"\n    },\n    {\n      \"azimuth\": \"<double>\",\n      \"inclination\": \"<double>\",\n      \"md\": \"<double>\",\n      \"dx\": \"<double>\",\n      \"dy\": \"<double>\",\n      \"dz\": \"<double>\"\n    }\n  ],\n  \"method\": \"<string>\",\n  \"referencePoint\": {\n    \"x\": \"<double>\",\n    \"y\": \"<double>\",\n    \"z\": \"<double>\"\n  },\n  \"trajectoryCRS\": \"<string>\",\n  \"unitZ\": \"<string>\",\n  \"unitXY\": \"<string>\",\n  \"inputKind\": \"<string>\",\n  \"interpolate\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/convertTrajectory",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"convertTrajectory"
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "convertGeoJson",
									"item": [
										{
											"name": "Convert a GeoJSON or AnyCrsGeoJson structure",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"toCRS\": \"{{data_partition_id}}:reference-data--CoordinateReferenceSystem:Geographic2D:EPSG::4326:\",\n  \"toUnitZ\": \"{{data_partition_id}}:reference-data--UnitOfMeasure:m:\",\n  \"featureCollection\": {\n    \"features\": [\n      {\n        \"geometry\": {\n          \"coordinates\": [\n            313405.9477893702,\n            6544797.620047403,\n            6.561679790026246\n          ],\n          \"bbox\": null,\n          \"type\": \"AnyCrsPoint\"\n        },\n        \"bbox\": null,\n        \"properties\": {},\n        \"type\": \"AnyCrsFeature\"\n      }\n    ],\n    \"bbox\": null,\n    \"properties\": {},\n    \"CoordinateReferenceSystemID\": \"{{data_partition_id}}:reference-data--CoordinateReferenceSystem:BoundProjected:EPSG::23032_EPSG::1612:\",\n    \"VerticalUnitID\": \"{{data_partition_id}}:reference-data--UnitOfMeasure:m:\",\n    \"type\": \"AnyCrsFeatureCollection\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{osduonaws_base_url}}/api/crs/converter/v3/convertGeoJson",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"crs",
														"converter",
														"v3",
														"convertGeoJson"
													]
												},
												"description": "Convert a GeoJSON or AnyCrsGeoJson structure to a specified target CRS. GeoJSON is declared - by definition - to be in the context of WGS 84."
											},
											"response": [
												{
													"name": "Conversion performed successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "data-partition-id",
																"value": "<string>"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"featureCollection\": {\n    \"type\": \"AnyCrsFeatureCollection\",\n    \"features\": [\n      {\n        \"type\": \"Feature\",\n        \"properties\": {\n          \"consequat038\": {},\n          \"ex_5\": {},\n          \"velit_7b9\": {}\n        },\n        \"geometry\": {\n          \"type\": \"AnyCrsPoint\",\n          \"coordinates\": {}\n        },\n        \"bbox\": [\n          \"<number>\",\n          \"<number>\",\n          \"<number>\",\n          \"<number>\"\n        ]\n      },\n      {\n        \"type\": \"AnyCrsFeature\",\n        \"properties\": {\n          \"Lorem_2ef\": {},\n          \"fugiat3\": {}\n        },\n        \"geometry\": {\n          \"type\": \"AnyCrsMultiPoint\",\n          \"coordinates\": {}\n        },\n        \"bbox\": [\n          \"<number>\",\n          \"<number>\",\n          \"<number>\",\n          \"<number>\"\n        ]\n      }\n    ],\n    \"bbox\": [\n      \"<number>\",\n      \"<number>\",\n      \"<number>\",\n      \"<number>\"\n    ],\n    \"persistableReferenceCrs\": \"<string>\",\n    \"CoordinateReferenceSystemID\": \"<string>\",\n    \"VerticalUnitID\": \"<string>\",\n    \"persistableReferenceUnitZ\": \"<string>\"\n  },\n  \"toCRS\": \"<string>\",\n  \"toUnitZ\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/convertGeoJson",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"convertGeoJson"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"totalCount\": \"<integer>\",\n  \"successCount\": \"<integer>\",\n  \"featureCollection\": {\n    \"type\": \"AnyCrsFeatureCollection\",\n    \"features\": [\n      {\n        \"type\": \"AnyCrsFeature\",\n        \"properties\": {\n          \"sint_49\": {},\n          \"enim_\": {},\n          \"consequat__\": {}\n        },\n        \"geometry\": {\n          \"type\": \"MultiPolygon\",\n          \"coordinates\": {}\n        },\n        \"bbox\": [\n          \"<number>\",\n          \"<number>\",\n          \"<number>\",\n          \"<number>\"\n        ]\n      },\n      {\n        \"type\": \"AnyCrsFeature\",\n        \"properties\": {\n          \"nisia\": {},\n          \"in_d_d\": {}\n        },\n        \"geometry\": {\n          \"type\": \"Point\",\n          \"coordinates\": {}\n        },\n        \"bbox\": [\n          \"<number>\",\n          \"<number>\",\n          \"<number>\",\n          \"<number>\"\n        ]\n      }\n    ],\n    \"bbox\": [\n      \"<number>\",\n      \"<number>\",\n      \"<number>\",\n      \"<number>\"\n    ],\n    \"persistableReferenceCrs\": \"<string>\",\n    \"CoordinateReferenceSystemID\": \"<string>\",\n    \"VerticalUnitID\": \"<string>\",\n    \"persistableReferenceUnitZ\": \"<string>\"\n  },\n  \"operationsApplied\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
												},
												{
													"name": "Bad input format",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "data-partition-id",
																"value": "<string>"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"featureCollection\": {\n    \"type\": \"AnyCrsFeatureCollection\",\n    \"features\": [\n      {\n        \"type\": \"Feature\",\n        \"properties\": {\n          \"consequat038\": {},\n          \"ex_5\": {},\n          \"velit_7b9\": {}\n        },\n        \"geometry\": {\n          \"type\": \"AnyCrsPoint\",\n          \"coordinates\": {}\n        },\n        \"bbox\": [\n          \"<number>\",\n          \"<number>\",\n          \"<number>\",\n          \"<number>\"\n        ]\n      },\n      {\n        \"type\": \"AnyCrsFeature\",\n        \"properties\": {\n          \"Lorem_2ef\": {},\n          \"fugiat3\": {}\n        },\n        \"geometry\": {\n          \"type\": \"AnyCrsMultiPoint\",\n          \"coordinates\": {}\n        },\n        \"bbox\": [\n          \"<number>\",\n          \"<number>\",\n          \"<number>\",\n          \"<number>\"\n        ]\n      }\n    ],\n    \"bbox\": [\n      \"<number>\",\n      \"<number>\",\n      \"<number>\",\n      \"<number>\"\n    ],\n    \"persistableReferenceCrs\": \"<string>\",\n    \"CoordinateReferenceSystemID\": \"<string>\",\n    \"VerticalUnitID\": \"<string>\",\n    \"persistableReferenceUnitZ\": \"<string>\"\n  },\n  \"toCRS\": \"<string>\",\n  \"toUnitZ\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/convertGeoJson",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"convertGeoJson"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\"\n}"
												},
												{
													"name": "CRS-converter overloaded; try again later. See HttpHeader 'Retry-After'.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "data-partition-id",
																"value": "<string>"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"featureCollection\": {\n    \"type\": \"AnyCrsFeatureCollection\",\n    \"features\": [\n      {\n        \"type\": \"Feature\",\n        \"properties\": {\n          \"consequat038\": {},\n          \"ex_5\": {},\n          \"velit_7b9\": {}\n        },\n        \"geometry\": {\n          \"type\": \"AnyCrsPoint\",\n          \"coordinates\": {}\n        },\n        \"bbox\": [\n          \"<number>\",\n          \"<number>\",\n          \"<number>\",\n          \"<number>\"\n        ]\n      },\n      {\n        \"type\": \"AnyCrsFeature\",\n        \"properties\": {\n          \"Lorem_2ef\": {},\n          \"fugiat3\": {}\n        },\n        \"geometry\": {\n          \"type\": \"AnyCrsMultiPoint\",\n          \"coordinates\": {}\n        },\n        \"bbox\": [\n          \"<number>\",\n          \"<number>\",\n          \"<number>\",\n          \"<number>\"\n        ]\n      }\n    ],\n    \"bbox\": [\n      \"<number>\",\n      \"<number>\",\n      \"<number>\",\n      \"<number>\"\n    ],\n    \"persistableReferenceCrs\": \"<string>\",\n    \"CoordinateReferenceSystemID\": \"<string>\",\n    \"VerticalUnitID\": \"<string>\",\n    \"persistableReferenceUnitZ\": \"<string>\"\n  },\n  \"toCRS\": \"<string>\",\n  \"toUnitZ\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/convertGeoJson",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"convertGeoJson"
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "convertBinGrid",
									"item": [
										{
											"name": "CRS Convert service is an OSDU platform standard method for QC and conversion of Bin Grids, associated in particular with ingested seismic volumes, that describe the “real world” (Easting, Northing) of bin grid centers at (inline, crossline) local coordin",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"toCRS\": \"osdu:reference-data--CoordinateReferenceSystem:BoundProjected:EPSG::32064_EPSG::15851:\",\n  \"inBinGrid\": {\n    \"CoveragePercent\": 1,\n    \"ABCDBinGridSpatialLocation\": {\n      \"AsIngestedCoordinates\": {\n        \"type\": \"AnyCrsFeatureCollection\",\n        \"CoordinateReferenceSystemID\": \"osdu:reference-data--CoordinateReferenceSystem:Projected:EPSG::32615:\",\n        \"features\": [\n          {\n            \"type\": \"AnyCrsFeature\",\n            \"properties\": {\n              \"Kind\": \"osdu:wks:AbstractGeoJson.PropertiesBinGridCorners:1.0.0\",\n              \"PointProperties\": [\n                {\n                  \"Inline\": 1,\n                  \"Crossline\": 1000\n                }\n              ]\n            },\n            \"geometry\": {\n              \"type\": \"AnyCrsPoint\",\n              \"coordinates\": [\n                500000,\n                3000000\n              ]\n            }\n          },\n          {\n            \"type\": \"AnyCrsFeature\",\n            \"properties\": {\n              \"Kind\": \"osdu:wks:AbstractGeoJson.PropertiesBinGridCorners:1.0.0\",\n              \"PointProperties\": [\n                {\n                  \"Inline\": 1,\n                  \"Crossline\": 2000\n                }\n              ]\n            },\n            \"geometry\": {\n              \"type\": \"AnyCrsPoint\",\n              \"coordinates\": [\n                500000,\n                3100000\n              ]\n            }\n          },\n          {\n            \"type\": \"AnyCrsFeature\",\n            \"properties\": {\n              \"Kind\": \"osdu:wks:AbstractGeoJson.PropertiesBinGridCorners:1.0.0\",\n              \"PointProperties\": [\n                {\n                  \"Inline\": 101,\n                  \"Crossline\": 1000\n                }\n              ]\n            },\n            \"geometry\": {\n              \"type\": \"AnyCrsPoint\",\n              \"coordinates\": [\n                600000,\n                3000000\n              ]\n            }\n          },\n          {\n            \"type\": \"AnyCrsFeature\",\n            \"properties\": {\n              \"Kind\": \"osdu:wks:AbstractGeoJson.PropertiesBinGridCorners:1.0.0\",\n              \"PointProperties\": [\n                {\n                  \"Inline\": 101,\n                  \"Crossline\": 2000\n                }\n              ]\n            },\n            \"geometry\": {\n              \"type\": \"AnyCrsPoint\",\n              \"coordinates\": [\n                600000,\n                3100000\n              ]\n            }\n          }\n        ]\n      }\n    },\n    \"P6ScaleFactorOfBinGrid\": 1,\n    \"P6BinNodeIncrementOnIaxis\": 1,\n    \"P6BinNodeIncrementOnJaxis\": 1\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{osduonaws_base_url}}/api/crs/converter/v3/convertBinGrid",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"crs",
														"converter",
														"v3",
														"convertBinGrid"
													]
												},
												"description": "QC check of the “squareness” of a Bin Grid defined using 4 corner points. Coordinate conversion of a Bin Grid to a new CRS and “square it up” (if target CRS is same as original CRS then conversion is omitted, and the squareness test is done in the original CRS). Calculate derived P6 parameters from the input 4 corners. Calculate WGS 84 coordinates at the corners. Returns converted Bin Grid and a QC of squareness of the bin grid"
											},
											"response": [
												{
													"name": "Conversion performed successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "data-partition-id",
																"value": "<string>"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"toCRS\": \"<string>\",\n  \"inBinGrid\": {\n    \"BinGridName\": \"<string>\",\n    \"BinGridTypeID\": \"<string>\",\n    \"SourceBinGridID\": \"<integer>\",\n    \"SourceBinGridAppID\": \"<string>\",\n    \"CoveragePercent\": \"<double>\",\n    \"BinGridDefinitionMethodTypeID\": \"<string>\",\n    \"P6TransformationMethod\": \"<integer>\",\n    \"P6BinGridOriginI\": \"<double>\",\n    \"P6BinGridOriginJ\": \"<double>\",\n    \"P6BinGridOriginEasting\": \"<double>\",\n    \"P6BinGridOriginNorthing\": \"<double>\",\n    \"P6ScaleFactorOfBinGrid\": \"<double>\",\n    \"P6BinWidthOnIaxis\": \"<double>\",\n    \"P6BinWidthOnJaxis\": \"<double>\",\n    \"P6MapGridBearingOfBinGridJaxis\": \"<double>\",\n    \"P6BinNodeIncrementOnIaxis\": \"<integer>\",\n    \"P6BinNodeIncrementOnJaxis\": \"<integer>\",\n    \"ABCDBinGridSpatialLocation\": {\n      \"SpatialLocationCoordinatesDate\": \"<string>\",\n      \"QuantitativeAccuracyBandID\": \"<string>\",\n      \"QualitativeSpatialAccuracyTypeID\": \"<string>\",\n      \"CoordinateQualityCheckPerformedBy\": \"<string>\",\n      \"CoordinateQualityCheckDateTime\": \"<string>\",\n      \"CoordinateQualityCheckRemarks\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"AppliedOperations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"SpatialParameterTypeID\": \"<string>\",\n      \"SpatialGeometryTypeID\": \"<string>\",\n      \"AsIngestedCoordinates\": {\n        \"persistableReferenceCrs\": \"<string>\",\n        \"CoordinateReferenceSystemID\": \"<string>\",\n        \"type\": \"<string>\",\n        \"features\": [\n          {\n            \"type\": \"<string>\",\n            \"properties\": {\n              \"Kind\": \"<string>\",\n              \"PointProperties\": [\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                },\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                }\n              ]\n            },\n            \"geometry\": {\n              \"coordinates\": [\n                \"<double>\",\n                \"<double>\"\n              ],\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"<string>\",\n            \"properties\": {\n              \"Kind\": \"<string>\",\n              \"PointProperties\": [\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                },\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                }\n              ]\n            },\n            \"geometry\": {\n              \"coordinates\": [\n                \"<double>\",\n                \"<double>\"\n              ],\n              \"type\": \"<string>\"\n            }\n          }\n        ]\n      },\n      \"Wgs84Coordinates\": {\n        \"features\": [\n          {\n            \"type\": \"<string>\",\n            \"properties\": {\n              \"Kind\": \"<string>\",\n              \"PointProperties\": [\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                },\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                }\n              ]\n            },\n            \"geometry\": {\n              \"coordinates\": [\n                \"<double>\",\n                \"<double>\"\n              ],\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"<string>\",\n            \"properties\": {\n              \"Kind\": \"<string>\",\n              \"PointProperties\": [\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                },\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                }\n              ]\n            },\n            \"geometry\": {\n              \"coordinates\": [\n                \"<double>\",\n                \"<double>\"\n              ],\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"Type\": \"<string>\"\n      }\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/convertBinGrid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"convertBinGrid"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"maxMisLocation\": {\n    \"dI\": \"<double>\",\n    \"dJ\": \"<double>\"\n  },\n  \"outBinGrid\": {\n    \"BinGridName\": \"<string>\",\n    \"BinGridTypeID\": \"<string>\",\n    \"SourceBinGridID\": \"<integer>\",\n    \"SourceBinGridAppID\": \"<string>\",\n    \"CoveragePercent\": \"<double>\",\n    \"BinGridDefinitionMethodTypeID\": \"<string>\",\n    \"P6TransformationMethod\": \"<integer>\",\n    \"P6BinGridOriginI\": \"<double>\",\n    \"P6BinGridOriginJ\": \"<double>\",\n    \"P6BinGridOriginEasting\": \"<double>\",\n    \"P6BinGridOriginNorthing\": \"<double>\",\n    \"P6ScaleFactorOfBinGrid\": \"<double>\",\n    \"P6BinWidthOnIaxis\": \"<double>\",\n    \"P6BinWidthOnJaxis\": \"<double>\",\n    \"P6MapGridBearingOfBinGridJaxis\": \"<double>\",\n    \"P6BinNodeIncrementOnIaxis\": \"<integer>\",\n    \"P6BinNodeIncrementOnJaxis\": \"<integer>\",\n    \"ABCDBinGridSpatialLocation\": {\n      \"SpatialLocationCoordinatesDate\": \"<string>\",\n      \"QuantitativeAccuracyBandID\": \"<string>\",\n      \"QualitativeSpatialAccuracyTypeID\": \"<string>\",\n      \"CoordinateQualityCheckPerformedBy\": \"<string>\",\n      \"CoordinateQualityCheckDateTime\": \"<string>\",\n      \"CoordinateQualityCheckRemarks\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"AppliedOperations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"SpatialParameterTypeID\": \"<string>\",\n      \"SpatialGeometryTypeID\": \"<string>\",\n      \"AsIngestedCoordinates\": {\n        \"persistableReferenceCrs\": \"<string>\",\n        \"CoordinateReferenceSystemID\": \"<string>\",\n        \"type\": \"<string>\",\n        \"features\": [\n          {\n            \"type\": \"<string>\",\n            \"properties\": {\n              \"Kind\": \"<string>\",\n              \"PointProperties\": [\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                },\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                }\n              ]\n            },\n            \"geometry\": {\n              \"coordinates\": [\n                \"<double>\",\n                \"<double>\"\n              ],\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"<string>\",\n            \"properties\": {\n              \"Kind\": \"<string>\",\n              \"PointProperties\": [\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                },\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                }\n              ]\n            },\n            \"geometry\": {\n              \"coordinates\": [\n                \"<double>\",\n                \"<double>\"\n              ],\n              \"type\": \"<string>\"\n            }\n          }\n        ]\n      },\n      \"Wgs84Coordinates\": {\n        \"features\": [\n          {\n            \"type\": \"<string>\",\n            \"properties\": {\n              \"Kind\": \"<string>\",\n              \"PointProperties\": [\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                },\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                }\n              ]\n            },\n            \"geometry\": {\n              \"coordinates\": [\n                \"<double>\",\n                \"<double>\"\n              ],\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"<string>\",\n            \"properties\": {\n              \"Kind\": \"<string>\",\n              \"PointProperties\": [\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                },\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                }\n              ]\n            },\n            \"geometry\": {\n              \"coordinates\": [\n                \"<double>\",\n                \"<double>\"\n              ],\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"Type\": \"<string>\"\n      }\n    }\n  },\n  \"AppliedOperations\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
												},
												{
													"name": "Bad input format",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "data-partition-id",
																"value": "<string>"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"toCRS\": \"<string>\",\n  \"inBinGrid\": {\n    \"BinGridName\": \"<string>\",\n    \"BinGridTypeID\": \"<string>\",\n    \"SourceBinGridID\": \"<integer>\",\n    \"SourceBinGridAppID\": \"<string>\",\n    \"CoveragePercent\": \"<double>\",\n    \"BinGridDefinitionMethodTypeID\": \"<string>\",\n    \"P6TransformationMethod\": \"<integer>\",\n    \"P6BinGridOriginI\": \"<double>\",\n    \"P6BinGridOriginJ\": \"<double>\",\n    \"P6BinGridOriginEasting\": \"<double>\",\n    \"P6BinGridOriginNorthing\": \"<double>\",\n    \"P6ScaleFactorOfBinGrid\": \"<double>\",\n    \"P6BinWidthOnIaxis\": \"<double>\",\n    \"P6BinWidthOnJaxis\": \"<double>\",\n    \"P6MapGridBearingOfBinGridJaxis\": \"<double>\",\n    \"P6BinNodeIncrementOnIaxis\": \"<integer>\",\n    \"P6BinNodeIncrementOnJaxis\": \"<integer>\",\n    \"ABCDBinGridSpatialLocation\": {\n      \"SpatialLocationCoordinatesDate\": \"<string>\",\n      \"QuantitativeAccuracyBandID\": \"<string>\",\n      \"QualitativeSpatialAccuracyTypeID\": \"<string>\",\n      \"CoordinateQualityCheckPerformedBy\": \"<string>\",\n      \"CoordinateQualityCheckDateTime\": \"<string>\",\n      \"CoordinateQualityCheckRemarks\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"AppliedOperations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"SpatialParameterTypeID\": \"<string>\",\n      \"SpatialGeometryTypeID\": \"<string>\",\n      \"AsIngestedCoordinates\": {\n        \"persistableReferenceCrs\": \"<string>\",\n        \"CoordinateReferenceSystemID\": \"<string>\",\n        \"type\": \"<string>\",\n        \"features\": [\n          {\n            \"type\": \"<string>\",\n            \"properties\": {\n              \"Kind\": \"<string>\",\n              \"PointProperties\": [\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                },\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                }\n              ]\n            },\n            \"geometry\": {\n              \"coordinates\": [\n                \"<double>\",\n                \"<double>\"\n              ],\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"<string>\",\n            \"properties\": {\n              \"Kind\": \"<string>\",\n              \"PointProperties\": [\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                },\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                }\n              ]\n            },\n            \"geometry\": {\n              \"coordinates\": [\n                \"<double>\",\n                \"<double>\"\n              ],\n              \"type\": \"<string>\"\n            }\n          }\n        ]\n      },\n      \"Wgs84Coordinates\": {\n        \"features\": [\n          {\n            \"type\": \"<string>\",\n            \"properties\": {\n              \"Kind\": \"<string>\",\n              \"PointProperties\": [\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                },\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                }\n              ]\n            },\n            \"geometry\": {\n              \"coordinates\": [\n                \"<double>\",\n                \"<double>\"\n              ],\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"<string>\",\n            \"properties\": {\n              \"Kind\": \"<string>\",\n              \"PointProperties\": [\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                },\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                }\n              ]\n            },\n            \"geometry\": {\n              \"coordinates\": [\n                \"<double>\",\n                \"<double>\"\n              ],\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"Type\": \"<string>\"\n      }\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/convertBinGrid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"convertBinGrid"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\"\n}"
												},
												{
													"name": "CRS-converter overloaded; try again later. See HttpHeader 'Retry-After'.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "data-partition-id",
																"value": "<string>"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"toCRS\": \"<string>\",\n  \"inBinGrid\": {\n    \"BinGridName\": \"<string>\",\n    \"BinGridTypeID\": \"<string>\",\n    \"SourceBinGridID\": \"<integer>\",\n    \"SourceBinGridAppID\": \"<string>\",\n    \"CoveragePercent\": \"<double>\",\n    \"BinGridDefinitionMethodTypeID\": \"<string>\",\n    \"P6TransformationMethod\": \"<integer>\",\n    \"P6BinGridOriginI\": \"<double>\",\n    \"P6BinGridOriginJ\": \"<double>\",\n    \"P6BinGridOriginEasting\": \"<double>\",\n    \"P6BinGridOriginNorthing\": \"<double>\",\n    \"P6ScaleFactorOfBinGrid\": \"<double>\",\n    \"P6BinWidthOnIaxis\": \"<double>\",\n    \"P6BinWidthOnJaxis\": \"<double>\",\n    \"P6MapGridBearingOfBinGridJaxis\": \"<double>\",\n    \"P6BinNodeIncrementOnIaxis\": \"<integer>\",\n    \"P6BinNodeIncrementOnJaxis\": \"<integer>\",\n    \"ABCDBinGridSpatialLocation\": {\n      \"SpatialLocationCoordinatesDate\": \"<string>\",\n      \"QuantitativeAccuracyBandID\": \"<string>\",\n      \"QualitativeSpatialAccuracyTypeID\": \"<string>\",\n      \"CoordinateQualityCheckPerformedBy\": \"<string>\",\n      \"CoordinateQualityCheckDateTime\": \"<string>\",\n      \"CoordinateQualityCheckRemarks\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"AppliedOperations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"SpatialParameterTypeID\": \"<string>\",\n      \"SpatialGeometryTypeID\": \"<string>\",\n      \"AsIngestedCoordinates\": {\n        \"persistableReferenceCrs\": \"<string>\",\n        \"CoordinateReferenceSystemID\": \"<string>\",\n        \"type\": \"<string>\",\n        \"features\": [\n          {\n            \"type\": \"<string>\",\n            \"properties\": {\n              \"Kind\": \"<string>\",\n              \"PointProperties\": [\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                },\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                }\n              ]\n            },\n            \"geometry\": {\n              \"coordinates\": [\n                \"<double>\",\n                \"<double>\"\n              ],\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"<string>\",\n            \"properties\": {\n              \"Kind\": \"<string>\",\n              \"PointProperties\": [\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                },\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                }\n              ]\n            },\n            \"geometry\": {\n              \"coordinates\": [\n                \"<double>\",\n                \"<double>\"\n              ],\n              \"type\": \"<string>\"\n            }\n          }\n        ]\n      },\n      \"Wgs84Coordinates\": {\n        \"features\": [\n          {\n            \"type\": \"<string>\",\n            \"properties\": {\n              \"Kind\": \"<string>\",\n              \"PointProperties\": [\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                },\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                }\n              ]\n            },\n            \"geometry\": {\n              \"coordinates\": [\n                \"<double>\",\n                \"<double>\"\n              ],\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"<string>\",\n            \"properties\": {\n              \"Kind\": \"<string>\",\n              \"PointProperties\": [\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                },\n                {\n                  \"Label\": \"<string>\",\n                  \"Inline\": \"<integer>\",\n                  \"Crossline\": \"<integer>\"\n                }\n              ]\n            },\n            \"geometry\": {\n              \"coordinates\": [\n                \"<double>\",\n                \"<double>\"\n              ],\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"Type\": \"<string>\"\n      }\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/convertBinGrid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"convertBinGrid"
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "convert",
									"item": [
										{
											"name": "Convert a list of points",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{access_token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "data-partition-id",
														"value": "{{data_partition_id}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"fromCRS\": \"osdu:reference-data--CoordinateReferenceSystem:BoundProjected:EPSG::29193_EPSG::1867:\",\n\"toCRS\": \"osdu:reference-data--CoordinateReferenceSystem:Geographic2D:EPSG::4326:\",\n\"points\": [\n    {\n        \"x\": 697339.525,\n        \"y\": 7239989.403,\n        \"z\": 0\n    }\n]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{osduonaws_base_url}}/api/crs/converter/v3/convert",
													"host": [
														"{{osduonaws_base_url}}"
													],
													"path": [
														"api",
														"crs",
														"converter",
														"v3",
														"convert"
													]
												},
												"description": "Convert a list of points"
											},
											"response": [
												{
													"name": "Conversion performed successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "data-partition-id",
																"value": "<string>"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"fromCRS\": \"<string>\",\n  \"points\": [\n    {\n      \"x\": \"<double>\",\n      \"y\": \"<double>\",\n      \"z\": \"<double>\"\n    },\n    {\n      \"x\": \"<double>\",\n      \"y\": \"<double>\",\n      \"z\": \"<double>\"\n    }\n  ],\n  \"toCRS\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/convert",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"convert"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"successCount\": \"<integer>\",\n  \"points\": [\n    {\n      \"x\": \"<double>\",\n      \"y\": \"<double>\",\n      \"z\": \"<double>\"\n    },\n    {\n      \"x\": \"<double>\",\n      \"y\": \"<double>\",\n      \"z\": \"<double>\"\n    }\n  ],\n  \"operationsApplied\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
												},
												{
													"name": "Bad input format",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "data-partition-id",
																"value": "<string>"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"fromCRS\": \"<string>\",\n  \"points\": [\n    {\n      \"x\": \"<double>\",\n      \"y\": \"<double>\",\n      \"z\": \"<double>\"\n    },\n    {\n      \"x\": \"<double>\",\n      \"y\": \"<double>\",\n      \"z\": \"<double>\"\n    }\n  ],\n  \"toCRS\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/convert",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"convert"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\"\n}"
												},
												{
													"name": "CRS-converter overloaded; try again later. See HttpHeader 'Retry-After'.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "data-partition-id",
																"value": "<string>"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"fromCRS\": \"<string>\",\n  \"points\": [\n    {\n      \"x\": \"<double>\",\n      \"y\": \"<double>\",\n      \"z\": \"<double>\"\n    },\n    {\n      \"x\": \"<double>\",\n      \"y\": \"<double>\",\n      \"z\": \"<double>\"\n    }\n  ],\n  \"toCRS\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/convert",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"convert"
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "Health of CRS Conversion",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "data-partition-id",
										"type": "text",
										"value": "{{data_partition_id}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/crs/converter/actuator/health",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"crs",
										"converter",
										"actuator",
										"health"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CRS Catalog",
					"item": [
						{
							"name": "V3",
							"item": [
								{
									"name": "Search Coordinate Transformation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "data-partition-id",
												"value": "{{data_partition_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"codeSpace\": \"EPSG\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{osduonaws_base_url}}/api/crs/catalog/v3/coordinate-transformation",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"crs",
												"catalog",
												"v3",
												"coordinate-transformation"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Coordinate Transformation 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "data-partition-id",
												"value": "{{data_partition_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"sourceCRS\": \"osdu:reference-data--CoordinateReferenceSystem:Geographic2D:EPSG::4204:\",\r\n    \"targetCRS\": \"osdu:reference-data--CoordinateReferenceSystem:Geographic2D:EPSG::4326:\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{osduonaws_base_url}}/api/crs/catalog/v3/coordinate-transformation",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"crs",
												"catalog",
												"v3",
												"coordinate-transformation"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Coordinate Transformation 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "data-partition-id",
												"value": "{{data_partition_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"sourceCRS\": \"osdu:reference-data--CoordinateReferenceSystem:Geographic2D:EPSG::4267:\",\r\n    \"targetCRS\": \"osdu:reference-data--CoordinateReferenceSystem:Geographic2D:EPSG::4326:\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{osduonaws_base_url}}/api/crs/catalog/v3/coordinate-transformation",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"crs",
												"catalog",
												"v3",
												"coordinate-transformation"
											]
										}
									},
									"response": []
								},
								{
									"name": "V3 Get coordinate transformations",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "data-partition-id",
												"value": "{{data_partition_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{osduonaws_base_url}}/api/crs/catalog/v3/coordinate-transformation?recordId=osdu:reference-data--CoordinateTransformation:EPSG::1111",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"crs",
												"catalog",
												"v3",
												"coordinate-transformation"
											],
											"query": [
												{
													"key": "recordId",
													"value": "osdu:reference-data--CoordinateTransformation:EPSG::1111"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Coordinate Reference Systems",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "data-partition-id",
												"value": "{{data_partition_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"codeSpace\": \"EPSG\",\r\n    \"limit\": 1,\r\n    \"offset\": 1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{osduonaws_base_url}}/api/crs/catalog/v3/coordinate-reference-system",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"crs",
												"catalog",
												"v3",
												"coordinate-reference-system"
											]
										}
									},
									"response": []
								},
								{
									"name": "Coordinate Reference System",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "data-partition-id",
												"value": "{{data_partition_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{osduonaws_base_url}}/api/crs/catalog/v3/coordinate-reference-system?dataId=Geographic2D:EPSG::4158&recordId=osdu:reference-data--CoordinateReferenceSystem:Geographic2D:EPSG::4158",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"crs",
												"catalog",
												"v3",
												"coordinate-reference-system"
											],
											"query": [
												{
													"key": "dataId",
													"value": "Geographic2D:EPSG::4158"
												},
												{
													"key": "recordId",
													"value": "osdu:reference-data--CoordinateReferenceSystem:Geographic2D:EPSG::4158"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Check area of use",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "data-partition-id",
												"value": "{{data_partition_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"recordId\": \"osdu:reference-data--CoordinateReferenceSystem:Geographic2D:EPSG::4204\",\r\n    \"points\": [\r\n        {\r\n            \"latitude\": 16,\r\n            \"longitude\": 34\r\n        },\r\n        {\r\n            \"latitude\": 16.5,\r\n            \"longitude\": 34.1\r\n        },\r\n        {\r\n            \"latitude\": 16.5,\r\n            \"longitude\": 35.8\r\n        },\r\n        {\r\n            \"latitude\": 80.1,\r\n            \"longitude\": 90\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{osduonaws_base_url}}/api/crs/catalog/v3/points-in-aou",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"crs",
												"catalog",
												"v3",
												"points-in-aou"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Health Check",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status should be OK\", () => {\r",
											"    pm.expect(1).to.eql(1);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/crs/catalog/actuator/health",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"crs",
										"catalog",
										"actuator",
										"health"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Notification",
					"item": [
						{
							"name": "recordChanged",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"     pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) tenant",
										"key": "data-partition-id",
										"value": "{{data_partition_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"Type\": \"Notification\",\r\n\t\"message\": {\r\n\t\"attributes\": {\r\n\t\"correlation-id\": \"39137f49-67d6-4001-a6aa-15521ef4f49e\",\r\n\t\"data-partition-id\": \"osdu\"\r\n\t},\r\n\t\"data\": \"W3sia2luZCI6InRlc3RraW5kIiwiaWQiOiJ0ZXN0aWQiLCJvcGVyYXRpb250eXBlIjoiY3JlYXRlIn0seyJraW5kIjoidGVzdGtpbmQyIiwiaWQiOiJ0ZXN0aWQyIiwib3BlcmF0aW9udHlwZSI6InVwZGF0ZSJ9XQ\",\r\n\t\"messageId\": \"136969346945\"\r\n\t},\r\n\t\"subscription\": \"{{nid}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{osduonaws_base_url}}/api/notification/v1/push-handlers/records-changed",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"notification",
										"v1",
										"push-handlers",
										"records-changed"
									]
								}
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "null"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/push-handlers/records-changed",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"push-handlers",
												"records-changed"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "null"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/push-handlers/records-changed",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"push-handlers",
												"records-changed"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "null"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/push-handlers/records-changed",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"push-handlers",
												"records-changed"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "null"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/push-handlers/records-changed",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"push-handlers",
												"records-changed"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"description": "(Required) tenant",
												"key": "data-partition-id",
												"value": "null"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/push-handlers/records-changed",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"push-handlers",
												"records-changed"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete a subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
										"key": "data-partition-id",
										"value": "{{data_partition_id}}"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/register/v1/subscription/:id",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"register",
										"v1",
										"subscription",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{sid}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Delete a subscription with its Id. Required role: 'users.datalake.admins'"
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "appkey",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
												"key": "data-partition-id",
												"value": "common"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscription/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscription",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Gateway",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "appkey",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
												"key": "data-partition-id",
												"value": "common"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscription/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscription",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Gateway",
									"code": 502,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
								},
								{
									"name": "Server Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "appkey",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
												"key": "data-partition-id",
												"value": "common"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscription/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscription",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "appkey",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
												"key": "data-partition-id",
												"value": "common"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscription/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscription",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "appkey",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
												"key": "data-partition-id",
												"value": "common"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscription/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscription",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "appkey",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
												"key": "data-partition-id",
												"value": "common"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscription/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscription",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "appkey",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
												"key": "data-partition-id",
												"value": "common"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscription/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscription",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
								},
								{
									"name": "Service Unavailable",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "appkey",
												"value": "<API Key>"
											},
											{
												"description": "(Required) Specifies the partition to use. This should be either the partition name associated with the partition.",
												"key": "data-partition-id",
												"value": "common"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscription/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscription",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 58518494,\n \"reason\": \"labore voluptate est\",\n \"message\": \"sit sed ipsum incididunt veniam\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Ingestion",
			"item": [
				{
					"name": "SeismicDMS",
					"item": [
						{
							"name": "General",
							"item": [
								{
									"name": "STATUS SET",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.environment.set('serviceCloudProvider', pm.response.headers.get('Service-Provider'));",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"service OK\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function makeID_general(length) {\r",
													"   var result           = '';\r",
													"   var characters       = 'abcdefghijklmnopqrstuvwxyz';\r",
													"   var charactersLength = characters.length;\r",
													"   for ( var i = 0; i < length; i++ ) {\r",
													"      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
													"   }\r",
													"   return result;\r",
													"}\r",
													"\r",
													"postman.setEnvironmentVariable(\"subproject\", makeID_general(16));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-api-key",
												"value": "{{SVC_API_KEY}}"
											},
											{
												"key": "appkey",
												"value": "{{DE_APP_KEY}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{osduonaws_base_url}}/api/seismic-store/v3/svcstatus",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"seismic-store",
												"v3",
												"svcstatus"
											]
										}
									},
									"response": []
								},
								{
									"name": "ACCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(jsonData.status).to.eql(\"running\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{STOKEN}}"
											},
											{
												"key": "x-api-key",
												"value": "{{SVC_API_KEY}}"
											},
											{
												"key": "appkey",
												"value": "{{DE_APP_KEY}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{osduonaws_base_url}}/api/seismic-store/v3/svcstatus/access",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"seismic-store",
												"v3",
												"svcstatus",
												"access"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Tenant",
							"item": [
								{
									"name": "TENANT GET",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Tenant details\", function () {",
													"    pm.expect(jsonData.name)== \"osdu\";",
													"    pm.expect(jsonData.gcpid).to.exist;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{STOKEN}}"
											},
											{
												"key": "x-api-key",
												"value": "{{SVC_API_KEY}}"
											},
											{
												"key": "appkey",
												"value": "{{DE_APP_KEY}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{osduonaws_base_url}}/api/seismic-store/v3/tenant/osdu",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"seismic-store",
												"v3",
												"tenant",
												"osdu"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET sdpath",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"sd://\" + \"osdu\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{STOKEN}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{SVC_API_KEY}}",
												"type": "text"
											},
											{
												"key": "appkey",
												"value": "{{DE_APP_KEY}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{osduonaws_base_url}}/api/seismic-store/v3/tenant/sdpath?datapartition=osdu",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"seismic-store",
												"v3",
												"tenant",
												"sdpath"
											],
											"query": [
												{
													"key": "datapartition",
													"value": "osdu"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Subproject",
							"item": [
								{
									"name": "SUBPROJECT REGISTER",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200 or 409\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 409]);",
													"});",
													"pm.test(\"Status description - OK or Conflict.\", function () {",
													"    pm.expect(pm.response.status).to.be.oneOf([\"OK\", \"Conflict\"]);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{STOKEN}}"
											},
											{
												"key": "x-api-key",
												"value": "{{SVC_API_KEY}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "ltag",
												"value": "osdu-public-usa-dataset-1"
											},
											{
												"key": "appkey",
												"value": "{{DE_APP_KEY}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"admin\": \"admin@testing.com\",\n\t\"storage_class\": \"REGIONAL\",\n\t\"storage_location\": \"US-CENTRAL1\"\n}"
										},
										"url": {
											"raw": "{{osduonaws_base_url}}/api/seismic-store/v3/subproject/tenant/osdu/subproject/subproject50",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"seismic-store",
												"v3",
												"subproject",
												"tenant",
												"osdu",
												"subproject",
												"subproject50"
											]
										}
									},
									"response": []
								},
								{
									"name": "SUBPROJECT GET",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200 or 404 or 403\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200,404,403]);",
													"});",
													"",
													"/* check if subproject is exist with VCS_Provider = \"gitlab\" variable and skip its creation if true",
													"if (pm.environment.get(\"VCS_Provider\") === 'gitlab') {",
													"    if (responseCode.code === 200) {",
													"        var jsonData = pm.response.json();",
													"        if (pm.expect(jsonData.name).to.eql(pm.environment.get(\"subproject\"))) {",
													"            postman.setNextRequest(\"SUBPROJECT LIST\");",
													"        } else {",
													"            if(pm.environment.get('serviceCloudProvider') === 'ibm') {",
													"                postman.setNextRequest(\"SUBPROJECT REGISTER\")",
													"            } else {",
													"                postman.setNextRequest(\"SUBPROJECT REGISTER Gitlab\");",
													"            }",
													"        };",
													"    } else {",
													"        if(pm.environment.get('serviceCloudProvider') === 'ibm') {",
													"            postman.setNextRequest(\"SUBPROJECT REGISTER\")",
													"        } else {",
													"            postman.setNextRequest(\"SUBPROJECT REGISTER Gitlab\")",
													"        }",
													"    };",
													"};*/"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{STOKEN}}"
											},
											{
												"key": "x-api-key",
												"value": "{{SVC_API_KEY}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "appkey",
												"value": "{{DE_APP_KEY}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{osduonaws_base_url}}/api/seismic-store/v3/subproject/tenant/osdu/subproject/subproject50",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"seismic-store",
												"v3",
												"subproject",
												"tenant",
												"osdu",
												"subproject",
												"subproject50"
											]
										}
									},
									"response": []
								},
								{
									"name": "SUBPROJECT GET NEW",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{STOKEN}}"
											},
											{
												"key": "x-api-key",
												"value": "{{SVC_API_KEY}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "appkey",
												"value": "{{DE_APP_KEY}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{osduonaws_base_url}}/api/seismic-store/v3/subproject/tenant/osdu/subproject/subproject50",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"seismic-store",
												"v3",
												"subproject",
												"tenant",
												"osdu",
												"subproject",
												"subproject50"
											]
										}
									},
									"response": []
								},
								{
									"name": "SUBPROJECT LIST",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{STOKEN}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-api-key",
												"value": "{{SVC_API_KEY}}"
											},
											{
												"key": "appkey",
												"value": "{{DE_APP_KEY}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{osduonaws_base_url}}/api/seismic-store/v3/subproject/tenant/osdu",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"seismic-store",
												"v3",
												"subproject",
												"tenant",
												"osdu"
											]
										}
									},
									"response": []
								},
								{
									"name": "SUBPROJECT PATCH",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"/*",
													"pm.test(\"Subproject created\", function () {",
													"    var child = Object.keys(jsonData);",
													"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"subproject\"));",
													"    pm.expect(jsonData.tenant).to.eql(pm.environment.get(\"tenant\"));",
													"    pm.expect(jsonData.ltag).to.eql(pm.environment.get(\"legaltag02\"));",
													"    pm.expect(jsonData.gcs_bucket).to.exist;",
													"    if(pm.environment.get('serviceCloudProvider') === 'google') {",
													"        pm.expect(jsonData.storage_class).to.eql('REGIONAL');",
													"        pm.expect(jsonData.storage_location).to.eql('US-CENTRAL1');",
													"    }",
													"});",
													"*/"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{STOKEN}}"
											},
											{
												"key": "x-api-key",
												"value": "{{SVC_API_KEY}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "ltag",
												"value": "osdu-public-usa-dataset-1"
											},
											{
												"key": "appkey",
												"value": "{{DE_APP_KEY}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{osduonaws_base_url}}/api/seismic-store/v3/subproject/tenant/osdu/subproject/subproject50",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"seismic-store",
												"v3",
												"subproject",
												"tenant",
												"osdu",
												"subproject",
												"subproject50"
											]
										}
									},
									"response": []
								},
								{
									"name": "SUBPROJECT DELETE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200 or 404 or 403\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200,404,403]);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{STOKEN}}"
											},
											{
												"key": "x-api-key",
												"value": "{{SVC_API_KEY}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "appkey",
												"value": "{{DE_APP_KEY}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{osduonaws_base_url}}/api/seismic-store/v3/subproject/tenant/osdu/subproject/subproject50",
											"host": [
												"{{osduonaws_base_url}}"
											],
											"path": [
												"api",
												"seismic-store",
												"v3",
												"subproject",
												"tenant",
												"osdu",
												"subproject",
												"subproject50"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Dataset",
			"item": [
				{
					"name": "dataset- File.generic",
					"item": [
						{
							"name": "01. Get Storage Instructions - File",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody)\r",
											"var SignedURL = data.storageLocation.signedUrl;\r",
											"var UnsignedUrl = data.storageLocation.unsignedUrl;\r",
											"var fileSource = data.storageLocation.fileSource;\r",
											"pm.environment.set(\"SignedURL\", SignedURL);\r",
											"pm.environment.set(\"UnsignedUrl\", UnsignedUrl);\r",
											"pm.environment.set(\"fileSource\", fileSource);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"const response = pm.response.json();\r",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "data-partition-id",
										"type": "text",
										"value": "{{data_partition_id}}"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/dataset/v1/storageInstructions?kindSubType=dataset--File.Generic",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"dataset",
										"v1",
										"storageInstructions"
									],
									"query": [
										{
											"key": "kindSubType",
											"value": "dataset--File.Generic"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "02. Upload File",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
											"});\r",
											"pm.test(\"Check For File Upload\", function () {\r",
											"   //console.log(pm.request.body.file)\r",
											"   if(pm.request.body.file && pm.request.body.file.value === null){\r",
											"        console.log(\"File is not Present Exiting.....\")\r",
											"        pm.expect(false).to.be.true;\r",
											"    }\r",
											"   \r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "file",
									"file": {
										"src": "wellbore.csv"
									}
								},
								"url": {
									"raw": "{{SignedURL}}",
									"host": [
										"{{SignedURL}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "03. Register Dataset - File",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody)\r",
											"var datasetRegistryId = data.datasetRegistries[0].id;\r",
											"pm.environment.set(\"DatasetRegistryId\", datasetRegistryId);\r",
											"\r",
											"pm.test(\"Status code is 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "data-partition-id",
										"type": "text",
										"value": "{{data_partition_id}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"datasetRegistries\": [\n        {\n            \"id\": \"{{data_partition_id}}:dataset--File.Generic:{{$guid}}\",\n            \"kind\": \"{{data_partition_id}}:wks:dataset--File.Generic:1.0.0\",\n            \"acl\": {\n                \"viewers\": [\n                    \"data.default.viewers@{{data_partition_id}}.example.com\"\n                ],\n                \"owners\": [\n                    \"data.default.owners@{{data_partition_id}}.example.com\"\n                ]\n            },\n            \"legal\": {\n                \"legaltags\": [\n                    \"{{data_partition_id}}-public-usa-dataset\"\n                ],\n                \"otherRelevantDataCountries\": [\n                    \"US\"\n                ],\n                \"status\": \"compliant\"\n            },\n            \"data\": {\n                \"DatasetProperties\": {\n                    \"FileSourceInfo\": {\n                        \"FileSource\": \"{{fileSource}}\",\n                        \"PreloadFilePath\": \"\"\n                    }\n                },\n                \"ResourceSecurityClassification\": \"osdu:reference-data--ResourceSecurityClassification:RESTRICTED:\"\n            },\n            \"meta\": [],\n            \"tags\": {}\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{osduonaws_base_url}}/api/dataset/v1/registerDataset",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"dataset",
										"v1",
										"registerDataset"
									]
								}
							},
							"response": []
						},
						{
							"name": "04. Get Retrieval Instructions (All types)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "data-partition-id",
										"type": "text",
										"value": "{{data_partition_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"datasetRegistryIds\": [\n        \"{{DatasetRegistryId}}\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{osduonaws_base_url}}/api/dataset/v1/retrievalInstructions",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"dataset",
										"v1",
										"retrievalInstructions"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "dataset-FileCollection.generic",
					"item": [
						{
							"name": "1. Create new Legal Tag",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"tagName\", \"osdu-public-usa-dataset-osduonaws-testing\" + _.random(1, 9999999));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Ensure the API was able to send a successful response",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"/*pm.test(\"Status description - Created LegalTag successfully.\", function () {",
											"    pm.response.to.have.status(\"Created LegalTag successfully.\");",
											"});*/",
											"",
											"",
											"//capture the legal tag name from response",
											"try {",
											"    let resBody = pm.response.json();",
											"",
											"    let createdLegaltagName = resBody.name;",
											"    //pm.environment.set(\"tagName\", createdLegaltagName);",
											"    pm.environment.set(\"LegalTagName\", createdLegaltagName);",
											"    console.log(createdLegaltagName.length);",
											"    tests[\"Leagal tag created: \" + createdLegaltagName] = createdLegaltagName.length > 1;",
											"}",
											"catch (e) {",
											"    console.log(e.message);",
											"}",
											"const response = pm.response.json();",
											"console.log(JSON.stringify(response));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "data-partition-id",
										"type": "text",
										"value": "{{data_partition_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{tagName}}\",\n    \"description\": \"Legal Tag added for Well Delivery\",\n    \"properties\": {\n        \"contractId\": \"123456\",\n        \"countryOfOrigin\": [\n            \"US\",\n            \"CA\"\n        ],\n        \"dataType\": \"Third Party Data\",\n        \"exportClassification\": \"EAR99\",\n        \"originator\": \"Schlumberger\",\n        \"personalData\": \"No Personal Data\",\n        \"securityClassification\": \"Private\",\n        \"expirationDate\": \"2025-12-25\"\n    }\n}"
								},
								"url": {
									"raw": "{{osduonaws_base_url}}/api/legal/v1/legaltags",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"legal",
										"v1",
										"legaltags"
									]
								}
							},
							"response": []
						},
						{
							"name": "2. Get Storage Instructions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"unsignedUrl exists\", function() {\r",
											"    const jsonData = pm.response.json();\r",
											"    const unsignedUrl = jsonData.storageLocation.unsignedUrl;\r",
											"    pm.expect(unsignedUrl).not.empty;\r",
											"    const unsignedUrlTokens = unsignedUrl.replace(\"s3://\", \"\").split(\"/\");\r",
											"    const datasetBaseUploadUrl = \"https://\" + unsignedUrlTokens[0] + \".s3.amazonaws.com\";\r",
											"    const datasetUploadUrl = unsignedUrlTokens.slice(1, unsignedUrlTokens.length).reduce(\r",
											"        (previousValue, currentValue) => previousValue + \"/\" + currentValue,\r",
											"        datasetBaseUploadUrl\r",
											"    );\r",
											"    pm.environment.set(\"dataset_uploadUrl\", datasetUploadUrl);\r",
											"    pm.environment.set(\"file_collection_source\", unsignedUrl);\r",
											"});\r",
											"\r",
											"pm.test(\"credentials exist\", function() {\r",
											"    const jsonData = pm.response.json();\r",
											"    const credentials = jsonData.storageLocation.credentials;\r",
											"    pm.expect(credentials).not.empty;\r",
											"    pm.environment.set(\"dataset_accessKeyId\", credentials.accessKeyId);\r",
											"    pm.environment.set(\"dataset_secretAccessKey\", credentials.secretAccessKey);\r",
											"    pm.environment.set(\"dataset_sessionToken\", credentials.sessionToken);\r",
											"});\r",
											"\r",
											"pm.test(\"region exists\", function() {\r",
											"    const jsonData = pm.response.json();\r",
											"    const region = jsonData.storageLocation.region;\r",
											"    pm.expect(region).not.empty;\r",
											"    pm.environment.set(\"dataset_region\", region);\r",
											"});\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "data-partition-id",
										"type": "text",
										"value": "{{data_partition_id}}"
									}
								],
								"url": {
									"raw": "{{osduonaws_base_url}}/api/dataset/v1/storageInstructions?kindSubType=dataset--FileCollection.Generic",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"dataset",
										"v1",
										"storageInstructions"
									],
									"query": [
										{
											"key": "kindSubType",
											"value": "dataset--FileCollection.Generic"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "3a. Upload file 1 to S3",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "awsv4",
									"awsv4": [
										{
											"key": "region",
											"value": "{{dataset_region}}",
											"type": "string"
										},
										{
											"key": "sessionToken",
											"value": "{{dataset_sessionToken}}",
											"type": "string"
										},
										{
											"key": "secretKey",
											"value": "{{dataset_secretAccessKey}}",
											"type": "string"
										},
										{
											"key": "accessKey",
											"value": "{{dataset_accessKeyId}}",
											"type": "string"
										},
										{
											"key": "service",
											"value": "s3",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "file",
									"file": {
										"src": "Wellbore-DC.csv"
									}
								},
								"url": {
									"raw": "{{dataset_uploadUrl}}file1",
									"host": [
										"{{dataset_uploadUrl}}file1"
									]
								}
							},
							"response": []
						},
						{
							"name": "3b. Upload file 2 to S3",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "awsv4",
									"awsv4": [
										{
											"key": "region",
											"value": "{{dataset_region}}",
											"type": "string"
										},
										{
											"key": "sessionToken",
											"value": "{{dataset_sessionToken}}",
											"type": "string"
										},
										{
											"key": "secretKey",
											"value": "{{dataset_secretAccessKey}}",
											"type": "string"
										},
										{
											"key": "accessKey",
											"value": "{{dataset_accessKeyId}}",
											"type": "string"
										},
										{
											"key": "service",
											"value": "s3",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "file",
									"file": {
										"src": "8518_l0815_2001_comp.las"
									}
								},
								"url": {
									"raw": "{{dataset_uploadUrl}}file2",
									"host": [
										"{{dataset_uploadUrl}}file2"
									]
								}
							},
							"response": []
						},
						{
							"name": "3c. Upload file 3 to S3",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "awsv4",
									"awsv4": [
										{
											"key": "region",
											"value": "{{dataset_region}}",
											"type": "string"
										},
										{
											"key": "sessionToken",
											"value": "{{dataset_sessionToken}}",
											"type": "string"
										},
										{
											"key": "secretKey",
											"value": "{{dataset_secretAccessKey}}",
											"type": "string"
										},
										{
											"key": "accessKey",
											"value": "{{dataset_accessKeyId}}",
											"type": "string"
										},
										{
											"key": "service",
											"value": "s3",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "file",
									"file": {
										"src": "Well_witsml.xml"
									}
								},
								"url": {
									"raw": "{{dataset_uploadUrl}}file3",
									"host": [
										"{{dataset_uploadUrl}}file3"
									]
								}
							},
							"response": []
						},
						{
							"name": "4. Register Dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function() {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Dataset registry ID exists\", function() {\r",
											"    const jsonData = pm.response.json();\r",
											"    const datasetRegistryId = jsonData.datasetRegistries[0].id;\r",
											"    pm.expect(datasetRegistryId).not.empty;\r",
											"\r",
											"    pm.environment.set(\"dataset_registry_id\", datasetRegistryId);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "data-partition-id",
										"type": "text",
										"value": "{{data_partition_id}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"datasetRegistries\": [{\n\t\t\"kind\": \"{{data_partition_id}}:wks:dataset--FileCollection.Generic:1.0.0\",\n\t\t\"type\": \"dataset-registry\",\n\t\t\"data\": {\n\t\t\t\"ResourceID\": \"srn:osdu:file:dc556e0e3a554105a80cfcb19372a62d:\",\n\t\t\t\"ResourceTypeID\": \"srn:type:file-collection/ovds:\",\n\t\t\t\"ResourceSecurityClassification\": \"srn:reference-data/ResourceSecurityClassification:RESTRICTED:\",\n\t\t\t\"ResourceSource\": \"Matt Wise Inc\",\n\t\t\t\"ResourceName\": \"test.txt\",\n            \"ResourceDescription\": \"Test upload/delivery\",\n\t\t\t\"DatasetProperties\": {\n\t\t\t\t\t\"IndexFilePath\": \"{{file_collection_source}}\",\n                    \"FileCollectionPath\": \"{{file_collection_source}}\"\n\t\t\t}\n\t\t},\n\t\t\"namespace\": \"{{data_partition_id}}:{{data_partition_id}}\",\n\t\t\"legal\": {\n\t\t\t\"legaltags\": [\n\t\t\t\t\"{{LegalTagName}}\"\n\t\t\t],\n\t\t\t\"otherRelevantDataCountries\": [\n\t\t\t\t\"US\"\n\t\t\t],\n\t\t\t\"status\": \"compliant\"\n\t\t},\n\t\t\"acl\": {\n\t\t\t\"viewers\": [\n\t\t\t\t\"data.default.viewers@{{data_partition_id}}{{domain}}\"\n\t\t\t],\n\t\t\t\"owners\": [\n\t\t\t\t\"data.default.owners@{{data_partition_id}}{{domain}}\"\n\t\t\t]\n\t\t}\n\n\t}]\n}"
								},
								"url": {
									"raw": "{{osduonaws_base_url}}/api/dataset/v1/registerDataset",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"dataset",
										"v1",
										"registerDataset"
									]
								}
							},
							"response": []
						},
						{
							"name": "5. Get Retrieval Instructions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"unsignedUrl exists\", function() {\r",
											"    const jsonData = pm.response.json();\r",
											"    const datasetsData = jsonData.datasets[0];\r",
											"    const unsignedUrl = datasetsData.retrievalProperties.unsignedUrl;\r",
											"    pm.expect(unsignedUrl).not.empty;\r",
											"    const unsignedUrlTokens = unsignedUrl.replace(\"s3://\", \"\").split(\"/\");\r",
											"    const datasetDownloadUrl = \"https://\" + unsignedUrlTokens[0] + \".s3.amazonaws.com\";\r",
											"    const datasetDownload = unsignedUrlTokens.slice(1, unsignedUrlTokens.length).reduce(\r",
											"        (previousValue, currentValue) => previousValue + \"/\" + currentValue,\r",
											"        datasetDownloadUrl\r",
											"    );\r",
											"    pm.environment.set(\"dataset_downloadUrl\", datasetDownload);\r",
											"    pm.environment.set(\"file_collection_source\", unsignedUrl);\r",
											"});\r",
											"\r",
											"pm.test(\"credentials exist\", function() {\r",
											"    const jsonData = pm.response.json();\r",
											"    const datasetsData = jsonData.datasets[0];\r",
											"    const credentials = datasetsData.retrievalProperties.credentials;\r",
											"    pm.expect(credentials).not.empty;\r",
											"    pm.environment.set(\"dataset_accessKeyId\", credentials.accessKeyId);\r",
											"    pm.environment.set(\"dataset_secretAccessKey\", credentials.secretAccessKey);\r",
											"    pm.environment.set(\"dataset_sessionToken\", credentials.sessionToken);\r",
											"});\r",
											"\r",
											"pm.test(\"region exists\", function() {\r",
											"    const jsonData = pm.response.json();\r",
											"    const datasetsData = jsonData.datasets[0];\r",
											"    const region = datasetsData.retrievalProperties.region;\r",
											"    pm.expect(region).not.empty;\r",
											"    pm.environment.set(\"dataset_region\", region);\r",
											"});\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "data-partition-id",
										"type": "text",
										"value": "{{data_partition_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"datasetRegistryIds\": [\n        \"{{dataset_registry_id}}\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{osduonaws_base_url}}/api/dataset/v1/retrievalInstructions",
									"host": [
										"{{osduonaws_base_url}}"
									],
									"path": [
										"api",
										"dataset",
										"v1",
										"retrievalInstructions"
									]
								}
							},
							"response": []
						},
						{
							"name": "6a. Download file 1 from S3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status is OK\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "awsv4",
									"awsv4": [
										{
											"key": "region",
											"value": "{{dataset_region}}",
											"type": "string"
										},
										{
											"key": "sessionToken",
											"value": "{{dataset_sessionToken}}",
											"type": "string"
										},
										{
											"key": "secretKey",
											"value": "{{dataset_secretAccessKey}}",
											"type": "string"
										},
										{
											"key": "accessKey",
											"value": "{{dataset_accessKeyId}}",
											"type": "string"
										},
										{
											"key": "service",
											"value": "s3",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{dataset_downloadUrl}}file1",
									"host": [
										"{{dataset_downloadUrl}}file1"
									]
								}
							},
							"response": []
						},
						{
							"name": "6b. Download file 2 from S3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status is OK\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "awsv4",
									"awsv4": [
										{
											"key": "region",
											"value": "{{dataset_region}}",
											"type": "string"
										},
										{
											"key": "sessionToken",
											"value": "{{dataset_sessionToken}}",
											"type": "string"
										},
										{
											"key": "secretKey",
											"value": "{{dataset_secretAccessKey}}",
											"type": "string"
										},
										{
											"key": "accessKey",
											"value": "{{dataset_accessKeyId}}",
											"type": "string"
										},
										{
											"key": "service",
											"value": "s3",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{dataset_downloadUrl}}file2",
									"host": [
										"{{dataset_downloadUrl}}file2"
									]
								}
							},
							"response": []
						},
						{
							"name": "6c. Download file 3 from S3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status is OK\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "awsv4",
									"awsv4": [
										{
											"key": "region",
											"value": "{{dataset_region}}",
											"type": "string"
										},
										{
											"key": "sessionToken",
											"value": "{{dataset_sessionToken}}",
											"type": "string"
										},
										{
											"key": "secretKey",
											"value": "{{dataset_secretAccessKey}}",
											"type": "string"
										},
										{
											"key": "accessKey",
											"value": "{{dataset_accessKeyId}}",
											"type": "string"
										},
										{
											"key": "service",
											"value": "s3",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{dataset_downloadUrl}}file3",
									"host": [
										"{{dataset_downloadUrl}}file3"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Aggregate Master",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "data-partition-id",
						"value": "{{data_partition_id}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJraWQiOiJ1ZGpxWWVIeDNFSU9YaloxUnMzU04yWm1WWDAxUHlGZUd3N2UzR05lMWlvPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI0N2ViNzExMS0yOGIzLTQ3NjEtOTkyMC05YjBkYjlhYjYwN2IiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuYXAtbm9ydGhlYXN0LTEuYW1hem9uYXdzLmNvbVwvYXAtbm9ydGhlYXN0LTFfMTFNWW1rSWlaIiwidmVyc2lvbiI6MiwiY2xpZW50X2lkIjoiNHZkMHR2ODZlZTNrOGk2YXBqbnEyaXRhMTkiLCJvcmlnaW5fanRpIjoiMmZjNWFlNzgtOTM4NC00ZTU3LWJmYzEtNjdiNTE5YTkxMGFlIiwidG9rZW5fdXNlIjoiYWNjZXNzIiwic2NvcGUiOiJvcGVuaWQgZW1haWwiLCJhdXRoX3RpbWUiOjE2NjU0MDM2ODYsImV4cCI6MTY2NTQwNjc3NSwiaWF0IjoxNjY1NDA0OTc1LCJqdGkiOiIxZmQ1MDBkMy03ODZhLTQyYzctYmM0ZC1jNzA1YTE4YWQzOTYiLCJ1c2VybmFtZSI6ImFkbWluQHRlc3RpbmcuY29tIn0.OOouMdyTOiV524pkK-GygDUSLrrqwqdkwB4RfoD3CbKAQImtihRfu_mwXAbdHiy7E_nJZRL7cpz53RmCJYoiASGrnK8cYcxf5LgyVE5u-25paG1Oa1u7_x8ZjpS8bOQMqthrMg5TBm_-1kdygf4t5tCf1gx9c1yL3Y7KTIdk_VhNFNirG411JrtJn-CbfGnjD3J_evFJplegQKoch2AzjhOcLuXhfaFPTstJONNnSEjFYy25DgCZJAyDPELUXYhACyaQ8XWaA5SVchGnvi6trLU6fX8FqayfDzfYfTWjRZnMbdvytHUW9RmO7yEg4Agb9bKiHJ_889hS8NNcinRqSw",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"kind\": \"{{data_partition_id}}:wks:master-data--*:1.*.0\",\r\n   \"query\": \"*\",\r\n   \"aggregateBy\": \"kind\",\r\n   \"limit\": 1,\r\n   \"returnedFields\": [\"id\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{osduonaws_base_url}}/api/search/v2/query",
					"host": [
						"{{osduonaws_base_url}}"
					],
					"path": [
						"api",
						"search",
						"v2",
						"query"
					]
				}
			},
			"response": []
		},
		{
			"name": "Aggregate-Reference",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "data-partition-id",
						"value": "{{data_partition_id}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJraWQiOiJ1ZGpxWWVIeDNFSU9YaloxUnMzU04yWm1WWDAxUHlGZUd3N2UzR05lMWlvPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI0N2ViNzExMS0yOGIzLTQ3NjEtOTkyMC05YjBkYjlhYjYwN2IiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuYXAtbm9ydGhlYXN0LTEuYW1hem9uYXdzLmNvbVwvYXAtbm9ydGhlYXN0LTFfMTFNWW1rSWlaIiwidmVyc2lvbiI6MiwiY2xpZW50X2lkIjoiNHZkMHR2ODZlZTNrOGk2YXBqbnEyaXRhMTkiLCJvcmlnaW5fanRpIjoiMmZjNWFlNzgtOTM4NC00ZTU3LWJmYzEtNjdiNTE5YTkxMGFlIiwidG9rZW5fdXNlIjoiYWNjZXNzIiwic2NvcGUiOiJvcGVuaWQgZW1haWwiLCJhdXRoX3RpbWUiOjE2NjU0MDM2ODYsImV4cCI6MTY2NTQwNjc3NSwiaWF0IjoxNjY1NDA0OTc1LCJqdGkiOiIxZmQ1MDBkMy03ODZhLTQyYzctYmM0ZC1jNzA1YTE4YWQzOTYiLCJ1c2VybmFtZSI6ImFkbWluQHRlc3RpbmcuY29tIn0.OOouMdyTOiV524pkK-GygDUSLrrqwqdkwB4RfoD3CbKAQImtihRfu_mwXAbdHiy7E_nJZRL7cpz53RmCJYoiASGrnK8cYcxf5LgyVE5u-25paG1Oa1u7_x8ZjpS8bOQMqthrMg5TBm_-1kdygf4t5tCf1gx9c1yL3Y7KTIdk_VhNFNirG411JrtJn-CbfGnjD3J_evFJplegQKoch2AzjhOcLuXhfaFPTstJONNnSEjFYy25DgCZJAyDPELUXYhACyaQ8XWaA5SVchGnvi6trLU6fX8FqayfDzfYfTWjRZnMbdvytHUW9RmO7yEg4Agb9bKiHJ_889hS8NNcinRqSw",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"kind\": \"{{data_partition_id}}:wks:reference-data--*:1.*.0\",\r\n   \"query\": \"*\",\r\n   \"aggregateBy\": \"kind\",\r\n   \"limit\": 1,\r\n   \"returnedFields\": [\"id\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{osduonaws_base_url}}/api/search/v2/query",
					"host": [
						"{{osduonaws_base_url}}"
					],
					"path": [
						"api",
						"search",
						"v2",
						"query"
					]
				}
			},
			"response": []
		},
		{
			"name": "Aggregate-WPC",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "data-partition-id",
						"value": "{{data_partition_id}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"kind\": \"{{data_partition_id}}:wks:work-product-component--*:1.*.0\",\r\n   \"query\": \"*\",\r\n   \"aggregateBy\": \"kind\",\r\n   \"limit\": 1,\r\n   \"returnedFields\": [\"id\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{osduonaws_base_url}}/api/search/v2/query",
					"host": [
						"{{osduonaws_base_url}}"
					],
					"path": [
						"api",
						"search",
						"v2",
						"query"
					]
				}
			},
			"response": []
		}
	]
}