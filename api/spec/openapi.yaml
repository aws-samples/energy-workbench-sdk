openapi: 3.0.0
info:
  title: AWS_OSDU_CoreServices_Collection
  version: 1.0.0
servers:
  - url: https://cognito-idp.{{aws_region}}.amazonaws.com
  - url: http://{{auth_token_url}}
  - url: http://{{osduonaws_base_url}}
  - url: http://{{signedurl}}
  - url: http://{{dataset_uploadurl}}file1
  - url: http://{{dataset_uploadurl}}file2
  - url: http://{{dataset_uploadurl}}file3
  - url: http://{{dataset_downloadurl}}file1
  - url: http://{{dataset_downloadurl}}file2
  - url: http://{{dataset_downloadurl}}file3
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    noauthAuth:
      type: http
      scheme: noauth
    awsv4Auth:
      type: http
      scheme: awsv4
tags:
  - name: Auth
  - name: Core Services
  - name: Core Services > Entitlements
  - name: Core Services > Legal
  - name: Core Services > Storage
  - name: Core Services > Search
  - name: Core Services > Schema
  - name: Core Services > Unit
  - name: Core Services > Unit > v3
  - name: Core Services > Unit > v3 > catalog
  - name: Core Services > Unit > v3 > conversion
  - name: Core Services > Unit > v3 > conversion > abcd
  - name: Core Services > Unit > v3 > conversion > scale
  - name: Core Services > Unit > v3 > measurement
  - name: Core Services > Unit > v3 > unit
  - name: Core Services > Unit > v3 > unit > measurement
  - name: Core Services > Unit > v3 > unit > measurement > preferred
  - name: Core Services > Unit > v3 > unit > unitsystem
  - name: Core Services > Unit > v3 > unitsystem
  - name: Core Services > Register
  - name: Core Services > Register > Ddms
  - name: Core Services > Register > Subscription
  - name: Core Services > Register > Action
  - name: Core Services > Partition
  - name: Core Services > CRS Conversion
  - name: Core Services > CRS Conversion > v3
  - name: Core Services > CRS Conversion > v3 > info
  - name: Core Services > CRS Conversion > v3 > convertTrajectory
  - name: Core Services > CRS Conversion > v3 > convertGeoJson
  - name: Core Services > CRS Conversion > v3 > convertBinGrid
  - name: Core Services > CRS Conversion > v3 > convert
  - name: Core Services > CRS Catalog
  - name: Core Services > CRS Catalog > V3
  - name: Core Services > Notification
  - name: Ingestion
  - name: Ingestion > SeismicDMS
  - name: Ingestion > SeismicDMS > General
  - name: Ingestion > SeismicDMS > Tenant
  - name: Ingestion > SeismicDMS > Subproject
  - name: Dataset
  - name: Dataset > dataset- File.generic
  - name: Dataset > dataset-FileCollection.generic
paths:
  /{cognito_userpool_id}/.well-known/openid-configuration:
    get:
      tags:
        - Auth
      summary: Discovery URL
      security:
        - bearerAuth: []
      parameters:
        - name: cognito_userpool_id
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /:
    post:
      tags:
        - Auth
      summary: Update Tokens
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  example: refresh_token
                client_id:
                  type: string
                  example: "{{client_id}}"
                client_secret:
                  type: string
                  example: "{{client_secret}}"
                refresh_token:
                  type: string
                  example: "{{refresh_token}}"
                scope:
                  type: string
                  example: openid email
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Dataset > dataset-FileCollection.generic
      summary: 3c. Upload file 3 to S3
      requestBody:
        content:
          text/plain: {}
      security:
        - awsv4Auth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Dataset > dataset-FileCollection.generic
      summary: 6c. Download file 3 from S3
      security:
        - awsv4Auth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/entitlements/v2/groups:
    post:
      tags:
        - Core Services > Entitlements
      summary: Create Group
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"data.testing.user112\",\n   
                \"description\": \"Meant for testing\"\n}\n"
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Core Services > Entitlements
      summary: Get Groups
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/entitlements/v2/groups/{groupName}/members:
    post:
      tags:
        - Core Services > Entitlements
      summary: Add member to a Group
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "{\r\n            \"email\":
                \"user112@testing.com\",\r\n            \"role\":
                \"OWNER\"\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: groupName
          in: path
          schema:
            type: string
          required: true
          example: data.testing.user112@osdu.example.com
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Core Services > Entitlements
      summary: Get Members for a Group
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
        - name: limit
          in: query
          schema:
            type: integer
          example: "100"
        - name: groupName
          in: path
          schema:
            type: string
          required: true
          example: data.testing.user112@osdu.example.com
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/entitlements/v2/members/{memberEmail}/groups:
    get:
      tags:
        - Core Services > Entitlements
      summary: Get Groups for Member
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
        - name: type
          in: query
          schema:
            type: string
          example: NONE
        - name: memberEmail
          in: path
          schema:
            type: string
          required: true
          example: user112@testing.com
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/entitlements/v2/groups/{groupName}/members/{deleteGroupName}:
    delete:
      tags:
        - Core Services > Entitlements
      summary: Delete member from a Group
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
        - name: groupName
          in: path
          schema:
            type: string
          required: true
          example: data.testing.user112@osdu.example.com
        - name: deleteGroupName
          in: path
          schema:
            type: string
          required: true
          example: user112@testing.com
      responses:
        "204":
          description: Successful response
          content:
            application/json: {}
  /api/legal/v1/legaltags:
    post:
      tags:
        - Dataset > dataset-FileCollection.generic
      summary: 1. Create new Legal Tag
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"{{tagName}}\",\n    \"description\": \"Legal
                Tag added for Well Delivery\",\n    \"properties\": {\n       
                \"contractId\": \"123456\",\n        \"countryOfOrigin\":
                [\n            \"US\",\n            \"CA\"\n        ],\n       
                \"dataType\": \"Third Party Data\",\n       
                \"exportClassification\": \"EAR99\",\n        \"originator\":
                \"Schlumberger\",\n        \"personalData\": \"No Personal
                Data\",\n        \"securityClassification\":
                \"Private\",\n        \"expirationDate\": \"2025-12-25\"\n   
                }\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
      responses:
        "201":
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Core Services > Legal
      summary: List LegalTags
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Core Services > Legal
      summary: Update LegalTag
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: osdu-public-usa-dataset-osduonaws-testing1
                contractId: A1235
                expirationDate: 2222222222222
                description: A default legal tag
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/legal/v1/legaltags/osdu-public-usa-dataset-osduonaws-testing1:
    get:
      tags:
        - Core Services > Legal
      summary: Get LegalTag
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Core Services > Legal
      summary: Delete LegalTag
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
      responses:
        "204":
          description: Successful response
          content:
            application/json: {}
  /api/legal/v1/legaltags:batchRetrieve:
    post:
      tags:
        - Core Services > Legal
      summary: Get LegalTags
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                names:
                  - osdu-public-usa-dataset-osduonaws-testing1
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/legal/v1/legaltags:validate:
    post:
      tags:
        - Core Services > Legal
      summary: Validate LegalTags
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                names:
                  - public-usa-dataset-osduonaws-testing1
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/legal/v1/legaltags:properties:
    get:
      tags:
        - Core Services > Legal
      summary: Get LegalTag Properties
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/storage/v2/records:
    put:
      tags:
        - Core Services > Storage
      summary: Store Records
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "[\r\n    {\r\n        \"data\": {\r\n           
                \"DefaultVerticalMeasurementID\": \"Rotary
                Table\",\r\n            \"FacilityEvents\": [\r\n               
                {\r\n                    \"EffectiveDateTime\":
                \"2002-05-12T00:00:00\",\r\n                   
                \"FacilityEventTypeID\":
                \"osdu:reference-data--FacilityEventType:SPUD:\"\r\n               
                },\r\n                {\r\n                   
                \"EffectiveDateTime\":
                \"2002-06-07T00:00:00\",\r\n                   
                \"FacilityEventTypeID\":
                \"osdu:reference-data--FacilityEventType:DRILLING%20FINISH:\"\r\n               
                }\r\n            ],\r\n            \"FacilityID\":
                \"A14-02-test\",\r\n            \"FacilityOperators\":
                [\r\n                {\r\n                   
                \"FacilityOperatorOrganisationID\":
                \"osdu:master-data--Organisation:NAM:\"\r\n               
                }\r\n            ],\r\n            \"FacilityStates\":
                [\r\n                {\r\n                   
                \"FacilityStateTypeID\":
                \"osdu:reference-data--FacilityStateType:Abandoned:\"\r\n               
                }\r\n            ],\r\n            \"FacilityTypeID\":
                \"osdu:reference-data--FacilityType:A14-02:\",\r\n           
                \"GeoContexts\": [\r\n                {\r\n                   
                \"GeoPoliticalEntityID\":
                \"osdu:master-data--GeoPoliticalEntity:Netherlands:\",\r\n                   
                \"GeoTypeID\":
                \"osdu:reference-data--GeoPoliticalEntityType:Country:\"\r\n               
                },\r\n                {\r\n                   
                \"GeoPoliticalEntityID\":
                \"osdu:master-data--GeoPoliticalEntity:A14:\",\r\n                   
                \"GeoTypeID\":
                \"osdu:reference-data--GeoPoliticalEntityType:BlockID:\"\r\n               
                }\r\n            ],\r\n            \"NameAliases\":
                [\r\n                {\r\n                    \"AliasName\":
                \"A14-02-test\",\r\n                    \"AliasNameTypeID\":
                \"osdu:reference-data--AliasNameType:WELL_NAME:\"\r\n               
                },\r\n                {\r\n                    \"AliasName\":
                \"8577-test\",\r\n                    \"AliasNameTypeID\":
                \"osdu:reference-data--AliasNameType:UWI:\"\r\n               
                }\r\n            ],\r\n            \"OperatingEnvironmentID\":
                \"osdu:reference-data--OperatingEnvironment:OFF:\",\r\n           
                \"Source\": \"TNO\",\r\n            \"SpatialLocation\":
                {\r\n                \"Wgs84Coordinates\":
                {\r\n                    \"features\":
                [\r\n                        {\r\n                           
                \"geometry\": {\r\n                               
                \"coordinates\": [\r\n                                   
                3.39488769,\r\n                                   
                55.32443529\r\n                               
                ],\r\n                                \"type\":
                \"Point\"\r\n                           
                },\r\n                            \"properties\":
                {},\r\n                            \"type\":
                \"Feature\"\r\n                        }\r\n                   
                ],\r\n                    \"type\":
                \"FeatureCollection\"\r\n                }\r\n           
                },\r\n            \"VerticalMeasurements\": [\r\n               
                {\r\n                    \"VerticalCRSID\":
                \"osdu:reference-data--CoordinateReferenceSystem:MSL:\",\r\n                   
                \"VerticalMeasurement\": 39.2,\r\n                   
                \"VerticalMeasurementID\": \"Rotary
                Table\",\r\n                    \"VerticalMeasurementPathID\":
                \"osdu:reference-data--VerticalMeasurementPath:Elevation:\",\r\n                   
                \"VerticalMeasurementUnitOfMeasureID\":
                \"osdu:reference-data--UnitOfMeasure:M:\"\r\n               
                }\r\n            ]\r\n        },\r\n        \"meta\":
                [],\r\n        \"kind\":
                \"osdu:wks:master-data--Well:1.0.0\",\r\n        \"acl\":
                {\r\n            \"viewers\": [\r\n               
                \"data.default.viewers@osdu.example.com\"\r\n           
                ],\r\n            \"owners\": [\r\n               
                \"data.default.owners@osdu.example.com\"\r\n           
                ]\r\n        },\r\n        \"legal\": {\r\n           
                \"legaltags\": [\r\n               
                \"osdu-public-usa-dataset\"\r\n            ],\r\n           
                \"otherRelevantDataCountries\": [\r\n               
                \"US\"\r\n            ],\r\n            \"status\":
                \"compliant\"\r\n        }\r\n    }\r\n]"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
      responses:
        "201":
          description: Successful response
          content:
            application/json: {}
  /api/storage/v2/query/records:
    post:
      tags:
        - Core Services > Storage
      summary: Query Records
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                records:
                  - "{{recordIds}}"
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/storage/v2/records/{recordIds}:
    get:
      tags:
        - Core Services > Storage
      summary: Get Specific Record
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
        - name: recordIds
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Core Services > Storage
      summary: Delete Record
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
        - name: recordIds
          in: path
          schema:
            type: string
          required: true
      responses:
        "204":
          description: Successful response
          content:
            application/json: {}
  /api/storage/v2/records/versions/{recordIds}:
    get:
      tags:
        - Core Services > Storage
      summary: Get Record Versions
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
        - name: recordIds
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/storage/v2/query/records:batch:
    post:
      tags:
        - Core Services > Storage
      summary: Query Records in Batch
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: '"{\"records\": [\n\t\"{{recordIds}}\"\n]}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/search/v2/query:
    post:
      tags:
        - default
      summary: Aggregate-WPC
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                kind: "{{data_partition_id}}:wks:work-product-component--*:1.*.0"
                query: "*"
                aggregateBy: kind
                limit: 1
                returnedFields:
                  - id
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/search/v2/query_with_cursor:
    post:
      tags:
        - Core Services > Search
      summary: Query With Cursor
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                kind: "*:*:*:*"
                cursor: ""
                aggregateBy: kind
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/schema-service/v1/schema:
    get:
      tags:
        - Core Services > Schema
      summary: Searches schemaInfo repository
      description: >-
        Searches for information of available schema (SchemInfo) in schema
        repository. Supports options to filter out the search contents. Required
        roles 'users.datalake.viewers' or 'users.datalake.editors' or
        'users.datalake.admins' groups to get the schema.
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: >-
            (Required) Specifies the data partition to use. This should be
            either the partition name or crm account ID associated with the
            partition.
          example: "{{data_partition_id}}"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                schemaInfos:
                  - schemaIdentity:
                      authority: osdu
                      entityType: wellbore
                      source: wks
                      schemaVersionMajor: 1
                      schemaVersionMinor: 1
                      schemaVersionPatch: 0
                      id: osdu:wks:wellbore:1.0.0
                    status: <string>
                    createdBy: user@osdu.com
                    dateCreated: <dateTime>
                    scope: INTERNAL
                    supersededBy:
                      authority: osdu
                      entityType: wellbore
                      source: wks
                      schemaVersionMajor: 1
                      schemaVersionMinor: 1
                      schemaVersionPatch: 0
                      id: osdu:wks:wellbore:1.0.0
                  - schemaIdentity:
                      authority: osdu
                      entityType: wellbore
                      source: wks
                      schemaVersionMajor: 1
                      schemaVersionMinor: 1
                      schemaVersionPatch: 0
                      id: osdu:wks:wellbore:1.0.0
                    status: <string>
                    createdBy: user@osdu.com
                    dateCreated: <dateTime>
                    scope: INTERNAL
                    supersededBy:
                      authority: osdu
                      entityType: wellbore
                      source: wks
                      schemaVersionMajor: 1
                      schemaVersionMinor: 1
                      schemaVersionPatch: 0
                      id: osdu:wks:wellbore:1.0.0
                offset: 58242958
                count: 56268960
                totalCount: 73894130
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error:
                  errors:
                    - message: ea adipisicing culpa
                      reason: consectetur Ut irure
                      domain: labore
                    - message: officia
                      reason: in ut irure voluptate cupidatat
                      domain: ullamco
                  code: 86872712
                  message: id ex ipsum do
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error:
                  errors:
                    - message: ea adipisicing culpa
                      reason: consectetur Ut irure
                      domain: labore
                    - message: officia
                      reason: in ut irure voluptate cupidatat
                      domain: ullamco
                  code: 86872712
                  message: id ex ipsum do
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error:
                  errors:
                    - message: ea adipisicing culpa
                      reason: consectetur Ut irure
                      domain: labore
                    - message: officia
                      reason: in ut irure voluptate cupidatat
                      domain: ullamco
                  code: 86872712
                  message: id ex ipsum do
    post:
      tags:
        - Core Services > Schema
      summary: Adds a schema to the schema repository.
      description: >-
        Adds a schema to the schema repository. The schemaIdentity must be
        unique. The `authority`, `source` and `entityType` will be registered if
        not present. If lower minor versions are registered the service
        validates the new schema against breaking changes; if breaking changes
        are discovered the request fails. **Note:** The schema must not
        reference other schemas with status `DEVELOPMENT`. Scope to a schema
        will be set by system based on partition id (`SHARED` for common tenant
        and `INTERNAL` for private tenant). Required roles
        'users.datalake.editors' or 'users.datalake.admins' groups to create
        schema.
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "{\r\n    \"schemaInfo\": {\r\n        \"schemaIdentity\":
                {\r\n            \"authority\":
                \"{{data_partition_id}}\",\r\n            \"source\":
                \"wks\",\r\n            \"entityType\":
                \"sample_{{$guid}}\",\r\n            \"schemaVersionMajor\":
                1,\r\n            \"schemaVersionMinor\": 1,\r\n           
                \"schemaVersionPatch\": 0,\r\n            \"id\":
                \"SourceTest:wks:testEntity1:1.1.4.1\"\r\n        },\r\n       
                \"status\": \"DEVELOPMENT\"\r\n    },\r\n    \"schema\":
                {\r\n        \"$schema\":
                \"http://json-schema.org/draft-07/schema#\",\r\n       
                \"x-slb-lifecycle-state\": \"published\",\r\n       
                \"description\": \"Theentitywell.\",\r\n        \"title\":
                \"Well\",\r\n        \"type\": \"object\",\r\n       
                \"definitions\": {},\r\n        \"properties\": {\r\n           
                \"id\": {\r\n                \"description\": \"Previously
                called ResourceID or SRN which identifies this OSDU resource
                object without version.\",\r\n                \"title\":
                \"Entity ID\",\r\n                \"type\":
                \"string\",\r\n                \"pattern\":
                \"^[\\\\w\\\\-\\\\.]+:master-data\\\\-\\\\-Well:[\\\\w\\\\-\\\\.\\\\:\\\\%]+$\",\r\n               
                \"example\":
                \"namespace:master-data--Well:6c60ceb0-3521-57b7-9bd8-e1d7c9f66230\"\r\n           
                }\r\n        }\r\n    }\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: >-
            (Required) Specifies the data partition to use. This should be
            either the partition name or crm account ID associated with the
            partition.
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "201":
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                schemaIdentity:
                  authority: osdu
                  entityType: wellbore
                  source: wks
                  schemaVersionMajor: 1
                  schemaVersionMinor: 1
                  schemaVersionPatch: 0
                  id: osdu:wks:wellbore:1.0.0
                status: <string>
                createdBy: user@osdu.com
                dateCreated: <dateTime>
                scope: INTERNAL
                supersededBy:
                  authority: osdu
                  entityType: wellbore
                  source: wks
                  schemaVersionMajor: 1
                  schemaVersionMinor: 1
                  schemaVersionPatch: 0
                  id: osdu:wks:wellbore:1.0.0
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error:
                  errors:
                    - message: ea adipisicing culpa
                      reason: consectetur Ut irure
                      domain: labore
                    - message: officia
                      reason: in ut irure voluptate cupidatat
                      domain: ullamco
                  code: 86872712
                  message: id ex ipsum do
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error:
                  errors:
                    - message: ea adipisicing culpa
                      reason: consectetur Ut irure
                      domain: labore
                    - message: officia
                      reason: in ut irure voluptate cupidatat
                      domain: ullamco
                  code: 86872712
                  message: id ex ipsum do
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error:
                  errors:
                    - message: ea adipisicing culpa
                      reason: consectetur Ut irure
                      domain: labore
                    - message: officia
                      reason: in ut irure voluptate cupidatat
                      domain: ullamco
                  code: 86872712
                  message: id ex ipsum do
    put:
      tags:
        - Core Services > Schema
      summary: Creates/Updates a schema in development status
      description: >-
        Creates a new schema or updates an already existing schema with status
        `DEVELOPMENT` in the schema repository. If a user tries to create/update
        a schema with status other then `DEVELOPMENT`, API will throw an
        exception. Any schema instance with the same schemaIdentity is replaced
        (in contrast to the immutability of `PUBLISHED` or `OBSOLETE` schemas).
        A schema state can also be changed from `DEVELOPMENT` to `PUBLISHED` or
        `OBSOLETE` while updating schema content or by providing the same schema
        content. **Note:** The schema may refer to other schema definitions in
        `DEVELOPMENT` state. If those schemas are updated themselves, it is the
        developer's responsibility to PUT the dependent schemas again to update
        the schemas. Scope for a schema can't be updated, its a system defined
        value. Required roles  'users.datalake.editors' or
        'users.datalake.admins' groups to update schema.
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "{\n    \"schemaInfo\": {\n        \"schemaIdentity\":
                {\n            \"authority\":
                \"{{data_partition_id}}\",\n            \"source\":
                \"wks\",\n            \"entityType\":
                \"sample_{{$guid}}\",\n            \"schemaVersionMajor\":
                1,\n            \"schemaVersionMinor\": 1,\n           
                \"schemaVersionPatch\": 0,\n            \"id\":
                \"SourceTest:wks:testEntity1:1.1.3\"\n        },\n       
                \"status\": \"DEVELOPMENT\"\n    },\n    \"schema\": {\n       
                \"$schema\":
                \"http://json-schema.org/draft-07/schema#\",\n       
                \"x-slb-lifecycle-state\": \"published\",\n       
                \"description\": \"Theentitywell.\",\n        \"title\":
                \"Well\",\n        \"type\": \"object\",\n       
                \"definitions\": {},\n        \"properties\": {\n           
                \"id\": {\n                \"description\": \"Previously called
                ResourceID or SRN which identifies this OSDU resource object
                without version.\",\n                \"title\": \"Entity
                ID\",\n                \"type\": \"string\",\n               
                \"pattern\":
                \"^[\\\\w\\\\-\\\\.]+:master-data\\\\-\\\\-Well:[\\\\w\\\\-\\\\.\\\\:\\\\%]+$\",\n               
                \"example\":
                \"namespace:master-data--Well:6c60ceb0-3521-57b7-9bd8-e1d7c9f66230\"\n           
                }\n        }\n    }\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: >-
            (Required) Specifies the data partition to use. This should be
            either the partition name or crm account ID associated with the
            partition.
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                schemaIdentity:
                  authority: osdu
                  entityType: wellbore
                  source: wks
                  schemaVersionMajor: 1
                  schemaVersionMinor: 1
                  schemaVersionPatch: 0
                  id: osdu:wks:wellbore:1.0.0
                status: <string>
                createdBy: user@osdu.com
                dateCreated: <dateTime>
                scope: INTERNAL
                supersededBy:
                  authority: osdu
                  entityType: wellbore
                  source: wks
                  schemaVersionMajor: 1
                  schemaVersionMinor: 1
                  schemaVersionPatch: 0
                  id: osdu:wks:wellbore:1.0.0
        "201":
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                schemaIdentity:
                  authority: osdu
                  entityType: wellbore
                  source: wks
                  schemaVersionMajor: 1
                  schemaVersionMinor: 1
                  schemaVersionPatch: 0
                  id: osdu:wks:wellbore:1.0.0
                status: <string>
                createdBy: user@osdu.com
                dateCreated: <dateTime>
                scope: INTERNAL
                supersededBy:
                  authority: osdu
                  entityType: wellbore
                  source: wks
                  schemaVersionMajor: 1
                  schemaVersionMinor: 1
                  schemaVersionPatch: 0
                  id: osdu:wks:wellbore:1.0.0
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error:
                  errors:
                    - message: ea adipisicing culpa
                      reason: consectetur Ut irure
                      domain: labore
                    - message: officia
                      reason: in ut irure voluptate cupidatat
                      domain: ullamco
                  code: 86872712
                  message: id ex ipsum do
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error:
                  errors:
                    - message: ea adipisicing culpa
                      reason: consectetur Ut irure
                      domain: labore
                    - message: officia
                      reason: in ut irure voluptate cupidatat
                      domain: ullamco
                  code: 86872712
                  message: id ex ipsum do
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error:
                  errors:
                    - message: ea adipisicing culpa
                      reason: consectetur Ut irure
                      domain: labore
                    - message: officia
                      reason: in ut irure voluptate cupidatat
                      domain: ullamco
                  code: 86872712
                  message: id ex ipsum do
  /api/schema-service/v1/schema/{id}:
    get:
      tags:
        - Core Services > Schema
      summary: Gets schema from the schema repository.
      description: >-
        Retrieve a schema using its system defined id. Required roles
        'users.datalake.viewers' or 'users.datalake.editors' or
        'users.datalake.admins' groups to get the schema.
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: >-
            (Required) Specifies the data partition to use. This should be
            either the partition name or crm account ID associated with the
            partition.
          example: "{{data_partition_id}}"
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) the system id of the schema
          example: osdu:wks:work-product-component--WellLog:1.0.0
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                $schema: http://json-schema.org/draft-07/schema#
                description: The entity shapefile.
                title: ShapeFile
                type: object
                definitions: {}
                properties: {}
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error:
                  errors:
                    - message: ea adipisicing culpa
                      reason: consectetur Ut irure
                      domain: labore
                    - message: officia
                      reason: in ut irure voluptate cupidatat
                      domain: ullamco
                  code: 86872712
                  message: id ex ipsum do
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error:
                  errors:
                    - message: ea adipisicing culpa
                      reason: consectetur Ut irure
                      domain: labore
                    - message: officia
                      reason: in ut irure voluptate cupidatat
                      domain: ullamco
                  code: 86872712
                  message: id ex ipsum do
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error:
                  errors:
                    - message: ea adipisicing culpa
                      reason: consectetur Ut irure
                      domain: labore
                    - message: officia
                      reason: in ut irure voluptate cupidatat
                      domain: ullamco
                  code: 86872712
                  message: id ex ipsum do
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error:
                  errors:
                    - message: ea adipisicing culpa
                      reason: consectetur Ut irure
                      domain: labore
                    - message: officia
                      reason: in ut irure voluptate cupidatat
                      domain: ullamco
                  code: 86872712
                  message: id ex ipsum do
  /api/unit/v3/catalog:
    get:
      tags:
        - Core Services > Unit > v3 > catalog
      summary: getCatalog
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/unit/v3/catalog/lastmodified:
    get:
      tags:
        - Core Services > Unit > v3 > catalog
      summary: getLastModified
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/unit/v3/catalog/mapstates:
    get:
      tags:
        - Core Services > Unit > v3 > catalog
      summary: getMapStates
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: offset
          in: query
          schema:
            type: integer
          description: offset
          example: "0"
        - name: limit
          in: query
          schema:
            type: integer
          description: limit
          example: "100"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/unit/v3/catalog/search:
    post:
      tags:
        - Core Services > Unit > v3 > catalog
      summary: postSearch
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: '"{\n    \"query\": \"<string>\"\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: offset
          in: query
          schema:
            type: integer
          description: offset
          example: "0"
        - name: limit
          in: query
          schema:
            type: integer
          description: limit
          example: "100"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "201":
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/unit/v3/conversion/abcd:
    get:
      tags:
        - Core Services > Unit > v3 > conversion > abcd
      summary: getConversionABCDBySymbols
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: namespaces
          in: query
          schema:
            type: string
          description: (Required) namespaces
          example: Energistics_UoM
        - name: fromSymbol
          in: query
          schema:
            type: string
          description: (Required) fromSymbol
          example: ppk
        - name: toSymbol
          in: query
          schema:
            type: string
          description: (Required) toSymbol
          example: ppm
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
    post:
      tags:
        - Core Services > Unit > v3 > conversion > abcd
      summary: postConversionABCD
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "{\n    \"fromUnit\": {\n        \"abcd\": {\n            \"a\":
                0.0,\n            \"b\": 1000.0000000000001,\n            \"c\":
                1.0,\n            \"d\": 0.0\n        },\n       
                \"baseMeasurement\": {\n            \"ancestry\":
                \"1\",\n            \"type\": \"UM\"\n        },\n       
                \"scaleOffset\": {\n            \"offset\":
                \"0.0\",\n            \"scale\": \"0.0\"\n        },\n       
                \"symbol\": \"ppm\",\n        \"type\": \"UM\"\n    },\n   
                \"fromUnitPersistableReference\":
                \"{\\\"abcd\\\":{\\\"a\\\":0.0,\\\"b\\\":0.001,\\\"c\\\":1.0,\\\"d\\\":0.0},\\\"symbol\\\":\\\"ppk\\\",\\\"baseMeasurement\\\":{\\\"ancestry\\\":\\\"1\\\",\\\"type\\\":\\\"UM\\\"},\\\"type\\\":\\\"UAD\\\"}\",\n   
                \"toUnit\": {\n        \"abcd\": {\n            \"a\":
                0.0,\n            \"b\": 1000.0000000000001,\n            \"c\":
                1.0,\n            \"d\": 0.0\n        },\n       
                \"baseMeasurement\": {\n            \"ancestry\":
                \"1\",\n            \"type\": \"UM\"\n        },\n       
                \"scaleOffset\": {\n            \"offset\":
                \"0.0\",\n            \"scale\": \"0.0\"\n        },\n       
                \"symbol\": \"ppm\",\n        \"type\": \"UM\"\n    },\n   
                \"toUnitPersistableReference\":
                \"{\\\"abcd\\\":{\\\"a\\\":0.0,\\\"b\\\":1.0E-6,\\\"c\\\":1.0,\\\"d\\\":0.0},\\\"symbol\\\":\\\"ppm\\\",\\\"baseMeasurement\\\":{\\\"ancestry\\\":\\\"1\\\",\\\"type\\\":\\\"UM\\\"},\\\"type\\\":\\\"UAD\\\"}\"\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "201":
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/unit/v3/conversion/scale:
    get:
      tags:
        - Core Services > Unit > v3 > conversion > scale
      summary: getConversionScaleOffsetBySymbols
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: namespaces
          in: query
          schema:
            type: string
          example: Energistics_UoM
        - name: fromSymbol
          in: query
          schema:
            type: string
          example: ppk
        - name: toSymbol
          in: query
          schema:
            type: string
          example: ppm
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
    post:
      tags:
        - Core Services > Unit > v3 > conversion > scale
      summary: postConversionScaleOffset
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "{\n    \"fromUnit\": {\n        \"abcd\": {\n            \"a\":
                0.0,\n            \"b\": 1000.0000000000001,\n            \"c\":
                1.0,\n            \"d\": 0.0\n        },\n       
                \"baseMeasurement\": {\n            \"ancestry\":
                \"1\",\n            \"type\": \"UM\"\n        },\n       
                \"scaleOffset\": {\n            \"offset\":
                \"0.0\",\n            \"scale\": \"0.0\"\n        },\n       
                \"symbol\": \"ppm\",\n        \"type\": \"UM\"\n    },\n   
                \"fromUnitPersistableReference\":
                \"{\\\"abcd\\\":{\\\"a\\\":0.0,\\\"b\\\":0.001,\\\"c\\\":1.0,\\\"d\\\":0.0},\\\"symbol\\\":\\\"ppk\\\",\\\"baseMeasurement\\\":{\\\"ancestry\\\":\\\"1\\\",\\\"type\\\":\\\"UM\\\"},\\\"type\\\":\\\"UAD\\\"}\",\n   
                \"toUnit\": {\n        \"abcd\": {\n            \"a\":
                0.0,\n            \"b\": 1000.0000000000001,\n            \"c\":
                1.0,\n            \"d\": 0.0\n        },\n       
                \"baseMeasurement\": {\n            \"ancestry\":
                \"1\",\n            \"type\": \"UM\"\n        },\n       
                \"scaleOffset\": {\n            \"offset\":
                \"0.0\",\n            \"scale\": \"0.0\"\n        },\n       
                \"symbol\": \"ppm\",\n        \"type\": \"UM\"\n    },\n   
                \"toUnitPersistableReference\":
                \"{\\\"abcd\\\":{\\\"a\\\":0.0,\\\"b\\\":1.0E-6,\\\"c\\\":1.0,\\\"d\\\":0.0},\\\"symbol\\\":\\\"ppm\\\",\\\"baseMeasurement\\\":{\\\"ancestry\\\":\\\"1\\\",\\\"type\\\":\\\"UM\\\"},\\\"type\\\":\\\"UAD\\\"}\"\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "201":
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/unit/v3/measurement:
    post:
      tags:
        - Core Services > Unit > v3 > measurement
      summary: postMeasurement
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "{\n    \"essence\": {\n        \"ancestry\": \"1\",\n       
                \"type\": \"UM\"\n    },\n    \"persistableReference\":
                \"<string>\"\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "201":
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
    get:
      tags:
        - Core Services > Unit > v3 > measurement
      summary: getMeasurement
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: ancestry
          in: query
          schema:
            type: integer
          description: (Required) ancestry
          example: "1"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/unit/v3/measurement/search:
    post:
      tags:
        - Core Services > Unit > v3 > measurement
      summary: postSearchMeasurements
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: '"{\n    \"query\": \"<string>\"\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: offset
          in: query
          schema:
            type: integer
          description: offset
          example: "0"
        - name: limit
          in: query
          schema:
            type: integer
          description: limit
          example: "100"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "201":
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/unit/v3/measurement/list:
    get:
      tags:
        - Core Services > Unit > v3 > measurement
      summary: getMeasurements
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: offset
          in: query
          schema:
            type: integer
          description: offset
          example: "0"
        - name: limit
          in: query
          schema:
            type: integer
          description: limit
          example: "100"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/unit/v3/measurement/maps:
    get:
      tags:
        - Core Services > Unit > v3 > measurement
      summary: getMeasurementMaps
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: offset
          in: query
          schema:
            type: integer
          description: offset
          example: "0"
        - name: limit
          in: query
          schema:
            type: integer
          description: limit
          example: "100"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/unit/v3/unit/measurement/preferred:
    get:
      tags:
        - Core Services > Unit > v3 > unit > measurement > preferred
      summary: getPreferredUnitsByMeasurement
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: ancestry
          in: query
          schema:
            type: integer
          description: (Required) ancestry
          example: "1"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
    post:
      tags:
        - Core Services > Unit > v3 > unit > measurement > preferred
      summary: postPreferredUnitsByMeasurement
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "{\n    \"essence\": {\n        \"ancestry\": \"1\",\n       
                \"type\": \"UM\"\n    },\n    \"persistableReference\":
                \"<string>\"\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "201":
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/unit/v3/unit/measurement:
    get:
      tags:
        - Core Services > Unit > v3 > unit > measurement
      summary: getUnitsByMeasurement
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: ancestry
          in: query
          schema:
            type: integer
          description: (Required) ancestry
          example: "1"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
    post:
      tags:
        - Core Services > Unit > v3 > unit > measurement
      summary: postUnitsByMeasurement
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "{\n    \"essence\": {\n        \"ancestry\": \"1\",\n       
                \"type\": \"UM\"\n    },\n    \"persistableReference\":
                \"<string>\"\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "201":
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/unit/v3/unit/unitsystem:
    get:
      tags:
        - Core Services > Unit > v3 > unit > unitsystem
      summary: getUnitBySystemAndMeasurement
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: unitSystemName
          in: query
          schema:
            type: string
          description: (Required) unitSystemName
          example: English
        - name: ancestry
          in: query
          schema:
            type: string
          description: (Required) ancestry
          example: Length
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
    post:
      tags:
        - Core Services > Unit > v3 > unit > unitsystem
      summary: postUnitBySystemAndMeasurement
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "{\n    \"essence\": {\n        \"ancestry\": \"1\",\n       
                \"type\": \"UM\"\n    },\n    \"persistableReference\":
                \"<string>\"\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: unitSystemName
          in: query
          schema:
            type: string
          description: (Required) unitSystemName
          example: English
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "201":
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/unit/v3/unit:
    get:
      tags:
        - Core Services > Unit > v3 > unit
      summary: getUnits
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: offset
          in: query
          schema:
            type: integer
          description: offset
          example: "0"
        - name: limit
          in: query
          schema:
            type: integer
          description: limit
          example: "100"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
    post:
      tags:
        - Core Services > Unit > v3 > unit
      summary: postUnit
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "{\n            \"essence\": {\n                \"scaleOffset\":
                {\n                    \"scale\": 1.0,\n                   
                \"offset\": 0.0\n                },\n                \"symbol\":
                \" \",\n                \"baseMeasurement\":
                {\n                    \"ancestry\":
                \"Dimensionless\",\n                    \"type\":
                \"UM\"\n                },\n                \"type\":
                \"USO\"\n            },\n            \"displaySymbol\": \"
                \",\n            \"name\": \"dimensionless\",\n           
                \"lastModified\": \"19920228\",\n            \"source\":
                \"APIRP661\",\n            \"namespace\": \"RP66\",\n           
                \"persistableReference\":
                \"{\\\"scaleOffset\\\":{\\\"scale\\\":1.0,\\\"offset\\\":0.0},\\\"symbol\\\":\\\"
                \\\",\\\"baseMeasurement\\\":{\\\"ancestry\\\":\\\"Dimensionless\\\",\\\"type\\\":\\\"UM\\\"},\\\"type\\\":\\\"USO\\\"}\"\n       
                }"
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "201":
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/unit/v3/unit/maps:
    get:
      tags:
        - Core Services > Unit > v3 > unit
      summary: getUnitMaps
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: offset
          in: query
          schema:
            type: integer
          description: offset
          example: "0"
        - name: limit
          in: query
          schema:
            type: integer
          description: limit
          example: "100"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/unit/v3/unit/symbol:
    get:
      tags:
        - Core Services > Unit > v3 > unit
      summary: getUnitBySymbol
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: namespaces
          in: query
          schema:
            type: string
          description: (Required) namespaces
          example: Energistics_UoM
        - name: symbol
          in: query
          schema:
            type: string
          description: (Required) symbol
          example: ppm
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/unit/v3/unit/symbols:
    get:
      tags:
        - Core Services > Unit > v3 > unit
      summary: getUnitsBySymbol
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: symbol
          in: query
          schema:
            type: string
          description: (Required) symbol
          example: ppm
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/unit/v3/unit/search:
    post:
      tags:
        - Core Services > Unit > v3 > unit
      summary: postSearchUnits
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: '"{\n    \"query\": \"<string>\"\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: offset
          in: query
          schema:
            type: integer
          description: offset
          example: "0"
        - name: limit
          in: query
          schema:
            type: integer
          description: limit
          example: "100"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "201":
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/unit/v3/unitsystem:
    get:
      tags:
        - Core Services > Unit > v3 > unitsystem
      summary: getUnitSystem
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: name
          in: query
          schema:
            type: string
          description: (Required) name
          example: AWS_Decimetric
        - name: offset
          in: query
          schema:
            type: integer
          description: offset
          example: "0"
        - name: limit
          in: query
          schema:
            type: integer
          description: limit
          example: "100"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
    post:
      tags:
        - Core Services > Unit > v3 > unitsystem
      summary: postUnitSystem
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "{\n    \"essence\": {\n        \"ancestry\":
                \"Metric.AWS_Decimetric\"\n    },\n    \"persistableReference\":
                \"<string>\"\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: offset
          in: query
          schema:
            type: integer
          description: offset
          example: "0"
        - name: limit
          in: query
          schema:
            type: integer
          description: limit
          example: "100"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "201":
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/unit/v3/unitsystem/list:
    get:
      tags:
        - Core Services > Unit > v3 > unitsystem
      summary: getUnitSystemInfoList
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
        - name: offset
          in: query
          schema:
            type: integer
          description: offset
          example: "0"
        - name: limit
          in: query
          schema:
            type: integer
          description: limit
          example: "100"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/unit/actuator/health:
    get:
      tags:
        - Core Services > Unit
      summary: Health Check
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/register/v1/ddms:
    post:
      tags:
        - Core Services > Register > Ddms
      summary: Create a DDMS registration
      description: >-
        Create a DDMS registration using an OpenApi spec V3 document. Required
        roles: 'users.datalake.editors' or 'users.datalake.admins'
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "{\n  \"id\": \"example-id-390069-1\",\n  \"name\":
                \"example-nameaa\",\n  \"description\":
                \"exampledescription\",\n  \"contactEmail\":
                \"aaabc@test.com\",\n  \"interfaces\": [\n    {\n     
                \"entityType\": \"wellbore\",\n      \"schema\": {\n         
                \"openapi\": \"3.0.0\",\n            \"info\": {\n           
                \"description\": \"This is a sample Wellbore domain DM
                service.\",\n            \"version\": \"1.0.0\",\n           
                \"title\": \"OSDU Wellbore Domain DM Service\",\n           
                \"contact\": {\n                \"email\":
                \"osdu-sre@opengroup.org\"\n            }\n           
                },\n            \"servers\": [\n            {\n               
                \"url\": \"https://subsurface.data.osdu.com/v1\"\n           
                }\n            ],\n            \"tags\": [\n           
                {\n                \"name\": \"wellbore\",\n               
                \"description\": \"Wellbore data type services\"\n           
                }\n            ],\n            \"paths\": {\n           
                \"/wellbore/{wellboreId}\": {\n                \"get\":
                {\n                \"tags\": [\n                   
                \"wellbore\"\n                ],\n                \"summary\":
                \"Find wellbore by ID\",\n                \"description\":
                \"Returns a single wellbore\",\n                \"operationId\":
                \"getWellboreById\",\n               
                \"x-ddms-retrieve-entity\": true,\n               
                \"parameters\": [\n                    {\n                   
                \"name\": \"wellboreId\",\n                    \"in\":
                \"path\",\n                    \"description\": \"ID of wellbore
                to return\",\n                    \"required\":
                true,\n                    \"schema\":
                {\n                        \"type\":
                \"string\"\n                    }\n                   
                }\n                ],\n                \"responses\":
                {\n                    \"200\": {\n                   
                \"description\": \"successful operation\",\n                   
                \"content\": {\n                        \"application/json\":
                {\n                        \"schema\":
                {\n                            \"$ref\":
                \"#/components/schemas/wellbore\"\n                       
                }\n                        }\n                   
                }\n                    },\n                    \"400\":
                {\n                    \"description\": \"Invalid ID
                supplied\"\n                    },\n                    \"401\":
                {\n                    \"description\": \"Not
                authorized\"\n                    },\n                   
                \"404\": {\n                    \"description\": \"Wellbore not
                found\"\n                    }\n                }\n           
                }\n        }\n    }        \n      }\n    }\n  ]\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: >-
            (Required) Specifies the partition to use. This should be either the
            partition name associated with the partition.
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "201":
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                name: <string>
                description: <string>
                contactEmail: <string>
                interfaces:
                  - schema: <object>
                    entityType: <string>
                  - schema: <object>
                    entityType: <string>
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "409":
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "429":
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "500":
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "502":
          description: Bad Gateway
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "503":
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
    get:
      tags:
        - Core Services > Register > Ddms
      summary: Query for DDMS registrations
      description: >-
        Query for DDMS registrations allowing retrievals by type. Required
        roles: 'users.datalake.viewers' or 'users.datalake.editors' or
        'users.datalake.admins'
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: >-
            (Required) Specifies the partition to use. This should be either the
            partition name associated with the partition.
          example: "{{data_partition_id}}"
        - name: type
          in: query
          schema:
            type: string
          description: "(Required) "
          example: wellbore
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <string>
                  name: <string>
                  description: <string>
                  contactEmail: <string>
                  interfaces:
                    - schema: <object>
                      entityType: <string>
                    - schema: <object>
                      entityType: <string>
                - id: <string>
                  name: <string>
                  description: <string>
                  contactEmail: <string>
                  interfaces:
                    - schema: <object>
                      entityType: <string>
                    - schema: <object>
                      entityType: <string>
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "429":
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "500":
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "502":
          description: Bad Gateway
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "503":
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
  /api/register/v1/ddms/{id}:
    get:
      tags:
        - Core Services > Register > Ddms
      summary: Get a DDMS registration
      description: >-
        Get a DDMS registration with the given id. Required roles:
        'users.datalake.viewers' or 'users.datalake.editors' or
        'users.datalake.admins'
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: >-
            (Required) Specifies the partition to use. This should be either the
            partition name associated with the partition.
          example: "{{data_partition_id}}"
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: "(Required) "
          example: example-id-390069-1
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                name: <string>
                description: <string>
                contactEmail: <string>
                interfaces:
                  - schema: <object>
                    entityType: <string>
                  - schema: <object>
                    entityType: <string>
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "429":
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "500":
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "502":
          description: Bad Gateway
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "503":
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
    delete:
      tags:
        - Core Services > Register > Ddms
      summary: Delete a DDMS registration
      description: >-
        Delete a DDMS registration with the given id. Required roles:
        'users.datalake.admins'
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: >-
            (Required) Specifies the partition to use. This should be either the
            partition name associated with the partition.
          example: "{{data_partition_id}}"
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: "(Required) "
          example: example-id-390069-1
      responses:
        "204":
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "429":
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "500":
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "502":
          description: Bad Gateway
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "503":
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
  /api/register/v1/subscription:
    post:
      tags:
        - Core Services > Register > Subscription
      summary: Create a subscription
      description: >-
        Create a subscription. Required roles: 'users.datalake.editors' or
        'users.datalake.admins'
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "{\n\t\"id\": \"abc123456789\",\n\t\"name\": \"My
                listener\",\n\t\"description\": \"My test
                listener.\",\n\t\"pushEndpoint\":\"{{osduonaws_base_url}}/api/register/v1/awstest/aws/challenge/1\",\n\t\"topic\":\"records-changed\",\n\t\"secret\":
                {\n\t\t\"secretType\" :
                \"HMAC\",\n\t\"value\":\"02030405060708090A0B0C0D0E0F\"\n\t}\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: >-
            (Required) Specifies the partition to use. This should be either the
            partition name associated with the partition.
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "201":
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: dGVzdC1uYW1l
                name: test-subscription
                description: test description
                topic: data-changed-v1
                pushEndpoint: https://myListener.com
                createdBy: test@myapp.com
                notificationId: de-6ee609b9-620e-477b-86f9-3b8907643a12
                createdOnEpoch:
                  seconds: 1572275081
                  nanos: 51000000
                secret:
                  secretType: <string>
                  value: <object>
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "409":
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "429":
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "500":
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "502":
          description: Bad Gateway
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "503":
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
  /api/register/v1/subscription/{id}:
    get:
      tags:
        - Core Services > Register > Subscription
      summary: Get a subscription
      description: >-
        Get a subscription with its Id. Required role: 'users.datalake.editors'
        or 'users.datalake.admins'
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: >-
            (Required) Specifies the partition to use. This should be either the
            partition name associated with the partition.
          example: "{{data_partition_id}}"
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: "(Required) "
          example: "{{sid}}"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: dGVzdC1uYW1l
                name: test-subscription
                description: test description
                topic: data-changed-v1
                pushEndpoint: https://myListener.com
                createdBy: test@myapp.com
                notificationId: de-6ee609b9-620e-477b-86f9-3b8907643a12
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "429":
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "500":
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "502":
          description: Bad Gateway
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "503":
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
    delete:
      tags:
        - Core Services > Notification
      summary: Delete a subscription
      description: >-
        Delete a subscription with its Id. Required role:
        'users.datalake.admins'
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: >-
            (Required) Specifies the partition to use. This should be either the
            partition name associated with the partition.
          example: "{{data_partition_id}}"
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: "(Required) "
          example: "{{sid}}"
      responses:
        "204":
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "429":
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "500":
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "502":
          description: Bad Gateway
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "503":
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
  /api/register/v1/subscription/{id}/secret:
    put:
      tags:
        - Core Services > Register > Subscription
      summary: Update secret for subscription
      description: >-
        Update secret for a subscription. Required role:
        'users.datalake.editors' or 'users.datalake.admins'
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "{\n    \"secretType\": \"HMAC\",\n    \"value\":
                \"02030405060708090A0B0C0D0E0F\"\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: >-
            (Required) Specifies the partition to use. This should be either the
            partition name associated with the partition.
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: "(Required) "
          example: "{{sid}}"
      responses:
        "204":
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "429":
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "500":
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "502":
          description: Bad Gateway
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "503":
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
  /api/register/v1/action:
    post:
      tags:
        - Core Services > Register > Action
      summary: Create an action registration
      description: "Create an action registration. Required role: 'users.datalake.admins'"
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "{\n\t\"id\": \"createtest1hh26ww\",\n\t\"name\": \"My
                listener\",\n\t\"description\": \"My test
                listener.\",\n\t\"url\":\"https://myapp.osdu.opengroup.org/action/data123\",\n\t\"img\":\"https://mycdn.com/img.png\",\n\t\"contactEmail\":
                \"integrationtest@test.com\",\n\t\"filter\":
                {\n\t\"entityType\": [\"*\"],\n\t\"source\":
                [\"*\"],\n\t\"version\": [\"*\"]}\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: >-
            (Required) Specifies the partition to use. This should be either the
            partition name associated with the partition.
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "201":
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: in minim ullamco
                name: consequat
                description: reprehenderit veniam fugiat incididunt in
                contactEmail: anim eu deserunt
                img: aute sunt deserunt
                url: https://myapp.osdu.com/action/{type}/{id}
                filter:
                  entityType:
                    - - "*"
                    - - "*"
                  source:
                    - - "*"
                    - - "*"
                  version:
                    - - "*"
                    - - "*"
                createdOnEpoch:
                  seconds: -62121609
                  nanos: 45452447
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "409":
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "429":
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "500":
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "502":
          description: Bad Gateway
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "503":
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
  /api/register/v1/action/{id}:
    get:
      tags:
        - Core Services > Register > Action
      summary: Get an action registration
      description: >-
        Get an action registration with the given id. Required roles:
        'users.datalake.viewers' or 'users.datalake.editors' or
        'users.datalake.admins'
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: >-
            (Required) Specifies the partition to use. This should be either the
            partition name associated with the partition.
          example: "{{data_partition_id}}"
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: "(Required) "
          example: createtest1hh26ww
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: in minim ullamco
                name: consequat
                description: reprehenderit veniam fugiat incididunt in
                contactEmail: anim eu deserunt
                img: aute sunt deserunt
                url: https://myapp.osdu.com/action/{type}/{id}
                filter:
                  entityType:
                    - - "*"
                    - - "*"
                  source:
                    - - "*"
                    - - "*"
                  version:
                    - - "*"
                    - - "*"
                createdOnEpoch:
                  seconds: -62121609
                  nanos: 45452447
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "429":
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "500":
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "502":
          description: Bad Gateway
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "503":
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
    delete:
      tags:
        - Core Services > Register > Action
      summary: Delete an action  registration
      description: >-
        Delete an action registration with the given id. Required role:
        'users.datalake.admins'
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: >-
            (Required) Specifies the partition to use. This should be either the
            partition name associated with the partition.
          example: "{{data_partition_id}}"
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: "(Required) "
          example: createtest1hh26ww
      responses:
        "204":
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "429":
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "500":
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "502":
          description: Bad Gateway
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "503":
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
  /api/register/v1/action:retrieve:
    post:
      tags:
        - Core Services > Register > Action
      summary: >-
        Query for action registrations and substitutes any action with the given
        parameters
      description: >-
        Retrieve an action registration. Required roles:
        'users.datalake.viewers' or 'users.datalake.editors' or
        'users.datalake.admins'
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "{\n    \"id\": \"retrieveactiontest12345\",\n    \"kind\":
                \"opendes:source:type:1.0.0\",\n    \"data\": {\n       
                \"msg\": \"hello\"\n    }\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: >-
            (Required) Specifies the partition to use. This should be either the
            partition name associated with the partition.
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: irure ut
                  name: si
                  description: commodo proident
                  contactEmail: Duis adipisicing Lorem
                  img: adipisicing eu aliquip dolore
                  url: https://myapp.osdu.com/action/{type}/{id}
                  filter:
                    entityType:
                      - - "*"
                      - - "*"
                    source:
                      - - "*"
                      - - "*"
                    version:
                      - - "*"
                      - - "*"
                  createdOnEpoch:
                    seconds: 68143450
                    nanos: -64586265
                - id: sit dolore aliquip proident dolor
                  name: occaecat eiusmod est
                  description: dolor ad
                  contactEmail: dolore dolor enim exercitation
                  img: commodo proident incididunt velit
                  url: https://myapp.osdu.com/action/{type}/{id}
                  filter:
                    entityType:
                      - - "*"
                      - - "*"
                    source:
                      - - "*"
                      - - "*"
                    version:
                      - - "*"
                      - - "*"
                  createdOnEpoch:
                    seconds: 65223635
                    nanos: -61344308
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "409":
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "429":
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "500":
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "502":
          description: Bad Gateway
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "503":
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
  /api/register/v1/action:test:
    post:
      tags:
        - Core Services > Register > Action
      summary: Test an action registration
      description: >-
        Test an action registration. Required roles: 'users.datalake.viewers' or
        'users.datalake.editors' or 'users.datalake.admins'
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "{\n  \"action\": {\n    \"id\": \"petrel-launch-project\",\n   
                \"name\": \"Petrel Project\",\n    \"description\": \"This
                action launches the Petrel projects landing page that holds the
                selected data.\",\n    \"url\":
                \"https://myapp.osdu.opengroup.org/action/{data.uri:^(?:[^\\\\/]*(?:\\\\/(?:\\\\/[^\\\\/]*\\\\/?)?)?([^?]+)(?:\\\\??.+)?)$}\",\n   
                \"img\": \"https://mycdn.com/img.png\",\n    \"filter\":
                {\n      \"entityType\": [\"regularheightfield\",
                \"project\"],\n      \"source\": [\"petrel\"],\n     
                \"version\": [\"*\"]\n    }\n  },\n  \"testPayload\": {\n   
                \"id\": \"common:regularheightfield:123456\",\n    \"kind\":
                \"common:petrel:regularheightfield:1.0.0\",\n    \"data\":
                {\n      \"uri\": \"https://myproj.com/abc123\"\n    }\n  }\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: >-
            (Required) Specifies the partition to use. This should be either the
            partition name associated with the partition.
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: et cupidatat id nostrud elit
                errors: amet veniam
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "409":
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "429":
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "500":
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "502":
          description: Bad Gateway
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "503":
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
  /api/register/v1/topics:
    get:
      tags:
        - Core Services > Register > Action
      summary: List all topics
      description: >-
        List all topics that you can create a subscription for, along with the
        corresponding sample messages. Required role: 'users.datalake.editors'
        or 'users.datalake.admins'
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: >-
            (Required) Specifies the partition to use. This should be either the
            partition name associated with the partition.
          example: "{{data_partition_id}}"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - name: records-changed
                  description: >-
                    This notification is sent whenever a record is created,
                    updated or deleted.
                  state: ACTIVE
                  example:
                    - id: common:test:123
                      kind: common:source:type:1.0.0
                      op: deleted
                    - id: common:test:123
                      kind: common:source:type:1.0.0
                      op: deleted
                - name: records-changed
                  description: >-
                    This notification is sent whenever a record is created,
                    updated or deleted.
                  state: ACTIVE
                  example:
                    - id: common:test:123
                      kind: common:source:type:1.0.0
                      op: deleted
                    - id: common:test:123
                      kind: common:source:type:1.0.0
                      op: deleted
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "429":
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "500":
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "502":
          description: Bad Gateway
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
        "503":
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                code: 58518494
                reason: labore voluptate est
                message: sit sed ipsum incididunt veniam
  /api/partition/v1/partitions/mypartition3:
    post:
      tags:
        - Core Services > Partition
      summary: Create Partition
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "{\n    \"properties\": {\n          \"compliance-ruleset\":
                {\n              \"value\": \"shared\"\n          },\n         
                \"elastic-endpoint\": {\n              \"sensitive\":
                true,\n              \"value\": \"elastic-endpoint\"\n         
                },\n          \"elastic-username\": {\n             
                \"sensitive\": true,\n              \"value\":
                \"elastic-username\"\n          },\n         
                \"elastic-password\": {\n              \"sensitive\":
                true,\n              \"value\": \"elastic-password\"\n         
                }\n      }\n\n}\n"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Core Services > Partition
      summary: Get Partition
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Core Services > Partition
      summary: Delete Partition
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "204":
          description: Successful response
          content:
            application/json: {}
  /api/partition/v1/actuator/health:
    get:
      tags:
        - Core Services > Partition
      summary: Health Check
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/crs/converter/v3/info:
    get:
      tags:
        - Core Services > CRS Conversion > v3 > info
      summary: info
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                artifactId: <string>
                branch: <string>
                buildTime: <string>
                commitId: <string>
                commitMessage: <string>
                connectedOuterServices:
                  - value: >-
                      reference #/components/schemas/ConnectedOuterService not
                      found in the OpenAPI spec
                  - value: >-
                      reference #/components/schemas/ConnectedOuterService not
                      found in the OpenAPI spec
                groupId: <string>
                version: <string>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/crs/converter/v3/convertTrajectory:
    post:
      tags:
        - Core Services > CRS Conversion > v3 > convertTrajectory
      summary: Convert trajectory stations
      description: >-
        Convert a list of trajectory stations, given the unit and spatial
        context and a reference point in 3D where MD==0.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                trajectoryCRS: >-
                  {{data_partition_id}}:reference-data--CoordinateReferenceSystem:BoundProjected:EPSG::23032_EPSG::1612:
                azimuthReference: TN
                unitZ: "{{data_partition_id}}:reference-data--UnitOfMeasure:m:"
                referencePoint:
                  x: 400000
                  "y": 6500000
                  z: 0
                inputKind: MD_Incl_Azim
                interpolate: true
                inputStations:
                  - md: 1000
                    azimuth: 100
                    inclination: 10
                  - md: 2000
                    azimuth: 200
                    inclination: 200
                method: AzimuthalEquidistant
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                localCRS: <string>
                method: <string>
                stations:
                  - azimuthGN: <double>
                    azimuthTN: <double>
                    dxTN: <double>
                    dyTN: <double>
                    inclination: <double>
                    md: <double>
                    point:
                      x: <double>
                      "y": <double>
                      z: <double>
                    wgs84Longitude: <double>
                    wgs84Latitude: <double>
                    dls: <double>
                    original: <boolean>
                    dz: <double>
                  - azimuthGN: <double>
                    azimuthTN: <double>
                    dxTN: <double>
                    dyTN: <double>
                    inclination: <double>
                    md: <double>
                    point:
                      x: <double>
                      "y": <double>
                      z: <double>
                    wgs84Longitude: <double>
                    wgs84Latitude: <double>
                    dls: <double>
                    original: <boolean>
                    dz: <double>
                trajectoryCRS: <string>
                unitDls: <string>
                unitZ: <string>
                unitXY: <string>
                operationsApplied:
                  - <string>
                  - <string>
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error: <string>
        "503":
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error: <string>
  /api/crs/converter/v3/convertGeoJson:
    post:
      tags:
        - Core Services > CRS Conversion > v3 > convertGeoJson
      summary: Convert a GeoJSON or AnyCrsGeoJson structure
      description: >-
        Convert a GeoJSON or AnyCrsGeoJson structure to a specified target CRS.
        GeoJSON is declared - by definition - to be in the context of WGS 84.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                toCRS: >-
                  {{data_partition_id}}:reference-data--CoordinateReferenceSystem:Geographic2D:EPSG::4326:
                toUnitZ: "{{data_partition_id}}:reference-data--UnitOfMeasure:m:"
                featureCollection:
                  features:
                    - geometry:
                        coordinates:
                          - 313405.9477893702
                          - 6544797.620047403
                          - 6.561679790026246
                        bbox: null
                        type: AnyCrsPoint
                      bbox: null
                      properties: {}
                      type: AnyCrsFeature
                  bbox: null
                  properties: {}
                  CoordinateReferenceSystemID: >-
                    {{data_partition_id}}:reference-data--CoordinateReferenceSystem:BoundProjected:EPSG::23032_EPSG::1612:
                  VerticalUnitID: "{{data_partition_id}}:reference-data--UnitOfMeasure:m:"
                  type: AnyCrsFeatureCollection
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                totalCount: <integer>
                successCount: <integer>
                featureCollection:
                  type: AnyCrsFeatureCollection
                  features:
                    - type: AnyCrsFeature
                      properties:
                        sint_49: {}
                        enim_: {}
                        consequat__: {}
                      geometry:
                        type: MultiPolygon
                        coordinates: {}
                      bbox:
                        - <number>
                        - <number>
                        - <number>
                        - <number>
                    - type: AnyCrsFeature
                      properties:
                        nisia: {}
                        in_d_d: {}
                      geometry:
                        type: Point
                        coordinates: {}
                      bbox:
                        - <number>
                        - <number>
                        - <number>
                        - <number>
                  bbox:
                    - <number>
                    - <number>
                    - <number>
                    - <number>
                  persistableReferenceCrs: <string>
                  CoordinateReferenceSystemID: <string>
                  VerticalUnitID: <string>
                  persistableReferenceUnitZ: <string>
                operationsApplied:
                  - <string>
                  - <string>
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error: <string>
        "503":
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error: <string>
  /api/crs/converter/v3/convertBinGrid:
    post:
      tags:
        - Core Services > CRS Conversion > v3 > convertBinGrid
      summary: >-
        CRS Convert service is an OSDU platform standard method for QC and
        conversion of Bin Grids, associated in particular with ingested seismic
        volumes, that describe the “real world” (Easting, Northing) of bin grid
        centers at (inline, crossline) local coordin
      description: >-
        QC check of the “squareness” of a Bin Grid defined using 4 corner
        points. Coordinate conversion of a Bin Grid to a new CRS and “square it
        up” (if target CRS is same as original CRS then conversion is omitted,
        and the squareness test is done in the original CRS). Calculate derived
        P6 parameters from the input 4 corners. Calculate WGS 84 coordinates at
        the corners. Returns converted Bin Grid and a QC of squareness of the
        bin grid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                toCRS: >-
                  osdu:reference-data--CoordinateReferenceSystem:BoundProjected:EPSG::32064_EPSG::15851:
                inBinGrid:
                  CoveragePercent: 1
                  ABCDBinGridSpatialLocation:
                    AsIngestedCoordinates:
                      type: AnyCrsFeatureCollection
                      CoordinateReferenceSystemID: >-
                        osdu:reference-data--CoordinateReferenceSystem:Projected:EPSG::32615:
                      features:
                        - type: AnyCrsFeature
                          properties:
                            Kind: >-
                              osdu:wks:AbstractGeoJson.PropertiesBinGridCorners:1.0.0
                            PointProperties:
                              - Inline: 1
                                Crossline: 1000
                          geometry:
                            type: AnyCrsPoint
                            coordinates:
                              - 500000
                              - 3000000
                        - type: AnyCrsFeature
                          properties:
                            Kind: >-
                              osdu:wks:AbstractGeoJson.PropertiesBinGridCorners:1.0.0
                            PointProperties:
                              - Inline: 1
                                Crossline: 2000
                          geometry:
                            type: AnyCrsPoint
                            coordinates:
                              - 500000
                              - 3100000
                        - type: AnyCrsFeature
                          properties:
                            Kind: >-
                              osdu:wks:AbstractGeoJson.PropertiesBinGridCorners:1.0.0
                            PointProperties:
                              - Inline: 101
                                Crossline: 1000
                          geometry:
                            type: AnyCrsPoint
                            coordinates:
                              - 600000
                              - 3000000
                        - type: AnyCrsFeature
                          properties:
                            Kind: >-
                              osdu:wks:AbstractGeoJson.PropertiesBinGridCorners:1.0.0
                            PointProperties:
                              - Inline: 101
                                Crossline: 2000
                          geometry:
                            type: AnyCrsPoint
                            coordinates:
                              - 600000
                              - 3100000
                  P6ScaleFactorOfBinGrid: 1
                  P6BinNodeIncrementOnIaxis: 1
                  P6BinNodeIncrementOnJaxis: 1
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                maxMisLocation:
                  dI: <double>
                  dJ: <double>
                outBinGrid:
                  BinGridName: <string>
                  BinGridTypeID: <string>
                  SourceBinGridID: <integer>
                  SourceBinGridAppID: <string>
                  CoveragePercent: <double>
                  BinGridDefinitionMethodTypeID: <string>
                  P6TransformationMethod: <integer>
                  P6BinGridOriginI: <double>
                  P6BinGridOriginJ: <double>
                  P6BinGridOriginEasting: <double>
                  P6BinGridOriginNorthing: <double>
                  P6ScaleFactorOfBinGrid: <double>
                  P6BinWidthOnIaxis: <double>
                  P6BinWidthOnJaxis: <double>
                  P6MapGridBearingOfBinGridJaxis: <double>
                  P6BinNodeIncrementOnIaxis: <integer>
                  P6BinNodeIncrementOnJaxis: <integer>
                  ABCDBinGridSpatialLocation:
                    SpatialLocationCoordinatesDate: <string>
                    QuantitativeAccuracyBandID: <string>
                    QualitativeSpatialAccuracyTypeID: <string>
                    CoordinateQualityCheckPerformedBy: <string>
                    CoordinateQualityCheckDateTime: <string>
                    CoordinateQualityCheckRemarks:
                      - <string>
                      - <string>
                    AppliedOperations:
                      - <string>
                      - <string>
                    SpatialParameterTypeID: <string>
                    SpatialGeometryTypeID: <string>
                    AsIngestedCoordinates:
                      persistableReferenceCrs: <string>
                      CoordinateReferenceSystemID: <string>
                      type: <string>
                      features:
                        - type: <string>
                          properties:
                            Kind: <string>
                            PointProperties:
                              - Label: <string>
                                Inline: <integer>
                                Crossline: <integer>
                              - Label: <string>
                                Inline: <integer>
                                Crossline: <integer>
                          geometry:
                            coordinates:
                              - <double>
                              - <double>
                            type: <string>
                        - type: <string>
                          properties:
                            Kind: <string>
                            PointProperties:
                              - Label: <string>
                                Inline: <integer>
                                Crossline: <integer>
                              - Label: <string>
                                Inline: <integer>
                                Crossline: <integer>
                          geometry:
                            coordinates:
                              - <double>
                              - <double>
                            type: <string>
                    Wgs84Coordinates:
                      features:
                        - type: <string>
                          properties:
                            Kind: <string>
                            PointProperties:
                              - Label: <string>
                                Inline: <integer>
                                Crossline: <integer>
                              - Label: <string>
                                Inline: <integer>
                                Crossline: <integer>
                          geometry:
                            coordinates:
                              - <double>
                              - <double>
                            type: <string>
                        - type: <string>
                          properties:
                            Kind: <string>
                            PointProperties:
                              - Label: <string>
                                Inline: <integer>
                                Crossline: <integer>
                              - Label: <string>
                                Inline: <integer>
                                Crossline: <integer>
                          geometry:
                            coordinates:
                              - <double>
                              - <double>
                            type: <string>
                      Type: <string>
                AppliedOperations:
                  - <string>
                  - <string>
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error: <string>
        "503":
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error: <string>
  /api/crs/converter/v3/convert:
    post:
      tags:
        - Core Services > CRS Conversion > v3 > convert
      summary: Convert a list of points
      description: Convert a list of points
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                fromCRS: >-
                  osdu:reference-data--CoordinateReferenceSystem:BoundProjected:EPSG::29193_EPSG::1867:
                toCRS: >-
                  osdu:reference-data--CoordinateReferenceSystem:Geographic2D:EPSG::4326:
                points:
                  - x: 697339.525
                    "y": 7239989.403
                    z: 0
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                successCount: <integer>
                points:
                  - x: <double>
                    "y": <double>
                    z: <double>
                  - x: <double>
                    "y": <double>
                    z: <double>
                operationsApplied:
                  - <string>
                  - <string>
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error: <string>
        "503":
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error: <string>
  /api/crs/converter/actuator/health:
    get:
      tags:
        - Core Services > CRS Conversion
      summary: Health of CRS Conversion
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/crs/catalog/v3/coordinate-transformation:
    post:
      tags:
        - Core Services > CRS Catalog > V3
      summary: Search Coordinate Transformation 3
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                sourceCRS: >-
                  osdu:reference-data--CoordinateReferenceSystem:Geographic2D:EPSG::4267:
                targetCRS: >-
                  osdu:reference-data--CoordinateReferenceSystem:Geographic2D:EPSG::4326:
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Core Services > CRS Catalog > V3
      summary: V3 Get coordinate transformations
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
        - name: recordId
          in: query
          schema:
            type: string
          example: osdu:reference-data--CoordinateTransformation:EPSG::1111
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/crs/catalog/v3/coordinate-reference-system:
    post:
      tags:
        - Core Services > CRS Catalog > V3
      summary: Search Coordinate Reference Systems
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                codeSpace: EPSG
                limit: 1
                offset: 1
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Core Services > CRS Catalog > V3
      summary: Coordinate Reference System
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
        - name: dataId
          in: query
          schema:
            type: string
          example: Geographic2D:EPSG::4158
        - name: recordId
          in: query
          schema:
            type: string
          example: >-
            osdu:reference-data--CoordinateReferenceSystem:Geographic2D:EPSG::4158
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/crs/catalog/v3/points-in-aou:
    post:
      tags:
        - Core Services > CRS Catalog > V3
      summary: Check area of use
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                recordId: >-
                  osdu:reference-data--CoordinateReferenceSystem:Geographic2D:EPSG::4204
                points:
                  - latitude: 16
                    longitude: 34
                  - latitude: 16.5
                    longitude: 34.1
                  - latitude: 16.5
                    longitude: 35.8
                  - latitude: 80.1
                    longitude: 90
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/crs/catalog/actuator/health:
    get:
      tags:
        - Core Services > CRS Catalog
      summary: Health Check
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/notification/v1/push-handlers/records-changed:
    post:
      tags:
        - Core Services > Notification
      summary: recordChanged
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Type: Notification
                message:
                  attributes:
                    correlation-id: 39137f49-67d6-4001-a6aa-15521ef4f49e
                    data-partition-id: osdu
                  data: >-
                    W3sia2luZCI6InRlc3RraW5kIiwiaWQiOiJ0ZXN0aWQiLCJvcGVyYXRpb250eXBlIjoiY3JlYXRlIn0seyJraW5kIjoidGVzdGtpbmQyIiwiaWQiOiJ0ZXN0aWQyIiwib3BlcmF0aW9udHlwZSI6InVwZGF0ZSJ9XQ
                  messageId: "136969346945"
                subscription: "{{nid}}"
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          description: (Required) tenant
          example: "{{data_partition_id}}"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: "*/*"
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "201":
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/seismic-store/v3/svcstatus:
    get:
      tags:
        - Ingestion > SeismicDMS > General
      summary: STATUS SET
      parameters:
        - name: x-api-key
          in: header
          schema:
            type: string
          example: "{{SVC_API_KEY}}"
        - name: appkey
          in: header
          schema:
            type: string
          example: "{{DE_APP_KEY}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/seismic-store/v3/svcstatus/access:
    get:
      tags:
        - Ingestion > SeismicDMS > General
      summary: ACCESS
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{STOKEN}}
        - name: x-api-key
          in: header
          schema:
            type: string
          example: "{{SVC_API_KEY}}"
        - name: appkey
          in: header
          schema:
            type: string
          example: "{{DE_APP_KEY}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/seismic-store/v3/tenant/osdu:
    get:
      tags:
        - Ingestion > SeismicDMS > Tenant
      summary: TENANT GET
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{STOKEN}}
        - name: x-api-key
          in: header
          schema:
            type: string
          example: "{{SVC_API_KEY}}"
        - name: appkey
          in: header
          schema:
            type: string
          example: "{{DE_APP_KEY}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/seismic-store/v3/tenant/sdpath:
    get:
      tags:
        - Ingestion > SeismicDMS > Tenant
      summary: GET sdpath
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{STOKEN}}
        - name: x-api-key
          in: header
          schema:
            type: string
          example: "{{SVC_API_KEY}}"
        - name: appkey
          in: header
          schema:
            type: string
          example: "{{DE_APP_KEY}}"
        - name: datapartition
          in: query
          schema:
            type: string
          example: osdu
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/seismic-store/v3/subproject/tenant/osdu/subproject/subproject50:
    post:
      tags:
        - Ingestion > SeismicDMS > Subproject
      summary: SUBPROJECT REGISTER
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "{\n\t\"admin\": \"admin@testing.com\",\n\t\"storage_class\":
                \"REGIONAL\",\n\t\"storage_location\": \"US-CENTRAL1\"\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{STOKEN}}
        - name: x-api-key
          in: header
          schema:
            type: string
          example: "{{SVC_API_KEY}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: ltag
          in: header
          schema:
            type: string
          example: osdu-public-usa-dataset-1
        - name: appkey
          in: header
          schema:
            type: string
          example: "{{DE_APP_KEY}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Ingestion > SeismicDMS > Subproject
      summary: SUBPROJECT GET NEW
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{STOKEN}}
        - name: x-api-key
          in: header
          schema:
            type: string
          example: "{{SVC_API_KEY}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: appkey
          in: header
          schema:
            type: string
          example: "{{DE_APP_KEY}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Ingestion > SeismicDMS > Subproject
      summary: SUBPROJECT PATCH
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: '""'
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{STOKEN}}
        - name: x-api-key
          in: header
          schema:
            type: string
          example: "{{SVC_API_KEY}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: ltag
          in: header
          schema:
            type: string
          example: osdu-public-usa-dataset-1
        - name: appkey
          in: header
          schema:
            type: string
          example: "{{DE_APP_KEY}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Ingestion > SeismicDMS > Subproject
      summary: SUBPROJECT DELETE
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{STOKEN}}
        - name: x-api-key
          in: header
          schema:
            type: string
          example: "{{SVC_API_KEY}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: appkey
          in: header
          schema:
            type: string
          example: "{{DE_APP_KEY}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/seismic-store/v3/subproject/tenant/osdu:
    get:
      tags:
        - Ingestion > SeismicDMS > Subproject
      summary: SUBPROJECT LIST
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{STOKEN}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: x-api-key
          in: header
          schema:
            type: string
          example: "{{SVC_API_KEY}}"
        - name: appkey
          in: header
          schema:
            type: string
          example: "{{DE_APP_KEY}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/dataset/v1/storageInstructions:
    post:
      tags:
        - Dataset > dataset-FileCollection.generic
      summary: 2. Get Storage Instructions
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
        - name: kindSubType
          in: query
          schema:
            type: string
          example: dataset--FileCollection.Generic
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/dataset/v1/registerDataset:
    put:
      tags:
        - Dataset > dataset-FileCollection.generic
      summary: 4. Register Dataset
      requestBody:
        content:
          "*/*":
            schema:
              type: string
              example: >-
                "{\n\t\"datasetRegistries\": [{\n\t\t\"kind\":
                \"{{data_partition_id}}:wks:dataset--FileCollection.Generic:1.0.0\",\n\t\t\"type\":
                \"dataset-registry\",\n\t\t\"data\": {\n\t\t\t\"ResourceID\":
                \"srn:osdu:file:dc556e0e3a554105a80cfcb19372a62d:\",\n\t\t\t\"ResourceTypeID\":
                \"srn:type:file-collection/ovds:\",\n\t\t\t\"ResourceSecurityClassification\":
                \"srn:reference-data/ResourceSecurityClassification:RESTRICTED:\",\n\t\t\t\"ResourceSource\":
                \"Matt Wise Inc\",\n\t\t\t\"ResourceName\":
                \"test.txt\",\n            \"ResourceDescription\": \"Test
                upload/delivery\",\n\t\t\t\"DatasetProperties\":
                {\n\t\t\t\t\t\"IndexFilePath\":
                \"{{file_collection_source}}\",\n                   
                \"FileCollectionPath\":
                \"{{file_collection_source}}\"\n\t\t\t}\n\t\t},\n\t\t\"namespace\":
                \"{{data_partition_id}}:{{data_partition_id}}\",\n\t\t\"legal\":
                {\n\t\t\t\"legaltags\":
                [\n\t\t\t\t\"{{LegalTagName}}\"\n\t\t\t],\n\t\t\t\"otherRelevantDataCountries\":
                [\n\t\t\t\t\"US\"\n\t\t\t],\n\t\t\t\"status\":
                \"compliant\"\n\t\t},\n\t\t\"acl\": {\n\t\t\t\"viewers\":
                [\n\t\t\t\t\"data.default.viewers@{{data_partition_id}}{{domain}}\"\n\t\t\t],\n\t\t\t\"owners\":
                [\n\t\t\t\t\"data.default.owners@{{data_partition_id}}{{domain}}\"\n\t\t\t]\n\t\t}\n\n\t}]\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "201":
          description: Successful response
          content:
            application/json: {}
  /api/dataset/v1/retrievalInstructions:
    post:
      tags:
        - Dataset > dataset-FileCollection.generic
      summary: 5. Get Retrieval Instructions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                datasetRegistryIds:
                  - "{{dataset_registry_id}}"
      security:
        - bearerAuth: []
      parameters:
        - name: data-partition-id
          in: header
          schema:
            type: string
          example: "{{data_partition_id}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
